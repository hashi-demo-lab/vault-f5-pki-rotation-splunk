[{
 "configuration": {
  "provider_config": {
   "aws": {
    "expressions": {
     "region": {
      "references": [
       "var.aws_region"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/aws",
    "name": "aws",
    "version_constraint": "4.54.0"
   },
   "hcp": {
    "full_name": "registry.terraform.io/hashicorp/hcp",
    "name": "hcp"
   },
   "module.bigip:null": {
    "full_name": "registry.terraform.io/hashicorp/null",
    "module_address": "module.bigip",
    "name": "null",
    "version_constraint": "\u003e 2.1.2"
   },
   "module.bigip:time": {
    "full_name": "registry.terraform.io/hashicorp/time",
    "module_address": "module.bigip",
    "name": "time"
   },
   "module.hcp-vault-config:vault": {
    "expressions": {
     "add_address_to_env": {
      "constant_value": true
     },
     "address": {
      "references": [
       "var.vault_fqdn"
      ]
     },
     "token": {
      "references": [
       "var.vault_token"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/vault",
    "module_address": "module.hcp-vault-config",
    "name": "vault"
   },
   "random": {
    "full_name": "registry.terraform.io/hashicorp/random",
    "name": "random"
   },
   "vault": {
    "full_name": "registry.terraform.io/hashicorp/vault",
    "name": "vault",
    "version_constraint": "3.12.0"
   }
  },
  "root_module": {
   "module_calls": {
    "bigip": {
     "depends_on": [
      "module.infra-aws.public_subnet_ids"
     ],
     "expressions": {
      "AS3_URL": {
       "constant_value": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.43.0/f5-appsvcs-3.43.0-2.noarch.rpm"
      },
      "CFE_URL": {
       "constant_value": "https://github.com/F5Networks/f5-cloud-failover-extension/releases/download/v1.13.0/f5-cloud-failover-1.13.0-0.noarch.rpm"
      },
      "DO_URL": {
       "constant_value": "https://github.com/F5Networks/f5-declarative-onboarding/releases/download/v1.36.0/f5-declarative-onboarding-1.36.0-4.noarch.rpm"
      },
      "FAST_URL": {
       "constant_value": "https://github.com/F5Networks/f5-appsvcs-templates/releases/download/v1.24.0/f5-appsvcs-templates-1.24.0-1.noarch.rpm"
      },
      "INIT_URL": {
       "constant_value": "https://github.com/F5Networks/f5-bigip-runtime-init/releases/download/1.5.2/f5-bigip-runtime-init-1.5.2-1.gz.run"
      },
      "TS_URL": {
       "constant_value": "https://github.com/F5Networks/f5-telemetry-streaming/releases/download/v1.32.0/f5-telemetry-1.32.0-2.noarch.rpm"
      },
      "ec2_instance_type": {
       "constant_value": "t3.medium"
      },
      "ec2_key_name": {
       "references": [
        "var.aws_key_pair_key_name"
       ]
      },
      "f5_ami_search_name": {
       "constant_value": "F5 BIGIP-16.1.3.3* PAYG-Good 25Mbps*"
      },
      "mgmt_securitygroup_ids": {
       "references": [
        "module.infra-aws.security_group_ssh_id",
        "module.infra-aws"
       ]
      },
      "mgmt_subnet_ids": {
       "references": [
        "local.publicSubnet"
       ]
      },
      "prefix": {
       "references": [
        "var.prefix"
       ]
      }
     },
     "module": {
      "outputs": {
       "bigip_eip_ids": {
        "description": "List of BIG-IP Elastic IP IDs",
        "expression": {
         "references": [
          "aws_eip.mgmt",
          "local.external_public_subnet_id",
          "aws_eip.ext-pub",
          "local.external_public_private_ip_secondary",
          "aws_eip.vip"
         ]
        }
       },
       "bigip_instance_ids": {
        "expression": {
         "references": [
          "aws_instance.f5_bigip"
         ]
        }
       },
       "bigip_nic_ids": {
        "description": "List of BIG-IP network interface IDs",
        "expression": {
         "references": [
          "local.mgmt_public_private_ip_primary",
          "aws_network_interface.mgmt",
          "aws_network_interface.mgmt1",
          "aws_network_interface.public",
          "aws_network_interface.public",
          "aws_network_interface.public1",
          "local.external_private_ip_primary",
          "aws_network_interface.external_private",
          "aws_network_interface.external_private1",
          "local.internal_private_ip_primary",
          "aws_network_interface.private",
          "aws_network_interface.private1"
         ]
        }
       },
       "bigip_password": {
        "description": "Password for bigip user ( if dynamic_password is choosen it will be random generated password or if aws_secretmanager_auth is choosen it will be aws secretmanager secret_id )",
        "expression": {
         "references": [
          "var.custom_user_data",
          "var.f5_password",
          "var.aws_secretmanager_auth",
          "var.aws_secretmanager_secret_id",
          "random_string.dynamic_password.result",
          "random_string.dynamic_password",
          "var.f5_password"
         ]
        }
       },
       "f5_username": {
        "expression": {
         "references": [
          "var.custom_user_data",
          "var.f5_username"
         ]
        }
       },
       "mgmtPort": {
        "description": "HTTPS Port used for the BIG-IP management interface",
        "expression": {
         "references": [
          "local.total_nics"
         ]
        }
       },
       "mgmtPublicDNS": {
        "description": "List of BIG-IP public DNS records for the management interfaces",
        "expression": {
         "references": [
          "aws_instance.f5_bigip"
         ]
        }
       },
       "mgmtPublicIP": {
        "description": "List of BIG-IP public IP addresses for the management interfaces",
        "expression": {
         "references": [
          "aws_instance.f5_bigip"
         ]
        }
       },
       "onboard_do": {
        "expression": {
         "references": [
          "local.total_nics",
          "local.total_nics",
          "local.clustermemberDO2",
          "local.clustermemberDO3",
          "local.clustermemberDO1"
         ]
        }
       },
       "private_addresses": {
        "description": "List of BIG-IP private addresses",
        "expression": {
         "references": [
          "local.mgmt_public_private_ip_primary",
          "aws_network_interface.mgmt",
          "aws_network_interface.mgmt1",
          "local.mgmt_public_private_ip_primary",
          "aws_network_interface.mgmt",
          "aws_network_interface.mgmt1",
          "aws_network_interface.public",
          "aws_network_interface.public",
          "aws_network_interface.public1",
          "local.external_public_private_ip_primary",
          "aws_network_interface.public",
          "aws_network_interface.public1",
          "local.external_private_ip_primary",
          "aws_network_interface.external_private",
          "aws_network_interface.external_private1",
          "local.external_private_ip_primary",
          "aws_network_interface.external_private",
          "aws_network_interface.external_private1",
          "local.internal_private_ip_primary",
          "aws_network_interface.private",
          "aws_network_interface.private1",
          "local.internal_private_ip_primary",
          "aws_network_interface.private",
          "aws_network_interface.private1"
         ]
        }
       },
       "public_addresses": {
        "description": "List of BIG-IP public addresses",
        "expression": {
         "references": [
          "aws_eip.ext-pub",
          "aws_eip.vip"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_eip.ext-pub",
        "count_expression": {
         "references": [
          "local.external_public_subnet_id"
         ]
        },
        "depends_on": [
         "aws_eip.mgmt"
        ],
        "expressions": {
         "associate_with_private_ip": {
          "references": [
           "local.external_public_private_ip_primary",
           "aws_network_interface.public",
           "count.index",
           "aws_network_interface.public1",
           "count.index"
          ]
         },
         "network_interface": {
          "references": [
           "local.external_public_private_ip_primary",
           "aws_network_interface.public",
           "count.index",
           "aws_network_interface.public1",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "ext-pub",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_eip.mgmt",
        "count_expression": {
         "references": [
          "local.mgmt_public_subnet_id",
          "local.bigip_map[\"mgmt_subnet_ids\"]",
          "local.bigip_map"
         ]
        },
        "expressions": {
         "network_interface": {
          "references": [
           "local.mgmt_public_private_ip_primary",
           "aws_network_interface.mgmt",
           "count.index",
           "aws_network_interface.mgmt1",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "count.index"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "mgmt",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_eip.vip",
        "count_expression": {
         "references": [
          "var.cfe_secondary_vip_disable",
          "local.external_public_subnet_id"
         ]
        },
        "expressions": {
         "associate_with_private_ip": {
          "references": [
           "local.external_public_private_ip_primary",
           "aws_network_interface.public[0].private_ip_list",
           "aws_network_interface.public[0]",
           "aws_network_interface.public",
           "aws_network_interface.public[0].private_ip",
           "aws_network_interface.public[0]",
           "aws_network_interface.public",
           "aws_network_interface.public1[0].private_ip_list",
           "aws_network_interface.public1[0]",
           "aws_network_interface.public1",
           "aws_network_interface.public1[0].private_ip",
           "aws_network_interface.public1[0]",
           "aws_network_interface.public1"
          ]
         },
         "network_interface": {
          "references": [
           "local.external_public_private_ip_primary",
           "aws_network_interface.public[0].id",
           "aws_network_interface.public[0]",
           "aws_network_interface.public",
           "aws_network_interface.public1[0].id",
           "aws_network_interface.public1[0]",
           "aws_network_interface.public1"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "vip",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_instance.f5_bigip",
        "depends_on": [
         "aws_eip.mgmt",
         "aws_network_interface.public",
         "aws_network_interface.private"
        ],
        "expressions": {
         "ami": {
          "references": [
           "data.aws_ami.f5_ami.id",
           "data.aws_ami.f5_ami"
          ]
         },
         "iam_instance_profile": {
          "references": [
           "var.aws_iam_instance_profile"
          ]
         },
         "instance_type": {
          "references": [
           "var.ec2_instance_type"
          ]
         },
         "key_name": {
          "references": [
           "var.ec2_key_name"
          ]
         },
         "root_block_device": [
          {
           "delete_on_termination": {
            "constant_value": true
           }
          }
         ],
         "tags": {
          "references": [
           "local.tags",
           "local.instance_prefix"
          ]
         },
         "user_data": {
          "references": [
           "var.custom_user_data",
           "path.module",
           "var.f5_username",
           "var.ec2_key_name",
           "var.aws_secretmanager_auth",
           "var.f5_password",
           "var.aws_secretmanager_auth",
           "data.aws_secretsmanager_secret_version.current[0].secret_id",
           "data.aws_secretsmanager_secret_version.current[0]",
           "data.aws_secretsmanager_secret_version.current",
           "random_string.dynamic_password.result",
           "random_string.dynamic_password",
           "var.f5_password",
           "var.INIT_URL",
           "var.DO_URL",
           "var.DO_URL",
           "var.DO_URL",
           "var.AS3_URL",
           "var.AS3_URL",
           "var.AS3_URL",
           "var.TS_URL",
           "var.TS_URL",
           "var.TS_URL",
           "var.CFE_URL",
           "var.CFE_URL",
           "var.CFE_URL",
           "var.FAST_URL",
           "var.FAST_URL",
           "var.FAST_URL"
          ]
         }
        },
        "mode": "managed",
        "name": "f5_bigip",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_instance"
       },
       {
        "address": "aws_network_interface.external_private",
        "count_expression": {
         "references": [
          "local.external_private_ip_primary",
          "local.external_private_subnet_id"
         ]
        },
        "expressions": {
         "private_ip_list": {
          "references": [
           "local.external_private_ip_primary",
           "count.index",
           "local.external_private_ip_secondary",
           "count.index"
          ]
         },
         "private_ip_list_enabled": {
          "constant_value": true
         },
         "security_groups": {
          "references": [
           "local.external_private_security_id",
           "count.index"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.external_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.external_private_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "external_private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.external_private1",
        "count_expression": {
         "references": [
          "local.external_private_ip_primary",
          "local.external_private_ip_primary"
         ]
        },
        "expressions": {
         "private_ips_count": {
          "constant_value": 1
         },
         "security_groups": {
          "references": [
           "local.external_private_security_id",
           "count.index"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.external_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.external_private_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "external_private1",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.mgmt",
        "count_expression": {
         "references": [
          "local.mgmt_public_private_ip_primary",
          "local.bigip_map[\"mgmt_subnet_ids\"]",
          "local.bigip_map"
         ]
        },
        "expressions": {
         "private_ips": {
          "references": [
           "local.mgmt_public_private_ip_primary",
           "count.index"
          ]
         },
         "security_groups": {
          "references": [
           "var.mgmt_securitygroup_ids"
          ]
         },
         "subnet_id": {
          "references": [
           "local.bigip_map[\"mgmt_subnet_ids\"]",
           "local.bigip_map",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "mgmt",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.mgmt1",
        "count_expression": {
         "references": [
          "local.mgmt_public_private_ip_primary",
          "local.bigip_map[\"mgmt_subnet_ids\"]",
          "local.bigip_map"
         ]
        },
        "expressions": {
         "private_ips_count": {
          "constant_value": 0
         },
         "security_groups": {
          "references": [
           "var.mgmt_securitygroup_ids"
          ]
         },
         "subnet_id": {
          "references": [
           "local.bigip_map[\"mgmt_subnet_ids\"]",
           "local.bigip_map",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "mgmt1",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.private",
        "count_expression": {
         "references": [
          "local.internal_private_ip_primary",
          "local.internal_private_subnet_id"
         ]
        },
        "expressions": {
         "private_ip_list": {
          "references": [
           "local.internal_private_ip_primary",
           "count.index"
          ]
         },
         "private_ip_list_enabled": {
          "constant_value": true
         },
         "security_groups": {
          "references": [
           "var.internal_securitygroup_ids"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.internal_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.internal_private_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.internalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.private1",
        "count_expression": {
         "references": [
          "local.internal_private_ip_primary",
          "local.internal_private_subnet_id"
         ]
        },
        "expressions": {
         "private_ips_count": {
          "constant_value": 0
         },
         "security_groups": {
          "references": [
           "var.internal_securitygroup_ids"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.internal_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.internal_private_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.internalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private1",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.public",
        "count_expression": {
         "references": [
          "local.external_public_private_ip_primary",
          "local.external_public_subnet_id"
         ]
        },
        "expressions": {
         "private_ip_list": {
          "references": [
           "local.external_public_private_ip_primary",
           "count.index",
           "local.external_public_private_ip_secondary",
           "count.index"
          ]
         },
         "private_ip_list_enabled": {
          "constant_value": true
         },
         "security_groups": {
          "references": [
           "local.external_public_security_id",
           "count.index"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.external_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.external_public_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "aws_network_interface.public1",
        "count_expression": {
         "references": [
          "local.external_public_private_ip_primary",
          "local.external_public_subnet_id"
         ]
        },
        "expressions": {
         "private_ips_count": {
          "constant_value": 1
         },
         "security_groups": {
          "references": [
           "local.external_public_security_id",
           "count.index"
          ]
         },
         "source_dest_check": {
          "references": [
           "var.external_source_dest_check"
          ]
         },
         "subnet_id": {
          "references": [
           "local.external_public_subnet_id",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "local.tags",
           "var.externalnic_failover_tags",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public1",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_interface"
       },
       {
        "address": "random_id.module_id",
        "expressions": {
         "byte_length": {
          "constant_value": 2
         }
        },
        "mode": "managed",
        "name": "module_id",
        "provider_config_key": "random",
        "schema_version": 0,
        "type": "random_id"
       },
       {
        "address": "random_string.dynamic_password",
        "expressions": {
         "length": {
          "constant_value": 16
         },
         "min_lower": {
          "constant_value": 1
         },
         "min_numeric": {
          "constant_value": 1
         },
         "min_upper": {
          "constant_value": 1
         },
         "special": {
          "constant_value": false
         }
        },
        "mode": "managed",
        "name": "dynamic_password",
        "provider_config_key": "random",
        "schema_version": 2,
        "type": "random_string"
       },
       {
        "address": "time_sleep.wait_for_aws_instance_f5_bigip",
        "depends_on": [
         "aws_instance.f5_bigip"
        ],
        "expressions": {
         "create_duration": {
          "references": [
           "var.sleep_time"
          ]
         }
        },
        "mode": "managed",
        "name": "wait_for_aws_instance_f5_bigip",
        "provider_config_key": "module.bigip:time",
        "schema_version": 0,
        "type": "time_sleep"
       },
       {
        "address": "data.aws_ami.f5_ami",
        "expressions": {
         "filter": [
          {
           "name": {
            "constant_value": "description"
           },
           "values": {
            "references": [
             "var.f5_ami_search_name"
            ]
           }
          }
         ],
         "most_recent": {
          "constant_value": true
         },
         "owners": {
          "constant_value": [
           "aws-marketplace"
          ]
         }
        },
        "mode": "data",
        "name": "f5_ami",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ami"
       },
       {
        "address": "data.aws_secretsmanager_secret.password",
        "count_expression": {
         "references": [
          "var.aws_secretmanager_auth"
         ]
        },
        "expressions": {
         "name": {
          "references": [
           "var.aws_secretmanager_secret_id"
          ]
         }
        },
        "mode": "data",
        "name": "password",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret"
       },
       {
        "address": "data.aws_secretsmanager_secret_version.current",
        "count_expression": {
         "references": [
          "var.aws_secretmanager_auth"
         ]
        },
        "expressions": {
         "secret_id": {
          "references": [
           "data.aws_secretsmanager_secret.password",
           "count.index"
          ]
         }
        },
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_secretsmanager_secret_version"
       }
      ],
      "variables": {
       "AS3_URL": {
        "default": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v.3.42.0/f5-appsvcs-3.42.0-5.noarch.rpm",
        "description": "URL to download the BIG-IP Application Service Extension 3 (AS3) module"
       },
       "CFE_URL": {
        "default": "https://github.com/F5Networks/f5-cloud-failover-extension/releases/download/v1.13.0/f5-cloud-failover-1.13.0-0.noarch.rpm",
        "description": "URL to download the BIG-IP Cloud Failover Extension module"
       },
       "DO_URL": {
        "default": "https://github.com/F5Networks/f5-declarative-onboarding/releases/download/v1.35.0/f5-declarative-onboarding-1.35.0-6.noarch.rpm",
        "description": "URL to download the BIG-IP Declarative Onboarding module"
       },
       "FAST_URL": {
        "default": "https://github.com/F5Networks/f5-appsvcs-templates/releases/download/v1.23.0/f5-appsvcs-templates-1.23.0-1.noarch.rpm",
        "description": "URL to download the BIG-IP FAST module"
       },
       "INIT_URL": {
        "default": "https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.5.2/dist/f5-bigip-runtime-init-1.5.2-1.gz.run",
        "description": "URL to download the BIG-IP runtime init"
       },
       "TS_URL": {
        "default": "https://github.com/F5Networks/f5-telemetry-streaming/releases/download/v1.32.0/f5-telemetry-1.32.0-2.noarch.rpm",
        "description": "URL to download the BIG-IP Telemetry Streaming module"
       },
       "aws_iam_instance_profile": {
        "default": null,
        "description": "aws_iam_instance_profile"
       },
       "aws_secretmanager_auth": {
        "default": false,
        "description": "Whether to use secret manager to pass authentication"
       },
       "aws_secretmanager_secret_id": {
        "default": null,
        "description": "AWS Secret Manager Secret ID that stores the BIG-IP password"
       },
       "cfe_secondary_vip_disable": {
        "default": false,
        "description": "Disable Externnal Public IP Association to instance based on this flag (Usecase CFE Scenario)"
       },
       "custom_user_data": {
        "default": null,
        "description": "Provide a custom bash script or cloud-init script the BIG-IP will run on creation"
       },
       "ec2_instance_type": {
        "default": "m5.xlarge",
        "description": "AWS EC2 instance type"
       },
       "ec2_key_name": {
        "description": "AWS EC2 Key name for SSH access"
       },
       "external_securitygroup_ids": {
        "default": [],
        "description": "The Network Security Group ids for external network "
       },
       "external_source_dest_check": {
        "default": false,
        "description": "Disable source/dest check on External interface to allow inline routing for backends"
       },
       "external_subnet_ids": {
        "default": [
         {
          "private_ip_primary": null,
          "private_ip_secondary": null,
          "public_ip": null,
          "subnet_id": null
         }
        ],
        "description": "The subnet id of the virtual network where the virtual machines will reside."
       },
       "externalnic_failover_tags": {
        "default": {},
        "description": "key:value tags to apply to external nic resources built by the module"
       },
       "f5_ami_search_name": {
        "default": "F5 BIGIP-16.1.2.2* PAYG-Best Plus 25Mbps*",
        "description": "BIG-IP AMI name to search for"
       },
       "f5_hostname": {
        "default": "",
        "description": "Custom management hostname. Defaults to managemet public dns."
       },
       "f5_password": {
        "default": "",
        "description": "Password of the F5 Bigip that will be deployed"
       },
       "f5_username": {
        "default": "bigipuser",
        "description": "The admin username of the F5 Bigip that will be deployed"
       },
       "internal_securitygroup_ids": {
        "default": [],
        "description": "The Network Security Group ids for internal network "
       },
       "internal_source_dest_check": {
        "default": true,
        "description": "Disable source/dest check on Internal interface to allow inline routing for backends"
       },
       "internal_subnet_ids": {
        "default": [
         {
          "private_ip_primary": null,
          "public_ip": null,
          "subnet_id": null
         }
        ],
        "description": "The subnet id of the virtual network where the virtual machines will reside."
       },
       "internalnic_failover_tags": {
        "default": {},
        "description": "key:value tags to apply to internal nic resources built by the module"
       },
       "libs_dir": {
        "default": "/config/cloud/aws/node_modules",
        "description": "Directory on the BIG-IP to download the A\u0026O Toolchain into"
       },
       "mgmt_securitygroup_ids": {
        "description": "The Network Security Group ids for management network "
       },
       "mgmt_subnet_ids": {
        "default": [
         {
          "private_ip_primary": null,
          "public_ip": null,
          "subnet_id": null
         }
        ],
        "description": "The subnet id of the virtual network where the virtual machines will reside."
       },
       "onboard_log": {
        "default": "/var/log/startup-script.log",
        "description": "Directory on the BIG-IP to store the cloud-init logs"
       },
       "prefix": {
        "description": "Prefix for resources created by this module"
       },
       "sleep_time": {
        "default": "600s",
        "description": "The number of seconds/minutes of delay to build into creation of BIG-IP VMs; default is 250. BIG-IP requires a few minutes to complete the onboarding process and this value can be used to delay the processing of dependent Terraform resources."
       },
       "tags": {
        "default": {},
        "description": "key:value tags to apply to resources built by the module"
       }
      }
     },
     "source": "F5Networks/bigip-module/aws",
     "version_constraint": "1.1.10"
    },
    "hcp-hvn": {
     "expressions": {
      "aws_ram_resource_share_arn": {
       "references": [
        "module.infra-aws.ram_resource_share_arn",
        "module.infra-aws"
       ]
      },
      "aws_tgw_id": {
       "references": [
        "module.infra-aws.tgw_id",
        "module.infra-aws"
       ]
      },
      "aws_vpc_cidr": {
       "references": [
        "var.aws_vpc_cidr"
       ]
      },
      "cidr": {
       "references": [
        "var.hcp_hvn_cidr"
       ]
      },
      "deployment_id": {
       "references": [
        "local.deployment_id"
       ]
      },
      "region": {
       "references": [
        "var.aws_region"
       ]
      }
     },
     "module": {
      "outputs": {
       "id": {
        "description": "HVN id",
        "expression": {
         "references": [
          "hcp_hvn.hvn.hvn_id",
          "hcp_hvn.hvn"
         ]
        }
       },
       "provider_account_id": {
        "description": "HVN account id",
        "expression": {
         "references": [
          "hcp_hvn.hvn.provider_account_id",
          "hcp_hvn.hvn"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "hcp_aws_transit_gateway_attachment.tgw",
        "depends_on": [
         "var.aws_ram_resource_share_arn"
        ],
        "expressions": {
         "hvn_id": {
          "references": [
           "hcp_hvn.hvn.hvn_id",
           "hcp_hvn.hvn"
          ]
         },
         "resource_share_arn": {
          "references": [
           "var.aws_ram_resource_share_arn"
          ]
         },
         "transit_gateway_attachment_id": {
          "references": [
           "var.deployment_id"
          ]
         },
         "transit_gateway_id": {
          "references": [
           "var.aws_tgw_id"
          ]
         }
        },
        "mode": "managed",
        "name": "tgw",
        "provider_config_key": "hcp",
        "schema_version": 0,
        "type": "hcp_aws_transit_gateway_attachment"
       },
       {
        "address": "hcp_hvn.hvn",
        "expressions": {
         "cidr_block": {
          "references": [
           "var.cidr"
          ]
         },
         "cloud_provider": {
          "constant_value": "aws"
         },
         "hvn_id": {
          "references": [
           "var.deployment_id"
          ]
         },
         "region": {
          "references": [
           "var.region"
          ]
         }
        },
        "mode": "managed",
        "name": "hvn",
        "provider_config_key": "hcp",
        "schema_version": 0,
        "type": "hcp_hvn"
       },
       {
        "address": "hcp_hvn_route.route",
        "expressions": {
         "destination_cidr": {
          "references": [
           "var.aws_vpc_cidr"
          ]
         },
         "hvn_link": {
          "references": [
           "hcp_hvn.hvn.self_link",
           "hcp_hvn.hvn"
          ]
         },
         "hvn_route_id": {
          "references": [
           "var.deployment_id"
          ]
         },
         "target_link": {
          "references": [
           "hcp_aws_transit_gateway_attachment.tgw.self_link",
           "hcp_aws_transit_gateway_attachment.tgw"
          ]
         }
        },
        "mode": "managed",
        "name": "route",
        "provider_config_key": "hcp",
        "schema_version": 0,
        "type": "hcp_hvn_route"
       }
      ],
      "variables": {
       "aws_ram_resource_share_arn": {
        "description": "AWS resource name (ARN) of the resource share"
       },
       "aws_tgw_id": {
        "description": "AWS EC2 transit gateway id"
       },
       "aws_vpc_cidr": {
        "description": "VPC CIDR"
       },
       "cidr": {
        "description": "HCP HVN cidr"
       },
       "deployment_id": {
        "description": "Deployment id"
       },
       "region": {
        "default": "",
        "description": "HCP HVN region"
       }
      }
     },
     "source": "./modules/hcp"
    },
    "hcp-vault": {
     "expressions": {
      "deployment_name": {
       "references": [
        "var.deployment_name"
       ]
      },
      "hvn_id": {
       "references": [
        "module.hcp-hvn.id",
        "module.hcp-hvn"
       ]
      },
      "tier": {
       "references": [
        "var.hcp_vault_tier"
       ]
      }
     },
     "module": {
      "outputs": {
       "admin_token": {
        "expression": {
         "references": [
          "hcp_vault_cluster_admin_token.token.token",
          "hcp_vault_cluster_admin_token.token"
         ]
        },
        "sensitive": true
       },
       "public_endpoint_url": {
        "expression": {
         "references": [
          "hcp_vault_cluster.vault.vault_public_endpoint_url",
          "hcp_vault_cluster.vault"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "hcp_vault_cluster.vault",
        "expressions": {
         "cluster_id": {
          "references": [
           "var.deployment_name"
          ]
         },
         "hvn_id": {
          "references": [
           "var.hvn_id"
          ]
         },
         "public_endpoint": {
          "constant_value": true
         },
         "tier": {
          "references": [
           "var.tier"
          ]
         }
        },
        "mode": "managed",
        "name": "vault",
        "provider_config_key": "hcp",
        "schema_version": 0,
        "type": "hcp_vault_cluster"
       },
       {
        "address": "hcp_vault_cluster_admin_token.token",
        "depends_on": [
         "hcp_vault_cluster.vault"
        ],
        "expressions": {
         "cluster_id": {
          "references": [
           "var.deployment_name"
          ]
         }
        },
        "mode": "managed",
        "name": "token",
        "provider_config_key": "hcp",
        "schema_version": 0,
        "type": "hcp_vault_cluster_admin_token"
       }
      ],
      "variables": {
       "deployment_name": {
        "description": "Deployment name, used to prefix resources"
       },
       "hvn_id": {
        "description": "HVN id"
       },
       "tier": {
        "description": "Vault cluster tier"
       }
      }
     },
     "source": "./modules/vault/"
    },
    "hcp-vault-config": {
     "expressions": {
      "f5admin": {
       "references": [
        "module.bigip.f5_username",
        "module.bigip"
       ]
      },
      "f5password": {
       "references": [
        "module.bigip.bigip_password",
        "module.bigip"
       ]
      },
      "vault_bound_ami_ids": {
       "references": [
        "module.infra-aws.bastion_ec2_ami_id",
        "module.infra-aws"
       ]
      },
      "vault_fqdn": {
       "references": [
        "local.vault_fqdn"
       ]
      },
      "vault_token": {
       "references": [
        "local.vault_token"
       ]
      }
     },
     "module": {
      "resources": [
       {
        "address": "aws_iam_access_key.vault_mount_user",
        "expressions": {
         "user": {
          "references": [
           "aws_iam_user.vault_mount_user.name",
           "aws_iam_user.vault_mount_user"
          ]
         }
        },
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_access_key"
       },
       {
        "address": "aws_iam_user.vault_mount_user",
        "expressions": {
         "force_destroy": {
          "constant_value": true
         },
         "name": {
          "references": [
           "local.my_email"
          ]
         },
         "permissions_boundary": {
          "references": [
           "data.aws_iam_policy.demo_user_permissions_boundary.arn",
           "data.aws_iam_policy.demo_user_permissions_boundary"
          ]
         }
        },
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_user"
       },
       {
        "address": "aws_iam_user_policy.vault_mount_user",
        "expressions": {
         "name": {
          "constant_value": "DemoUserInlinePolicy"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy.demo_user_permissions_boundary.policy",
           "data.aws_iam_policy.demo_user_permissions_boundary"
          ]
         },
         "user": {
          "references": [
           "aws_iam_user.vault_mount_user.name",
           "aws_iam_user.vault_mount_user"
          ]
         }
        },
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_user_policy"
       },
       {
        "address": "vault_auth_backend.vault_aws_auth",
        "expressions": {
         "type": {
          "constant_value": "aws"
         }
        },
        "mode": "managed",
        "name": "vault_aws_auth",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 1,
        "type": "vault_auth_backend"
       },
       {
        "address": "vault_aws_auth_backend_client.vault_aws_client",
        "expressions": {
         "access_key": {
          "references": [
           "aws_iam_access_key.vault_mount_user.id",
           "aws_iam_access_key.vault_mount_user"
          ]
         },
         "backend": {
          "references": [
           "vault_auth_backend.vault_aws_auth.path",
           "vault_auth_backend.vault_aws_auth"
          ]
         },
         "secret_key": {
          "references": [
           "aws_iam_access_key.vault_mount_user.secret",
           "aws_iam_access_key.vault_mount_user"
          ]
         }
        },
        "mode": "managed",
        "name": "vault_aws_client",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_aws_auth_backend_client"
       },
       {
        "address": "vault_aws_auth_backend_role.vault_ec2_auth_role",
        "expressions": {
         "auth_type": {
          "constant_value": "ec2"
         },
         "backend": {
          "references": [
           "vault_auth_backend.vault_aws_auth.path",
           "vault_auth_backend.vault_aws_auth"
          ]
         },
         "bound_ami_ids": {
          "references": [
           "var.vault_bound_ami_ids"
          ]
         },
         "role": {
          "constant_value": "f5-device-role"
         },
         "token_max_ttl": {
          "constant_value": 120
         },
         "token_policies": {
          "constant_value": [
           "cert-policy"
          ]
         },
         "token_ttl": {
          "constant_value": 60
         }
        },
        "mode": "managed",
        "name": "vault_ec2_auth_role",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_aws_auth_backend_role"
       },
       {
        "address": "vault_kv_secret_v2.f5",
        "expressions": {
         "data_json": {
          "references": [
           "var.f5admin",
           "var.f5password"
          ]
         },
         "mount": {
          "references": [
           "vault_mount.kvv2.path",
           "vault_mount.kvv2"
          ]
         },
         "name": {
          "constant_value": "f5admin"
         }
        },
        "mode": "managed",
        "name": "f5",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_kv_secret_v2"
       },
       {
        "address": "vault_mount.kvv2",
        "expressions": {
         "description": {
          "constant_value": "KV Version 2 secret engine mount"
         },
         "options": {
          "constant_value": {
           "version": "2"
          }
         },
         "path": {
          "constant_value": "network"
         },
         "type": {
          "constant_value": "kv"
         }
        },
        "mode": "managed",
        "name": "kvv2",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_mount"
       },
       {
        "address": "vault_mount.pki_intermediate",
        "depends_on": [
         "vault_pki_secret_backend_root_cert.self-signing-cert"
        ],
        "expressions": {
         "default_lease_ttl_seconds": {
          "constant_value": 2678400
         },
         "max_lease_ttl_seconds": {
          "constant_value": 160704000
         },
         "path": {
          "constant_value": "pki_intermediate"
         },
         "type": {
          "constant_value": "pki"
         }
        },
        "mode": "managed",
        "name": "pki_intermediate",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_mount"
       },
       {
        "address": "vault_mount.pki_root",
        "expressions": {
         "default_lease_ttl_seconds": {
          "constant_value": 34819200
         },
         "max_lease_ttl_seconds": {
          "constant_value": 160704000
         },
         "path": {
          "constant_value": "pki_root"
         },
         "type": {
          "constant_value": "pki"
         }
        },
        "mode": "managed",
        "name": "pki_root",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_mount"
       },
       {
        "address": "vault_pki_secret_backend_config_urls.config_urls",
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_root.path",
           "vault_mount.pki_root"
          ]
         },
         "crl_distribution_points": {
          "references": [
           "var.vault_fqdn",
           "vault_mount.pki_root.path",
           "vault_mount.pki_root"
          ]
         },
         "issuing_certificates": {
          "references": [
           "var.vault_fqdn",
           "vault_mount.pki_root.path",
           "vault_mount.pki_root"
          ]
         }
        },
        "mode": "managed",
        "name": "config_urls",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_config_urls"
       },
       {
        "address": "vault_pki_secret_backend_config_urls.config_urls_int",
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "crl_distribution_points": {
          "references": [
           "var.vault_fqdn",
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "issuing_certificates": {
          "references": [
           "var.vault_fqdn",
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         }
        },
        "mode": "managed",
        "name": "config_urls_int",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_config_urls"
       },
       {
        "address": "vault_pki_secret_backend_intermediate_cert_request.intermediate",
        "depends_on": [
         "vault_pki_secret_backend_root_cert.self-signing-cert"
        ],
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "common_name": {
          "references": [
           "var.customername"
          ]
         },
         "type": {
          "constant_value": "internal"
         }
        },
        "mode": "managed",
        "name": "intermediate",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_intermediate_cert_request"
       },
       {
        "address": "vault_pki_secret_backend_intermediate_set_signed.intermediate",
        "depends_on": [
         "vault_pki_secret_backend_config_urls.config_urls_int"
        ],
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "certificate": {
          "references": [
           "vault_pki_secret_backend_root_sign_intermediate.root.certificate",
           "vault_pki_secret_backend_root_sign_intermediate.root"
          ]
         }
        },
        "mode": "managed",
        "name": "intermediate",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_intermediate_set_signed"
       },
       {
        "address": "vault_pki_secret_backend_role.role",
        "expressions": {
         "allow_ip_sans": {
          "constant_value": true
         },
         "allow_subdomains": {
          "constant_value": true
         },
         "allowed_domains": {
          "constant_value": [
           "f5demo.com"
          ]
         },
         "backend": {
          "references": [
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "key_bits": {
          "constant_value": 4096
         },
         "key_type": {
          "constant_value": "rsa"
         },
         "name": {
          "constant_value": "f5demo"
         },
         "ttl": {
          "references": [
           "var.cert_ttl_seconds"
          ]
         }
        },
        "mode": "managed",
        "name": "role",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_role"
       },
       {
        "address": "vault_pki_secret_backend_role.vault-self",
        "expressions": {
         "allow_any_name": {
          "constant_value": true
         },
         "backend": {
          "references": [
           "vault_mount.pki_intermediate.path",
           "vault_mount.pki_intermediate"
          ]
         },
         "key_usage": {
          "constant_value": [
           "DigitalSignature",
           "KeyAgreement",
           "KeyEncipherment"
          ]
         },
         "name": {
          "constant_value": "vault-self"
         },
         "ttl": {
          "constant_value": 94608000
         }
        },
        "mode": "managed",
        "name": "vault-self",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_pki_secret_backend_role"
       },
       {
        "address": "vault_pki_secret_backend_root_cert.self-signing-cert",
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_root.path",
           "vault_mount.pki_root"
          ]
         },
         "common_name": {
          "constant_value": "Root CA"
         },
         "exclude_cn_from_sans": {
          "constant_value": true
         },
         "format": {
          "constant_value": "pem"
         },
         "key_bits": {
          "constant_value": 4096
         },
         "key_type": {
          "constant_value": "rsa"
         },
         "organization": {
          "references": [
           "var.customername"
          ]
         },
         "ou": {
          "references": [
           "var.customername"
          ]
         },
         "private_key_format": {
          "constant_value": "der"
         },
         "ttl": {
          "constant_value": 160704000
         },
         "type": {
          "constant_value": "internal"
         }
        },
        "mode": "managed",
        "name": "self-signing-cert",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 1,
        "type": "vault_pki_secret_backend_root_cert"
       },
       {
        "address": "vault_pki_secret_backend_root_sign_intermediate.root",
        "depends_on": [
         "vault_pki_secret_backend_root_cert.self-signing-cert"
        ],
        "expressions": {
         "backend": {
          "references": [
           "vault_mount.pki_root.path",
           "vault_mount.pki_root"
          ]
         },
         "common_name": {
          "references": [
           "var.customername"
          ]
         },
         "csr": {
          "references": [
           "vault_pki_secret_backend_intermediate_cert_request.intermediate.csr",
           "vault_pki_secret_backend_intermediate_cert_request.intermediate"
          ]
         },
         "exclude_cn_from_sans": {
          "constant_value": true
         },
         "organization": {
          "references": [
           "var.customername"
          ]
         },
         "ou": {
          "references": [
           "var.customername"
          ]
         },
         "ttl": {
          "constant_value": 160704000
         }
        },
        "mode": "managed",
        "name": "root",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 2,
        "type": "vault_pki_secret_backend_root_sign_intermediate"
       },
       {
        "address": "vault_policy.example",
        "expressions": {
         "name": {
          "constant_value": "cert-policy"
         },
         "policy": {
          "references": [
           "path.module"
          ]
         }
        },
        "mode": "managed",
        "name": "example",
        "provider_config_key": "module.hcp-vault-config:vault",
        "schema_version": 0,
        "type": "vault_policy"
       },
       {
        "address": "data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_iam_policy.demo_user_permissions_boundary",
        "expressions": {
         "name": {
          "constant_value": "DemoUser"
         }
        },
        "mode": "data",
        "name": "demo_user_permissions_boundary",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "data.aws_region.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_region"
       }
      ],
      "variables": {
       "cert_ttl_seconds": {
        "default": 600,
        "description": "value"
       },
       "customername": {
        "default": "acme",
        "description": "Customer Demo Name"
       },
       "f5admin": {
        "default": "bigipuser",
        "description": "F5 admin username",
        "sensitive": true
       },
       "f5password": {
        "default": "",
        "description": "F5 API password",
        "sensitive": true
       },
       "vault_bound_ami_ids": {
        "default": [],
        "description": "AWS auth bound instance ids"
       },
       "vault_fqdn": {
        "default": "",
        "description": "vault fqdn",
        "sensitive": true
       },
       "vault_token": {
        "default": "",
        "description": "vault token",
        "sensitive": true
       }
      }
     },
     "source": "./modules/vault_config/"
    },
    "infra-aws": {
     "expressions": {
      "aws_key_pair_key_name": {
       "references": [
        "var.aws_key_pair_key_name"
       ]
      },
      "deployment_id": {
       "references": [
        "local.deployment_id"
       ]
      },
      "eks_cluster_service_cidr": {
       "references": [
        "var.aws_eks_cluster_service_cidr"
       ]
      },
      "eks_cluster_version": {
       "references": [
        "var.aws_eks_cluster_version"
       ]
      },
      "eks_worker_desired_capacity": {
       "references": [
        "var.aws_eks_worker_desired_capacity"
       ]
      },
      "eks_worker_instance_type": {
       "references": [
        "var.aws_eks_worker_instance_type"
       ]
      },
      "hcp_hvn_cidr": {
       "references": [
        "var.hcp_hvn_cidr"
       ]
      },
      "hcp_hvn_provider_account_id": {
       "references": [
        "module.hcp-hvn.provider_account_id",
        "module.hcp-hvn"
       ]
      },
      "ingress_cidr_blocks": {
       "references": [
        "var.ingress_cidr_blocks"
       ]
      },
      "owner": {
       "references": [
        "var.owner"
       ]
      },
      "private_subnets": {
       "references": [
        "var.aws_private_subnets"
       ]
      },
      "public_subnets": {
       "references": [
        "var.aws_public_subnets"
       ]
      },
      "region": {
       "references": [
        "var.aws_region"
       ]
      },
      "ssh_pubkey": {
       "references": [
        "var.ssh_pubkey"
       ]
      },
      "ttl": {
       "references": [
        "var.ttl"
       ]
      },
      "vpc_cidr": {
       "references": [
        "var.aws_vpc_cidr"
       ]
      }
     },
     "module": {
      "module_calls": {
       "sg-mgmt": {
        "expressions": {
         "egress_cidr_blocks": {
          "constant_value": [
           "0.0.0.0/0"
          ]
         },
         "egress_rules": {
          "references": [
           "var.mgmt_egress_rules"
          ]
         },
         "ingress_cidr_blocks": {
          "references": [
           "var.ingress_cidr_blocks"
          ]
         },
         "ingress_rules": {
          "references": [
           "var.mgmt_ingress_rules"
          ]
         },
         "name": {
          "references": [
           "var.deployment_id"
          ]
         },
         "vpc_id": {
          "references": [
           "module.vpc.vpc_id",
           "module.vpc"
          ]
         }
        },
        "module": {
         "outputs": {
          "security_group_arn": {
           "description": "The ARN of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].arn",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].arn",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          },
          "security_group_description": {
           "description": "The description of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].description",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].description",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          },
          "security_group_id": {
           "description": "The ID of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].id",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].id",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          },
          "security_group_name": {
           "description": "The name of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].name",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].name",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          },
          "security_group_owner_id": {
           "description": "The owner ID",
           "expression": {
            "references": [
             "aws_security_group.this[0].owner_id",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].owner_id",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          },
          "security_group_vpc_id": {
           "description": "The VPC ID",
           "expression": {
            "references": [
             "aws_security_group.this[0].vpc_id",
             "aws_security_group.this[0]",
             "aws_security_group.this",
             "aws_security_group.this_name_prefix[0].vpc_id",
             "aws_security_group.this_name_prefix[0]",
             "aws_security_group.this_name_prefix"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_security_group.this",
           "count_expression": {
            "references": [
             "local.create",
             "var.create_sg",
             "var.use_name_prefix"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.description"
             ]
            },
            "name": {
             "references": [
              "var.name"
             ]
            },
            "revoke_rules_on_delete": {
             "references": [
              "var.revoke_rules_on_delete"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.create_timeout"
              ]
             },
             "delete": {
              "references": [
               "var.delete_timeout"
              ]
             }
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group.this_name_prefix",
           "count_expression": {
            "references": [
             "local.create",
             "var.create_sg",
             "var.use_name_prefix"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.description"
             ]
            },
            "name_prefix": {
             "references": [
              "var.name"
             ]
            },
            "revoke_rules_on_delete": {
             "references": [
              "var.revoke_rules_on_delete"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.create_timeout"
              ]
             },
             "delete": {
              "references": [
               "var.delete_timeout"
              ]
             }
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this_name_prefix",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group_rule.computed_egress_rules",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_egress_rules"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.egress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.rules",
              "var.computed_egress_rules",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.rules",
              "var.computed_egress_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.egress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.rules",
              "var.computed_egress_rules",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.rules",
              "var.computed_egress_rules",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "computed_egress_rules",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_egress_with_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_egress_with_cidr_blocks"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.computed_egress_with_cidr_blocks",
              "count.index",
              "var.egress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.computed_egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "computed_egress_with_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_egress_with_ipv6_cidr_blocks"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.egress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "computed_egress_with_ipv6_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_egress_with_self",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_egress_with_self"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_egress_with_self",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_egress_with_self",
              "count.index",
              "var.rules",
              "var.computed_egress_with_self",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_egress_with_self",
              "count.index",
              "var.rules",
              "var.computed_egress_with_self",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "self": {
             "references": [
              "var.computed_egress_with_self",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_egress_with_self",
              "count.index",
              "var.rules",
              "var.computed_egress_with_self",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "computed_egress_with_self",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_egress_with_source_security_group_id",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_egress_with_source_security_group_id"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "source_security_group_id": {
             "references": [
              "var.computed_egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "computed_egress_with_source_security_group_id",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_ingress_rules",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_ingress_rules"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.ingress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.rules",
              "var.computed_ingress_rules",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.rules",
              "var.computed_ingress_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.ingress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.rules",
              "var.computed_ingress_rules",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.rules",
              "var.computed_ingress_rules",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "computed_ingress_rules",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_ingress_with_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_ingress_with_cidr_blocks"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.computed_ingress_with_cidr_blocks",
              "count.index",
              "var.ingress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.computed_ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "computed_ingress_with_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_ingress_with_ipv6_cidr_blocks"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.ingress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "computed_ingress_with_ipv6_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_ingress_with_self",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_ingress_with_self"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_ingress_with_self",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_ingress_with_self",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_self",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_ingress_with_self",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_self",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "self": {
             "references": [
              "var.computed_ingress_with_self",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_ingress_with_self",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_self",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "computed_ingress_with_self",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.computed_ingress_with_source_security_group_id",
           "count_expression": {
            "references": [
             "local.create",
             "var.number_of_computed_ingress_with_source_security_group_id"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.computed_ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.computed_ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.computed_ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "source_security_group_id": {
             "references": [
              "var.computed_ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.computed_ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.computed_ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "computed_ingress_with_source_security_group_id",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.egress_rules",
           "count_expression": {
            "references": [
             "local.create",
             "var.egress_rules"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.egress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.rules",
              "var.egress_rules",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.rules",
              "var.egress_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.egress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.rules",
              "var.egress_rules",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.rules",
              "var.egress_rules",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "egress_rules",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.egress_with_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.egress_with_cidr_blocks"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.egress_with_cidr_blocks",
              "count.index",
              "var.egress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.egress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "egress_with_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.egress_with_ipv6_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.egress_with_ipv6_cidr_blocks"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.egress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.egress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.egress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "egress_with_ipv6_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.egress_with_self",
           "count_expression": {
            "references": [
             "local.create",
             "var.egress_with_self"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.egress_with_self",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.egress_with_self",
              "count.index",
              "var.rules",
              "var.egress_with_self",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.egress_with_self",
              "count.index",
              "var.rules",
              "var.egress_with_self",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "self": {
             "references": [
              "var.egress_with_self",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.egress_with_self",
              "count.index",
              "var.rules",
              "var.egress_with_self",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "egress_with_self",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.egress_with_source_security_group_id",
           "count_expression": {
            "references": [
             "local.create",
             "var.egress_with_source_security_group_id"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.egress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "source_security_group_id": {
             "references": [
              "var.egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.egress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.egress_with_source_security_group_id",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "egress"
            }
           },
           "mode": "managed",
           "name": "egress_with_source_security_group_id",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.ingress_rules",
           "count_expression": {
            "references": [
             "local.create",
             "var.ingress_rules"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.ingress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.rules",
              "var.ingress_rules",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.rules",
              "var.ingress_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.ingress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.rules",
              "var.ingress_rules",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.rules",
              "var.ingress_rules",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "ingress_rules",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.ingress_with_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.ingress_with_cidr_blocks"
            ]
           },
           "expressions": {
            "cidr_blocks": {
             "references": [
              "var.ingress_with_cidr_blocks",
              "count.index",
              "var.ingress_cidr_blocks"
             ]
            },
            "description": {
             "references": [
              "var.ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.ingress_with_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "ingress_with_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
           "count_expression": {
            "references": [
             "local.create",
             "var.ingress_with_ipv6_cidr_blocks"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.ingress_ipv6_cidr_blocks"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "to_port": {
             "references": [
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index",
              "var.rules",
              "var.ingress_with_ipv6_cidr_blocks",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "ingress_with_ipv6_cidr_blocks",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.ingress_with_self",
           "count_expression": {
            "references": [
             "local.create",
             "var.ingress_with_self"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.ingress_with_self",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.ingress_with_self",
              "count.index",
              "var.rules",
              "var.ingress_with_self",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.ingress_with_self",
              "count.index",
              "var.rules",
              "var.ingress_with_self",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "self": {
             "references": [
              "var.ingress_with_self",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.ingress_with_self",
              "count.index",
              "var.rules",
              "var.ingress_with_self",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "ingress_with_self",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "aws_security_group_rule.ingress_with_source_security_group_id",
           "count_expression": {
            "references": [
             "local.create",
             "var.ingress_with_source_security_group_id"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "from_port": {
             "references": [
              "var.ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "var.ingress_prefix_list_ids"
             ]
            },
            "protocol": {
             "references": [
              "var.ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "security_group_id": {
             "references": [
              "local.this_sg_id"
             ]
            },
            "source_security_group_id": {
             "references": [
              "var.ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.ingress_with_source_security_group_id",
              "count.index",
              "var.rules",
              "var.ingress_with_source_security_group_id",
              "count.index"
             ]
            },
            "type": {
             "constant_value": "ingress"
            }
           },
           "mode": "managed",
           "name": "ingress_with_source_security_group_id",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          }
         ],
         "variables": {
          "auto_groups": {
           "default": {
            "activemq": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "activemq-5671-tcp",
              "activemq-8883-tcp",
              "activemq-61614-tcp",
              "activemq-61617-tcp",
              "activemq-61619-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "alertmanager": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "alertmanager-9093-tcp",
              "alertmanager-9094-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "carbon-relay-ng": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "carbon-line-in-tcp",
              "carbon-line-in-udp",
              "carbon-pickle-tcp",
              "carbon-pickle-udp",
              "carbon-gui-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "cassandra": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "cassandra-clients-tcp",
              "cassandra-thrift-clients-tcp",
              "cassandra-jmx-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "consul": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "consul-tcp",
              "consul-grpc-tcp",
              "consul-webui-http-tcp",
              "consul-webui-https-tcp",
              "consul-dns-tcp",
              "consul-dns-udp",
              "consul-serf-lan-tcp",
              "consul-serf-lan-udp",
              "consul-serf-wan-tcp",
              "consul-serf-wan-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "dax-cluster": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "dax-cluster-unencrypted-tcp",
              "dax-cluster-encrypted-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "docker-swarm": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "docker-swarm-mngmt-tcp",
              "docker-swarm-node-tcp",
              "docker-swarm-node-udp",
              "docker-swarm-overlay-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "elasticsearch": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "elasticsearch-rest-tcp",
              "elasticsearch-java-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "etcd": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "etcd-client-tcp",
              "etcd-peer-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "grafana": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "grafana-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "graphite-statsd": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "graphite-webui",
              "graphite-2003-tcp",
              "graphite-2004-tcp",
              "graphite-2023-tcp",
              "graphite-2024-tcp",
              "graphite-8080-tcp",
              "graphite-8125-tcp",
              "graphite-8125-udp",
              "graphite-8126-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "http-80": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "http-80-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "http-8080": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "http-8080-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "https-443": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "https-443-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "https-8443": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "https-8443-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ipsec-4500": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ipsec-4500-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ipsec-500": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ipsec-500-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "kafka": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "kafka-broker-tcp",
              "kafka-broker-tls-tcp",
              "kafka-broker-tls-public-tcp",
              "kafka-broker-sasl-scram-tcp",
              "kafka-broker-sasl-scram-tcp",
              "kafka-broker-sasl-iam-tcp",
              "kafka-broker-sasl-iam-public-tcp",
              "kafka-jmx-exporter-tcp",
              "kafka-node-exporter-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "kibana": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "kibana-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "kubernetes-api": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "kubernetes-api-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ldap": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ldap-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ldaps": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ldaps-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "logstash": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "logstash-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "loki": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "loki-grafana",
              "loki-grafana-grpc"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "memcached": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "memcached-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "minio": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "minio-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "mongodb": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "mongodb-27017-tcp",
              "mongodb-27018-tcp",
              "mongodb-27019-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "mssql": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "mssql-tcp",
              "mssql-udp",
              "mssql-analytics-tcp",
              "mssql-broker-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "mysql": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "mysql-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "nfs": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "nfs-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "nomad": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "nomad-http-tcp",
              "nomad-rpc-tcp",
              "nomad-serf-tcp",
              "nomad-serf-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ntp": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ntp-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "openvpn": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "openvpn-udp",
              "openvpn-tcp",
              "openvpn-https-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "oracle-db": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "oracle-db-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "postgresql": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "postgresql-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "prometheus": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "prometheus-http-tcp",
              "prometheus-pushgateway-http-tcp",
              "prometheus-node-exporter-http-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "promtail": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "promtail-http"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "puppet": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "puppet-tcp",
              "puppetdb-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "rabbitmq": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "rabbitmq-4369-tcp",
              "rabbitmq-5671-tcp",
              "rabbitmq-5672-tcp",
              "rabbitmq-15672-tcp",
              "rabbitmq-25672-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "rdp": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "rdp-tcp",
              "rdp-udp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "redis": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "redis-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "redshift": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "redshift-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "smtp": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "smtp-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "smtp-submission": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "smtp-submission-587-tcp",
              "smtp-submission-2587-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "smtps": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "smtps-465-tcp",
              "smtps-2465-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "solr": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "solr-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "splunk": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "splunk-indexer-tcp",
              "splunk-clients-tcp",
              "splunk-splunkd-tcp",
              "splunk-hec-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "squid": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "squid-proxy-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "ssh": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "ssh-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "storm": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "storm-nimbus-tcp",
              "storm-ui-tcp",
              "storm-supervisor-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "vault": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "vault-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "wazuh": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "wazuh-server-agent-connection-tcp",
              "wazuh-server-agent-connection-udp",
              "wazuh-server-agent-enrollment",
              "wazuh-server-agent-cluster-daemon",
              "wazuh-server-syslog-collector-tcp",
              "wazuh-server-syslog-collector-udp",
              "wazuh-server-restful-api",
              "wazuh-indexer-restful-api",
              "wazuh-dashboard"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "web": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "http-80-tcp",
              "http-8080-tcp",
              "https-443-tcp",
              "web-jmx-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "winrm": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "winrm-http-tcp",
              "winrm-https-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "zabbix": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "zabbix-server",
              "zabbix-proxy",
              "zabbix-agent"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "zipkin": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "zipkin-admin-tcp",
              "zipkin-admin-query-tcp",
              "zipkin-admin-web-tcp",
              "zipkin-query-tcp",
              "zipkin-web-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            },
            "zookeeper": {
             "egress_rules": [
              "all-all"
             ],
             "ingress_rules": [
              "zookeeper-2181-tcp",
              "zookeeper-2182-tls-tcp",
              "zookeeper-2888-tcp",
              "zookeeper-3888-tcp",
              "zookeeper-jmx-tcp"
             ],
             "ingress_with_self": [
              "all-all"
             ]
            }
           },
           "description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)"
          },
          "computed_egress_rules": {
           "default": [],
           "description": "List of computed egress rules to create by name"
          },
          "computed_egress_with_cidr_blocks": {
           "default": [],
           "description": "List of computed egress rules to create where 'cidr_blocks' is used"
          },
          "computed_egress_with_ipv6_cidr_blocks": {
           "default": [],
           "description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "computed_egress_with_self": {
           "default": [],
           "description": "List of computed egress rules to create where 'self' is defined"
          },
          "computed_egress_with_source_security_group_id": {
           "default": [],
           "description": "List of computed egress rules to create where 'source_security_group_id' is used"
          },
          "computed_ingress_rules": {
           "default": [],
           "description": "List of computed ingress rules to create by name"
          },
          "computed_ingress_with_cidr_blocks": {
           "default": [],
           "description": "List of computed ingress rules to create where 'cidr_blocks' is used"
          },
          "computed_ingress_with_ipv6_cidr_blocks": {
           "default": [],
           "description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "computed_ingress_with_self": {
           "default": [],
           "description": "List of computed ingress rules to create where 'self' is defined"
          },
          "computed_ingress_with_source_security_group_id": {
           "default": [],
           "description": "List of computed ingress rules to create where 'source_security_group_id' is used"
          },
          "create": {
           "default": true,
           "description": "Whether to create security group and all rules"
          },
          "create_sg": {
           "default": true,
           "description": "Whether to create security group"
          },
          "create_timeout": {
           "default": "10m",
           "description": "Time to wait for a security group to be created"
          },
          "delete_timeout": {
           "default": "15m",
           "description": "Time to wait for a security group to be deleted"
          },
          "description": {
           "default": "Security Group managed by Terraform",
           "description": "Description of security group"
          },
          "egress_cidr_blocks": {
           "default": [
            "0.0.0.0/0"
           ],
           "description": "List of IPv4 CIDR ranges to use on all egress rules"
          },
          "egress_ipv6_cidr_blocks": {
           "default": [
            "::/0"
           ],
           "description": "List of IPv6 CIDR ranges to use on all egress rules"
          },
          "egress_prefix_list_ids": {
           "default": [],
           "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules"
          },
          "egress_rules": {
           "default": [],
           "description": "List of egress rules to create by name"
          },
          "egress_with_cidr_blocks": {
           "default": [],
           "description": "List of egress rules to create where 'cidr_blocks' is used"
          },
          "egress_with_ipv6_cidr_blocks": {
           "default": [],
           "description": "List of egress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "egress_with_self": {
           "default": [],
           "description": "List of egress rules to create where 'self' is defined"
          },
          "egress_with_source_security_group_id": {
           "default": [],
           "description": "List of egress rules to create where 'source_security_group_id' is used"
          },
          "ingress_cidr_blocks": {
           "default": [],
           "description": "List of IPv4 CIDR ranges to use on all ingress rules"
          },
          "ingress_ipv6_cidr_blocks": {
           "default": [],
           "description": "List of IPv6 CIDR ranges to use on all ingress rules"
          },
          "ingress_prefix_list_ids": {
           "default": [],
           "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules"
          },
          "ingress_rules": {
           "default": [],
           "description": "List of ingress rules to create by name"
          },
          "ingress_with_cidr_blocks": {
           "default": [],
           "description": "List of ingress rules to create where 'cidr_blocks' is used"
          },
          "ingress_with_ipv6_cidr_blocks": {
           "default": [],
           "description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "ingress_with_self": {
           "default": [],
           "description": "List of ingress rules to create where 'self' is defined"
          },
          "ingress_with_source_security_group_id": {
           "default": [],
           "description": "List of ingress rules to create where 'source_security_group_id' is used"
          },
          "name": {
           "default": null,
           "description": "Name of security group - not required if create_sg is false"
          },
          "number_of_computed_egress_rules": {
           "default": 0,
           "description": "Number of computed egress rules to create by name"
          },
          "number_of_computed_egress_with_cidr_blocks": {
           "default": 0,
           "description": "Number of computed egress rules to create where 'cidr_blocks' is used"
          },
          "number_of_computed_egress_with_ipv6_cidr_blocks": {
           "default": 0,
           "description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "number_of_computed_egress_with_self": {
           "default": 0,
           "description": "Number of computed egress rules to create where 'self' is defined"
          },
          "number_of_computed_egress_with_source_security_group_id": {
           "default": 0,
           "description": "Number of computed egress rules to create where 'source_security_group_id' is used"
          },
          "number_of_computed_ingress_rules": {
           "default": 0,
           "description": "Number of computed ingress rules to create by name"
          },
          "number_of_computed_ingress_with_cidr_blocks": {
           "default": 0,
           "description": "Number of computed ingress rules to create where 'cidr_blocks' is used"
          },
          "number_of_computed_ingress_with_ipv6_cidr_blocks": {
           "default": 0,
           "description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used"
          },
          "number_of_computed_ingress_with_self": {
           "default": 0,
           "description": "Number of computed ingress rules to create where 'self' is defined"
          },
          "number_of_computed_ingress_with_source_security_group_id": {
           "default": 0,
           "description": "Number of computed ingress rules to create where 'source_security_group_id' is used"
          },
          "putin_khuylo": {
           "default": true,
           "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
          },
          "revoke_rules_on_delete": {
           "default": false,
           "description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR."
          },
          "rules": {
           "default": {
            "_": [
             "",
             "",
             ""
            ],
            "activemq-5671-tcp": [
             "5671",
             "5671",
             "tcp",
             "ActiveMQ AMQP"
            ],
            "activemq-61614-tcp": [
             "61614",
             "61614",
             "tcp",
             "ActiveMQ STOMP"
            ],
            "activemq-61617-tcp": [
             "61617",
             "61617",
             "tcp",
             "ActiveMQ OpenWire"
            ],
            "activemq-61619-tcp": [
             "61619",
             "61619",
             "tcp",
             "ActiveMQ WebSocket"
            ],
            "activemq-8883-tcp": [
             "8883",
             "8883",
             "tcp",
             "ActiveMQ MQTT"
            ],
            "alertmanager-9093-tcp": [
             "9093",
             "9093",
             "tcp",
             "Alert Manager"
            ],
            "alertmanager-9094-tcp": [
             "9094",
             "9094",
             "tcp",
             "Alert Manager Cluster"
            ],
            "all-all": [
             "-1",
             "-1",
             "-1",
             "All protocols"
            ],
            "all-icmp": [
             "-1",
             "-1",
             "icmp",
             "All IPV4 ICMP"
            ],
            "all-ipv6-icmp": [
             "-1",
             "-1",
             "58",
             "All IPV6 ICMP"
            ],
            "all-tcp": [
             "0",
             "65535",
             "tcp",
             "All TCP ports"
            ],
            "all-udp": [
             "0",
             "65535",
             "udp",
             "All UDP ports"
            ],
            "carbon-admin-tcp": [
             "2004",
             "2004",
             "tcp",
             "Carbon admin"
            ],
            "carbon-gui-udp": [
             "8081",
             "8081",
             "tcp",
             "Carbon GUI"
            ],
            "carbon-line-in-tcp": [
             "2003",
             "2003",
             "tcp",
             "Carbon line-in"
            ],
            "carbon-line-in-udp": [
             "2003",
             "2003",
             "udp",
             "Carbon line-in"
            ],
            "carbon-pickle-tcp": [
             "2013",
             "2013",
             "tcp",
             "Carbon pickle"
            ],
            "carbon-pickle-udp": [
             "2013",
             "2013",
             "udp",
             "Carbon pickle"
            ],
            "cassandra-clients-tcp": [
             "9042",
             "9042",
             "tcp",
             "Cassandra clients"
            ],
            "cassandra-jmx-tcp": [
             "7199",
             "7199",
             "tcp",
             "JMX"
            ],
            "cassandra-thrift-clients-tcp": [
             "9160",
             "9160",
             "tcp",
             "Cassandra Thrift clients"
            ],
            "consul-dns-tcp": [
             "8600",
             "8600",
             "tcp",
             "Consul DNS"
            ],
            "consul-dns-udp": [
             "8600",
             "8600",
             "udp",
             "Consul DNS"
            ],
            "consul-grpc-tcp": [
             "8502",
             "8502",
             "tcp",
             "Consul gRPC"
            ],
            "consul-serf-lan-tcp": [
             "8301",
             "8301",
             "tcp",
             "Serf LAN"
            ],
            "consul-serf-lan-udp": [
             "8301",
             "8301",
             "udp",
             "Serf LAN"
            ],
            "consul-serf-wan-tcp": [
             "8302",
             "8302",
             "tcp",
             "Serf WAN"
            ],
            "consul-serf-wan-udp": [
             "8302",
             "8302",
             "udp",
             "Serf WAN"
            ],
            "consul-tcp": [
             "8300",
             "8300",
             "tcp",
             "Consul server"
            ],
            "consul-webui-http-tcp": [
             "8500",
             "8500",
             "tcp",
             "Consul web UI HTTP"
            ],
            "consul-webui-https-tcp": [
             "8501",
             "8501",
             "tcp",
             "Consul web UI HTTPS"
            ],
            "dax-cluster-encrypted-tcp": [
             "9111",
             "9111",
             "tcp",
             "DAX Cluster encrypted"
            ],
            "dax-cluster-unencrypted-tcp": [
             "8111",
             "8111",
             "tcp",
             "DAX Cluster unencrypted"
            ],
            "dns-tcp": [
             "53",
             "53",
             "tcp",
             "DNS"
            ],
            "dns-udp": [
             "53",
             "53",
             "udp",
             "DNS"
            ],
            "docker-swarm-mngmt-tcp": [
             "2377",
             "2377",
             "tcp",
             "Docker Swarm cluster management"
            ],
            "docker-swarm-node-tcp": [
             "7946",
             "7946",
             "tcp",
             "Docker Swarm node"
            ],
            "docker-swarm-node-udp": [
             "7946",
             "7946",
             "udp",
             "Docker Swarm node"
            ],
            "docker-swarm-overlay-udp": [
             "4789",
             "4789",
             "udp",
             "Docker Swarm Overlay Network Traffic"
            ],
            "elasticsearch-java-tcp": [
             "9300",
             "9300",
             "tcp",
             "Elasticsearch Java interface"
            ],
            "elasticsearch-rest-tcp": [
             "9200",
             "9200",
             "tcp",
             "Elasticsearch REST interface"
            ],
            "etcd-client-tcp": [
             "2379",
             "2379",
             "tcp",
             "Etcd Client"
            ],
            "etcd-peer-tcp": [
             "2380",
             "2380",
             "tcp",
             "Etcd Peer"
            ],
            "grafana-tcp": [
             "3000",
             "3000",
             "tcp",
             "Grafana Dashboard"
            ],
            "graphite-2003-tcp": [
             "2003",
             "2003",
             "tcp",
             "Carbon receiver plain text"
            ],
            "graphite-2004-tcp": [
             "2004",
             "2004",
             "tcp",
             "Carbon receiver pickle"
            ],
            "graphite-2023-tcp": [
             "2023",
             "2023",
             "tcp",
             "Carbon aggregator plaintext"
            ],
            "graphite-2024-tcp": [
             "2024",
             "2024",
             "tcp",
             "Carbon aggregator pickle"
            ],
            "graphite-8080-tcp": [
             "8080",
             "8080",
             "tcp",
             "Graphite gunicorn port"
            ],
            "graphite-8125-tcp": [
             "8125",
             "8125",
             "tcp",
             "Statsd TCP"
            ],
            "graphite-8125-udp": [
             "8125",
             "8125",
             "udp",
             "Statsd UDP default"
            ],
            "graphite-8126-tcp": [
             "8126",
             "8126",
             "tcp",
             "Statsd admin"
            ],
            "graphite-webui": [
             "80",
             "80",
             "tcp",
             "Graphite admin interface"
            ],
            "http-80-tcp": [
             "80",
             "80",
             "tcp",
             "HTTP"
            ],
            "http-8080-tcp": [
             "8080",
             "8080",
             "tcp",
             "HTTP"
            ],
            "https-443-tcp": [
             "443",
             "443",
             "tcp",
             "HTTPS"
            ],
            "https-8443-tcp": [
             "8443",
             "8443",
             "tcp",
             "HTTPS"
            ],
            "ipsec-4500-udp": [
             "4500",
             "4500",
             "udp",
             "IPSEC NAT-T"
            ],
            "ipsec-500-udp": [
             "500",
             "500",
             "udp",
             "IPSEC ISAKMP"
            ],
            "kafka-broker-sasl-iam-public-tcp": [
             "9198",
             "9198",
             "tcp",
             "Kafka SASL/IAM Public access control enabled (MSK specific)"
            ],
            "kafka-broker-sasl-iam-tcp": [
             "9098",
             "9098",
             "tcp",
             "Kafka SASL/IAM access control enabled (MSK specific)"
            ],
            "kafka-broker-sasl-scram-public-tcp": [
             "9196",
             "9196",
             "tcp",
             "Kafka SASL/SCRAM Public enabled broker (MSK specific)"
            ],
            "kafka-broker-sasl-scram-tcp": [
             "9096",
             "9096",
             "tcp",
             "Kafka SASL/SCRAM enabled broker (MSK specific)"
            ],
            "kafka-broker-tcp": [
             "9092",
             "9092",
             "tcp",
             "Kafka PLAINTEXT enable broker 0.8.2+"
            ],
            "kafka-broker-tls-public-tcp": [
             "9194",
             "9194",
             "tcp",
             "Kafka TLS Public enabled broker 0.8.2+ (MSK specific)"
            ],
            "kafka-broker-tls-tcp": [
             "9094",
             "9094",
             "tcp",
             "Kafka TLS enabled broker 0.8.2+"
            ],
            "kafka-jmx-exporter-tcp": [
             "11001",
             "11001",
             "tcp",
             "Kafka JMX Exporter"
            ],
            "kafka-node-exporter-tcp": [
             "11002",
             "11002",
             "tcp",
             "Kafka Node Exporter"
            ],
            "kibana-tcp": [
             "5601",
             "5601",
             "tcp",
             "Kibana Web Interface"
            ],
            "kubernetes-api-tcp": [
             "6443",
             "6443",
             "tcp",
             "Kubernetes API Server"
            ],
            "ldap-tcp": [
             "389",
             "389",
             "tcp",
             "LDAP"
            ],
            "ldaps-tcp": [
             "636",
             "636",
             "tcp",
             "LDAPS"
            ],
            "logstash-tcp": [
             "5044",
             "5044",
             "tcp",
             "Logstash"
            ],
            "loki-grafana": [
             "3100",
             "3100",
             "tcp",
             "Grafana Loki enpoint"
            ],
            "loki-grafana-grpc": [
             "9096",
             "9096",
             "tcp",
             "Grafana Loki GRPC"
            ],
            "memcached-tcp": [
             "11211",
             "11211",
             "tcp",
             "Memcached"
            ],
            "minio-tcp": [
             "9000",
             "9000",
             "tcp",
             "MinIO"
            ],
            "mongodb-27017-tcp": [
             "27017",
             "27017",
             "tcp",
             "MongoDB"
            ],
            "mongodb-27018-tcp": [
             "27018",
             "27018",
             "tcp",
             "MongoDB shard"
            ],
            "mongodb-27019-tcp": [
             "27019",
             "27019",
             "tcp",
             "MongoDB config server"
            ],
            "mssql-analytics-tcp": [
             "2383",
             "2383",
             "tcp",
             "MSSQL Analytics"
            ],
            "mssql-broker-tcp": [
             "4022",
             "4022",
             "tcp",
             "MSSQL Broker"
            ],
            "mssql-tcp": [
             "1433",
             "1433",
             "tcp",
             "MSSQL Server"
            ],
            "mssql-udp": [
             "1434",
             "1434",
             "udp",
             "MSSQL Browser"
            ],
            "mysql-tcp": [
             "3306",
             "3306",
             "tcp",
             "MySQL/Aurora"
            ],
            "nfs-tcp": [
             "2049",
             "2049",
             "tcp",
             "NFS/EFS"
            ],
            "nomad-http-tcp": [
             "4646",
             "4646",
             "tcp",
             "Nomad HTTP"
            ],
            "nomad-rpc-tcp": [
             "4647",
             "4647",
             "tcp",
             "Nomad RPC"
            ],
            "nomad-serf-tcp": [
             "4648",
             "4648",
             "tcp",
             "Serf"
            ],
            "nomad-serf-udp": [
             "4648",
             "4648",
             "udp",
             "Serf"
            ],
            "ntp-udp": [
             "123",
             "123",
             "udp",
             "NTP"
            ],
            "octopus-tentacle-tcp": [
             "10933",
             "10933",
             "tcp",
             "Octopus Tentacle"
            ],
            "openvpn-https-tcp": [
             "443",
             "443",
             "tcp",
             "OpenVPN"
            ],
            "openvpn-tcp": [
             "943",
             "943",
             "tcp",
             "OpenVPN"
            ],
            "openvpn-udp": [
             "1194",
             "1194",
             "udp",
             "OpenVPN"
            ],
            "oracle-db-tcp": [
             "1521",
             "1521",
             "tcp",
             "Oracle"
            ],
            "postgresql-tcp": [
             "5432",
             "5432",
             "tcp",
             "PostgreSQL"
            ],
            "prometheus-http-tcp": [
             "9090",
             "9090",
             "tcp",
             "Prometheus"
            ],
            "prometheus-node-exporter-http-tcp": [
             "9100",
             "9100",
             "tcp",
             "Prometheus Node Exporter"
            ],
            "prometheus-pushgateway-http-tcp": [
             "9091",
             "9091",
             "tcp",
             "Prometheus Pushgateway"
            ],
            "promtail-http": [
             "9200",
             "9200",
             "tcp",
             "Promtail endpoint"
            ],
            "puppet-tcp": [
             "8140",
             "8140",
             "tcp",
             "Puppet"
            ],
            "puppetdb-tcp": [
             "8081",
             "8081",
             "tcp",
             "PuppetDB"
            ],
            "rabbitmq-15672-tcp": [
             "15672",
             "15672",
             "tcp",
             "RabbitMQ"
            ],
            "rabbitmq-25672-tcp": [
             "25672",
             "25672",
             "tcp",
             "RabbitMQ"
            ],
            "rabbitmq-4369-tcp": [
             "4369",
             "4369",
             "tcp",
             "RabbitMQ epmd"
            ],
            "rabbitmq-5671-tcp": [
             "5671",
             "5671",
             "tcp",
             "RabbitMQ"
            ],
            "rabbitmq-5672-tcp": [
             "5672",
             "5672",
             "tcp",
             "RabbitMQ"
            ],
            "rdp-tcp": [
             "3389",
             "3389",
             "tcp",
             "Remote Desktop"
            ],
            "rdp-udp": [
             "3389",
             "3389",
             "udp",
             "Remote Desktop"
            ],
            "redis-tcp": [
             "6379",
             "6379",
             "tcp",
             "Redis"
            ],
            "redshift-tcp": [
             "5439",
             "5439",
             "tcp",
             "Redshift"
            ],
            "saltstack-tcp": [
             "4505",
             "4506",
             "tcp",
             "SaltStack"
            ],
            "smtp-submission-2587-tcp": [
             "2587",
             "2587",
             "tcp",
             "SMTP Submission"
            ],
            "smtp-submission-587-tcp": [
             "587",
             "587",
             "tcp",
             "SMTP Submission"
            ],
            "smtp-tcp": [
             "25",
             "25",
             "tcp",
             "SMTP"
            ],
            "smtps-2456-tcp": [
             "2465",
             "2465",
             "tcp",
             "SMTPS"
            ],
            "smtps-465-tcp": [
             "465",
             "465",
             "tcp",
             "SMTPS"
            ],
            "solr-tcp": [
             "8983",
             "8987",
             "tcp",
             "Solr"
            ],
            "splunk-hec-tcp": [
             "8088",
             "8088",
             "tcp",
             "Splunk HEC"
            ],
            "splunk-indexer-tcp": [
             "9997",
             "9997",
             "tcp",
             "Splunk indexer"
            ],
            "splunk-splunkd-tcp": [
             "8089",
             "8089",
             "tcp",
             "Splunkd"
            ],
            "splunk-web-tcp": [
             "8000",
             "8000",
             "tcp",
             "Splunk Web"
            ],
            "squid-proxy-tcp": [
             "3128",
             "3128",
             "tcp",
             "Squid default proxy"
            ],
            "ssh-tcp": [
             "22",
             "22",
             "tcp",
             "SSH"
            ],
            "storm-nimbus-tcp": [
             "6627",
             "6627",
             "tcp",
             "Nimbus"
            ],
            "storm-supervisor-tcp": [
             "6700",
             "6703",
             "tcp",
             "Supervisor"
            ],
            "storm-ui-tcp": [
             "8080",
             "8080",
             "tcp",
             "Storm UI"
            ],
            "vault-tcp": [
             "8200",
             "8200",
             "tcp",
             "Vault"
            ],
            "wazuh-dashboard": [
             "443",
             "443",
             "tcp",
             "Wazuh web user interface"
            ],
            "wazuh-indexer-restful-api": [
             "9200",
             "9200",
             "tcp",
             "Wazuh indexer RESTful API"
            ],
            "wazuh-server-agent-cluster-daemon": [
             "1516",
             "1516",
             "tcp",
             "Wazuh cluster daemon"
            ],
            "wazuh-server-agent-connection-tcp": [
             "1514",
             "1514",
             "tcp",
             "Agent connection service(TCP)"
            ],
            "wazuh-server-agent-connection-udp": [
             "1514",
             "1514",
             "udp",
             "Agent connection service(UDP)"
            ],
            "wazuh-server-agent-enrollment": [
             "1515",
             "1515",
             "tcp",
             "Agent enrollment service"
            ],
            "wazuh-server-restful-api": [
             "55000",
             "55000",
             "tcp",
             "Wazuh server RESTful API"
            ],
            "wazuh-server-syslog-collector-tcp": [
             "514",
             "514",
             "tcp",
             "Wazuh Syslog collector(TCP)"
            ],
            "wazuh-server-syslog-collector-udp": [
             "514",
             "514",
             "udp",
             "Wazuh Syslog collector(UDP)"
            ],
            "web-jmx-tcp": [
             "1099",
             "1099",
             "tcp",
             "JMX"
            ],
            "winrm-http-tcp": [
             "5985",
             "5985",
             "tcp",
             "WinRM HTTP"
            ],
            "winrm-https-tcp": [
             "5986",
             "5986",
             "tcp",
             "WinRM HTTPS"
            ],
            "zabbix-agent": [
             "10050",
             "10050",
             "tcp",
             "Zabbix Agent"
            ],
            "zabbix-proxy": [
             "10051",
             "10051",
             "tcp",
             "Zabbix Proxy"
            ],
            "zabbix-server": [
             "10051",
             "10051",
             "tcp",
             "Zabbix Server"
            ],
            "zipkin-admin-query-tcp": [
             "9901",
             "9901",
             "tcp",
             "Zipkin Admin port query"
            ],
            "zipkin-admin-tcp": [
             "9990",
             "9990",
             "tcp",
             "Zipkin Admin port collector"
            ],
            "zipkin-admin-web-tcp": [
             "9991",
             "9991",
             "tcp",
             "Zipkin Admin port web"
            ],
            "zipkin-query-tcp": [
             "9411",
             "9411",
             "tcp",
             "Zipkin query port"
            ],
            "zipkin-web-tcp": [
             "8080",
             "8080",
             "tcp",
             "Zipkin web port"
            ],
            "zookeeper-2181-tcp": [
             "2181",
             "2181",
             "tcp",
             "Zookeeper"
            ],
            "zookeeper-2182-tls-tcp": [
             "2182",
             "2182",
             "tcp",
             "Zookeeper TLS (MSK specific)"
            ],
            "zookeeper-2888-tcp": [
             "2888",
             "2888",
             "tcp",
             "Zookeeper"
            ],
            "zookeeper-3888-tcp": [
             "3888",
             "3888",
             "tcp",
             "Zookeeper"
            ],
            "zookeeper-jmx-tcp": [
             "7199",
             "7199",
             "tcp",
             "JMX"
            ]
           },
           "description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])"
          },
          "security_group_id": {
           "default": null,
           "description": "ID of existing security group whose rules we will manage"
          },
          "tags": {
           "default": {},
           "description": "A mapping of tags to assign to security group"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation"
          },
          "vpc_id": {
           "default": null,
           "description": "ID of the VPC where to create security group"
          }
         }
        },
        "source": "terraform-aws-modules/security-group/aws",
        "version_constraint": "4.17.1"
       },
       "tgw": {
        "depends_on": [
         "var.hcp_hvn_provider_account_id"
        ],
        "expressions": {
         "enable_auto_accept_shared_attachments": {
          "constant_value": true
         },
         "name": {
          "references": [
           "var.deployment_id"
          ]
         },
         "ram_allow_external_principals": {
          "constant_value": true
         },
         "ram_principals": {
          "references": [
           "var.hcp_hvn_provider_account_id"
          ]
         },
         "vpc_attachments": {
          "references": [
           "module.vpc.vpc_id",
           "module.vpc",
           "module.vpc.private_subnets",
           "module.vpc"
          ]
         }
        },
        "module": {
         "outputs": {
          "ec2_transit_gateway_arn": {
           "description": "EC2 Transit Gateway Amazon Resource Name (ARN)",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway.this[0].arn",
             "aws_ec2_transit_gateway.this[0]",
             "aws_ec2_transit_gateway.this"
            ]
           }
          },
          "ec2_transit_gateway_association_default_route_table_id": {
           "description": "Identifier of the default association route table",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway.this[0].association_default_route_table_id",
             "aws_ec2_transit_gateway.this[0]",
             "aws_ec2_transit_gateway.this"
            ]
           }
          },
          "ec2_transit_gateway_id": {
           "description": "EC2 Transit Gateway identifier",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway.this[0].id",
             "aws_ec2_transit_gateway.this[0]",
             "aws_ec2_transit_gateway.this"
            ]
           }
          },
          "ec2_transit_gateway_owner_id": {
           "description": "Identifier of the AWS account that owns the EC2 Transit Gateway",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway.this[0].owner_id",
             "aws_ec2_transit_gateway.this[0]",
             "aws_ec2_transit_gateway.this"
            ]
           }
          },
          "ec2_transit_gateway_propagation_default_route_table_id": {
           "description": "Identifier of the default propagation route table",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway.this[0].propagation_default_route_table_id",
             "aws_ec2_transit_gateway.this[0]",
             "aws_ec2_transit_gateway.this"
            ]
           }
          },
          "ec2_transit_gateway_route_ids": {
           "description": "List of EC2 Transit Gateway Route Table identifier combined with destination",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_association": {
           "description": "Map of EC2 Transit Gateway Route Table Association attributes",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table_association.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_association_ids": {
           "description": "List of EC2 Transit Gateway Route Table Association identifiers",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table_association.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_default_association_route_table": {
           "description": "Boolean whether this is the default association route table for the EC2 Transit Gateway",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table.this[0].default_association_route_table",
             "aws_ec2_transit_gateway_route_table.this[0]",
             "aws_ec2_transit_gateway_route_table.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_default_propagation_route_table": {
           "description": "Boolean whether this is the default propagation route table for the EC2 Transit Gateway",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table.this[0].default_propagation_route_table",
             "aws_ec2_transit_gateway_route_table.this[0]",
             "aws_ec2_transit_gateway_route_table.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_id": {
           "description": "EC2 Transit Gateway Route Table identifier",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table.this[0].id",
             "aws_ec2_transit_gateway_route_table.this[0]",
             "aws_ec2_transit_gateway_route_table.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_propagation": {
           "description": "Map of EC2 Transit Gateway Route Table Propagation attributes",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table_propagation.this"
            ]
           }
          },
          "ec2_transit_gateway_route_table_propagation_ids": {
           "description": "List of EC2 Transit Gateway Route Table Propagation identifiers",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_route_table_propagation.this"
            ]
           }
          },
          "ec2_transit_gateway_vpc_attachment": {
           "description": "Map of EC2 Transit Gateway VPC Attachment attributes",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_vpc_attachment.this"
            ]
           }
          },
          "ec2_transit_gateway_vpc_attachment_ids": {
           "description": "List of EC2 Transit Gateway VPC Attachment identifiers",
           "expression": {
            "references": [
             "aws_ec2_transit_gateway_vpc_attachment.this"
            ]
           }
          },
          "ram_principal_association_id": {
           "description": "The Amazon Resource Name (ARN) of the Resource Share and the principal, separated by a comma",
           "expression": {
            "references": [
             "aws_ram_principal_association.this[0].id",
             "aws_ram_principal_association.this[0]",
             "aws_ram_principal_association.this"
            ]
           }
          },
          "ram_resource_share_id": {
           "description": "The Amazon Resource Name (ARN) of the resource share",
           "expression": {
            "references": [
             "aws_ram_resource_share.this[0].id",
             "aws_ram_resource_share.this[0]",
             "aws_ram_resource_share.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_ec2_tag.this",
           "expressions": {
            "key": {
             "references": [
              "each.key"
             ]
            },
            "resource_id": {
             "references": [
              "aws_ec2_transit_gateway.this[0].association_default_route_table_id",
              "aws_ec2_transit_gateway.this[0]",
              "aws_ec2_transit_gateway.this"
             ]
            },
            "value": {
             "references": [
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.tgw_default_route_table_tags_merged",
             "var.create_tgw",
             "var.enable_default_route_table_association"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_tag"
          },
          {
           "address": "aws_ec2_transit_gateway.this",
           "count_expression": {
            "references": [
             "var.create_tgw"
            ]
           },
           "expressions": {
            "amazon_side_asn": {
             "references": [
              "var.amazon_side_asn"
             ]
            },
            "auto_accept_shared_attachments": {
             "references": [
              "var.enable_auto_accept_shared_attachments"
             ]
            },
            "default_route_table_association": {
             "references": [
              "var.enable_default_route_table_association"
             ]
            },
            "default_route_table_propagation": {
             "references": [
              "var.enable_default_route_table_propagation"
             ]
            },
            "description": {
             "references": [
              "var.description",
              "var.name"
             ]
            },
            "dns_support": {
             "references": [
              "var.enable_dns_support"
             ]
            },
            "multicast_support": {
             "references": [
              "var.enable_mutlicast_support"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.name",
              "var.tgw_tags"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.timeouts.create",
               "var.timeouts"
              ]
             },
             "delete": {
              "references": [
               "var.timeouts.delete",
               "var.timeouts"
              ]
             },
             "update": {
              "references": [
               "var.timeouts.update",
               "var.timeouts"
              ]
             }
            },
            "transit_gateway_cidr_blocks": {
             "references": [
              "var.transit_gateway_cidr_blocks"
             ]
            },
            "vpn_ecmp_support": {
             "references": [
              "var.enable_vpn_ecmp_support"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway"
          },
          {
           "address": "aws_ec2_transit_gateway_route.this",
           "count_expression": {
            "references": [
             "local.vpc_attachments_with_routes"
            ]
           },
           "expressions": {
            "blackhole": {
             "references": [
              "local.vpc_attachments_with_routes",
              "count.index"
             ]
            },
            "destination_cidr_block": {
             "references": [
              "local.vpc_attachments_with_routes",
              "count.index"
             ]
            },
            "transit_gateway_attachment_id": {
             "references": [
              "local.vpc_attachments_with_routes",
              "count.index",
              "aws_ec2_transit_gateway_vpc_attachment.this",
              "local.vpc_attachments_with_routes",
              "count.index"
             ]
            },
            "transit_gateway_route_table_id": {
             "references": [
              "var.create_tgw",
              "aws_ec2_transit_gateway_route_table.this[0].id",
              "aws_ec2_transit_gateway_route_table.this[0]",
              "aws_ec2_transit_gateway_route_table.this",
              "var.transit_gateway_route_table_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway_route"
          },
          {
           "address": "aws_ec2_transit_gateway_route_table.this",
           "count_expression": {
            "references": [
             "var.create_tgw"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.tags",
              "var.name",
              "var.tgw_route_table_tags"
             ]
            },
            "transit_gateway_id": {
             "references": [
              "aws_ec2_transit_gateway.this[0].id",
              "aws_ec2_transit_gateway.this[0]",
              "aws_ec2_transit_gateway.this"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway_route_table"
          },
          {
           "address": "aws_ec2_transit_gateway_route_table_association.this",
           "expressions": {
            "transit_gateway_attachment_id": {
             "references": [
              "aws_ec2_transit_gateway_vpc_attachment.this",
              "each.key"
             ]
            },
            "transit_gateway_route_table_id": {
             "references": [
              "var.create_tgw",
              "aws_ec2_transit_gateway_route_table.this[0].id",
              "aws_ec2_transit_gateway_route_table.this[0]",
              "aws_ec2_transit_gateway_route_table.this",
              "each.value.transit_gateway_route_table_id",
              "each.value",
              "var.transit_gateway_route_table_id"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.vpc_attachments",
             "var.create_tgw"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway_route_table_association"
          },
          {
           "address": "aws_ec2_transit_gateway_route_table_propagation.this",
           "expressions": {
            "transit_gateway_attachment_id": {
             "references": [
              "aws_ec2_transit_gateway_vpc_attachment.this",
              "each.key"
             ]
            },
            "transit_gateway_route_table_id": {
             "references": [
              "var.create_tgw",
              "aws_ec2_transit_gateway_route_table.this[0].id",
              "aws_ec2_transit_gateway_route_table.this[0]",
              "aws_ec2_transit_gateway_route_table.this",
              "each.value.transit_gateway_route_table_id",
              "each.value",
              "var.transit_gateway_route_table_id"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.vpc_attachments",
             "var.create_tgw"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway_route_table_propagation"
          },
          {
           "address": "aws_ec2_transit_gateway_vpc_attachment.this",
           "expressions": {
            "appliance_mode_support": {
             "references": [
              "each.value.appliance_mode_support",
              "each.value"
             ]
            },
            "dns_support": {
             "references": [
              "each.value.dns_support",
              "each.value"
             ]
            },
            "ipv6_support": {
             "references": [
              "each.value.ipv6_support",
              "each.value"
             ]
            },
            "subnet_ids": {
             "references": [
              "each.value.subnet_ids",
              "each.value"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.name",
              "var.tgw_vpc_attachment_tags"
             ]
            },
            "transit_gateway_default_route_table_association": {
             "references": [
              "each.value.transit_gateway_default_route_table_association",
              "each.value"
             ]
            },
            "transit_gateway_default_route_table_propagation": {
             "references": [
              "each.value.transit_gateway_default_route_table_propagation",
              "each.value"
             ]
            },
            "transit_gateway_id": {
             "references": [
              "var.create_tgw",
              "aws_ec2_transit_gateway.this[0].id",
              "aws_ec2_transit_gateway.this[0]",
              "aws_ec2_transit_gateway.this",
              "each.value.tgw_id",
              "each.value"
             ]
            },
            "vpc_id": {
             "references": [
              "each.value.vpc_id",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.vpc_attachments"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ec2_transit_gateway_vpc_attachment"
          },
          {
           "address": "aws_ram_principal_association.this",
           "count_expression": {
            "references": [
             "var.create_tgw",
             "var.share_tgw",
             "var.ram_principals"
            ]
           },
           "expressions": {
            "principal": {
             "references": [
              "var.ram_principals",
              "count.index"
             ]
            },
            "resource_share_arn": {
             "references": [
              "aws_ram_resource_share.this[0].arn",
              "aws_ram_resource_share.this[0]",
              "aws_ram_resource_share.this"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ram_principal_association"
          },
          {
           "address": "aws_ram_resource_association.this",
           "count_expression": {
            "references": [
             "var.create_tgw",
             "var.share_tgw"
            ]
           },
           "expressions": {
            "resource_arn": {
             "references": [
              "aws_ec2_transit_gateway.this[0].arn",
              "aws_ec2_transit_gateway.this[0]",
              "aws_ec2_transit_gateway.this"
             ]
            },
            "resource_share_arn": {
             "references": [
              "aws_ram_resource_share.this[0].id",
              "aws_ram_resource_share.this[0]",
              "aws_ram_resource_share.this"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ram_resource_association"
          },
          {
           "address": "aws_ram_resource_share.this",
           "count_expression": {
            "references": [
             "var.create_tgw",
             "var.share_tgw"
            ]
           },
           "expressions": {
            "allow_external_principals": {
             "references": [
              "var.ram_allow_external_principals"
             ]
            },
            "name": {
             "references": [
              "var.ram_name",
              "var.name"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.ram_name",
              "var.name",
              "var.ram_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ram_resource_share"
          },
          {
           "address": "aws_ram_resource_share_accepter.this",
           "count_expression": {
            "references": [
             "var.create_tgw",
             "var.share_tgw"
            ]
           },
           "expressions": {
            "share_arn": {
             "references": [
              "var.ram_resource_share_arn"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ram_resource_share_accepter"
          },
          {
           "address": "aws_route.this",
           "expressions": {
            "destination_cidr_block": {
             "references": [
              "each.value"
             ]
            },
            "route_table_id": {
             "references": [
              "each.key"
             ]
            },
            "transit_gateway_id": {
             "references": [
              "aws_ec2_transit_gateway.this[0].id",
              "aws_ec2_transit_gateway.this[0]",
              "aws_ec2_transit_gateway.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "local.vpc_route_table_destination_cidr"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          }
         ],
         "variables": {
          "amazon_side_asn": {
           "default": null,
           "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the TGW is created with the current default Amazon ASN."
          },
          "create_tgw": {
           "default": true,
           "description": "Controls if TGW should be created (it affects almost all resources)"
          },
          "description": {
           "default": null,
           "description": "Description of the EC2 Transit Gateway"
          },
          "enable_auto_accept_shared_attachments": {
           "default": false,
           "description": "Whether resource attachment requests are automatically accepted"
          },
          "enable_default_route_table_association": {
           "default": true,
           "description": "Whether resource attachments are automatically associated with the default association route table"
          },
          "enable_default_route_table_propagation": {
           "default": true,
           "description": "Whether resource attachments automatically propagate routes to the default propagation route table"
          },
          "enable_dns_support": {
           "default": true,
           "description": "Should be true to enable DNS support in the TGW"
          },
          "enable_mutlicast_support": {
           "default": false,
           "description": "Whether multicast support is enabled"
          },
          "enable_vpn_ecmp_support": {
           "default": true,
           "description": "Whether VPN Equal Cost Multipath Protocol support is enabled"
          },
          "name": {
           "default": "",
           "description": "Name to be used on all the resources as identifier"
          },
          "ram_allow_external_principals": {
           "default": false,
           "description": "Indicates whether principals outside your organization can be associated with a resource share."
          },
          "ram_name": {
           "default": "",
           "description": "The name of the resource share of TGW"
          },
          "ram_principals": {
           "default": [],
           "description": "A list of principals to share TGW with. Possible values are an AWS account ID, an AWS Organizations Organization ARN, or an AWS Organizations Organization Unit ARN"
          },
          "ram_resource_share_arn": {
           "default": "",
           "description": "ARN of RAM resource share"
          },
          "ram_tags": {
           "default": {},
           "description": "Additional tags for the RAM"
          },
          "share_tgw": {
           "default": true,
           "description": "Whether to share your transit gateway with other accounts"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "tgw_default_route_table_tags": {
           "default": {},
           "description": "Additional tags for the Default TGW route table"
          },
          "tgw_route_table_tags": {
           "default": {},
           "description": "Additional tags for the TGW route table"
          },
          "tgw_tags": {
           "default": {},
           "description": "Additional tags for the TGW"
          },
          "tgw_vpc_attachment_tags": {
           "default": {},
           "description": "Additional tags for VPC attachments"
          },
          "timeouts": {
           "default": {},
           "description": "Create, update, and delete timeout configurations for the transit gateway"
          },
          "transit_gateway_cidr_blocks": {
           "default": [],
           "description": "One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6"
          },
          "transit_gateway_route_table_id": {
           "default": null,
           "description": "Identifier of EC2 Transit Gateway Route Table to use with the Target Gateway when reusing it between multiple TGWs"
          },
          "vpc_attachments": {
           "default": {},
           "description": "Maps of maps of VPC details to attach to TGW. Type 'any' to disable type validation by Terraform."
          }
         }
        },
        "source": "terraform-aws-modules/transit-gateway/aws",
        "version_constraint": "2.8.0"
       },
       "vpc": {
        "expressions": {
         "azs": {
          "references": [
           "data.aws_availability_zones.available.names",
           "data.aws_availability_zones.available"
          ]
         },
         "cidr": {
          "references": [
           "var.vpc_cidr"
          ]
         },
         "enable_dns_hostnames": {
          "constant_value": true
         },
         "enable_dns_support": {
          "constant_value": true
         },
         "enable_nat_gateway": {
          "constant_value": true
         },
         "name": {
          "references": [
           "var.deployment_id"
          ]
         },
         "private_subnet_tags": {
          "references": [
           "var.deployment_id"
          ]
         },
         "private_subnets": {
          "references": [
           "var.private_subnets"
          ]
         },
         "public_subnet_tags": {
          "references": [
           "var.deployment_id"
          ]
         },
         "public_subnets": {
          "references": [
           "var.public_subnets"
          ]
         },
         "single_nat_gateway": {
          "constant_value": true
         },
         "tags": {
          "references": [
           "var.deployment_id"
          ]
         }
        },
        "module": {
         "outputs": {
          "azs": {
           "description": "A list of availability zones specified as argument to this module",
           "expression": {
            "references": [
             "var.azs"
            ]
           }
          },
          "cgw_arns": {
           "description": "List of ARNs of Customer Gateway",
           "expression": {
            "references": [
             "aws_customer_gateway.this"
            ]
           }
          },
          "cgw_ids": {
           "description": "List of IDs of Customer Gateway",
           "expression": {
            "references": [
             "aws_customer_gateway.this"
            ]
           }
          },
          "database_internet_gateway_route_id": {
           "description": "ID of the database internet gateway route.",
           "expression": {
            "references": [
             "aws_route.database_internet_gateway"
            ]
           }
          },
          "database_ipv6_egress_route_id": {
           "description": "ID of the database IPv6 egress route.",
           "expression": {
            "references": [
             "aws_route.database_ipv6_egress"
            ]
           }
          },
          "database_nat_gateway_route_ids": {
           "description": "List of IDs of the database nat gateway route.",
           "expression": {
            "references": [
             "aws_route.database_nat_gateway"
            ]
           }
          },
          "database_network_acl_arn": {
           "description": "ARN of the database network ACL",
           "expression": {
            "references": [
             "aws_network_acl.database"
            ]
           }
          },
          "database_network_acl_id": {
           "description": "ID of the database network ACL",
           "expression": {
            "references": [
             "aws_network_acl.database"
            ]
           }
          },
          "database_route_table_association_ids": {
           "description": "List of IDs of the database route table association",
           "expression": {
            "references": [
             "aws_route_table_association.database"
            ]
           }
          },
          "database_route_table_ids": {
           "description": "List of IDs of database route tables",
           "expression": {
            "references": [
             "aws_route_table.database",
             "aws_route_table.database",
             "aws_route_table.private"
            ]
           }
          },
          "database_subnet_arns": {
           "description": "List of ARNs of database subnets",
           "expression": {
            "references": [
             "aws_subnet.database"
            ]
           }
          },
          "database_subnet_group": {
           "description": "ID of database subnet group",
           "expression": {
            "references": [
             "aws_db_subnet_group.database"
            ]
           }
          },
          "database_subnet_group_name": {
           "description": "Name of database subnet group",
           "expression": {
            "references": [
             "aws_db_subnet_group.database"
            ]
           }
          },
          "database_subnets": {
           "description": "List of IDs of database subnets",
           "expression": {
            "references": [
             "aws_subnet.database"
            ]
           }
          },
          "database_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of database subnets",
           "expression": {
            "references": [
             "aws_subnet.database"
            ]
           }
          },
          "database_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.database"
            ]
           }
          },
          "default_network_acl_id": {
           "description": "The ID of the default network ACL",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "default_route_table_id": {
           "description": "The ID of the default route table",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "default_security_group_id": {
           "description": "The ID of the security group created by default on VPC creation",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "default_vpc_arn": {
           "description": "The ARN of the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_cidr_block": {
           "description": "The CIDR block of the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_default_network_acl_id": {
           "description": "The ID of the default network ACL of the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_default_route_table_id": {
           "description": "The ID of the default route table of the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_default_security_group_id": {
           "description": "The ID of the security group created by default on Default VPC creation",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_enable_dns_hostnames": {
           "description": "Whether or not the Default VPC has DNS hostname support",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_enable_dns_support": {
           "description": "Whether or not the Default VPC has DNS support",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_id": {
           "description": "The ID of the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_instance_tenancy": {
           "description": "Tenancy of instances spin up within Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "default_vpc_main_route_table_id": {
           "description": "The ID of the main route table associated with the Default VPC",
           "expression": {
            "references": [
             "aws_default_vpc.this"
            ]
           }
          },
          "dhcp_options_id": {
           "description": "The ID of the DHCP options",
           "expression": {
            "references": [
             "aws_vpc_dhcp_options.this"
            ]
           }
          },
          "egress_only_internet_gateway_id": {
           "description": "The ID of the egress only Internet Gateway",
           "expression": {
            "references": [
             "aws_egress_only_internet_gateway.this"
            ]
           }
          },
          "elasticache_network_acl_arn": {
           "description": "ARN of the elasticache network ACL",
           "expression": {
            "references": [
             "aws_network_acl.elasticache"
            ]
           }
          },
          "elasticache_network_acl_id": {
           "description": "ID of the elasticache network ACL",
           "expression": {
            "references": [
             "aws_network_acl.elasticache"
            ]
           }
          },
          "elasticache_route_table_association_ids": {
           "description": "List of IDs of the elasticache route table association",
           "expression": {
            "references": [
             "aws_route_table_association.elasticache"
            ]
           }
          },
          "elasticache_route_table_ids": {
           "description": "List of IDs of elasticache route tables",
           "expression": {
            "references": [
             "aws_route_table.elasticache",
             "aws_route_table.elasticache",
             "aws_route_table.private"
            ]
           }
          },
          "elasticache_subnet_arns": {
           "description": "List of ARNs of elasticache subnets",
           "expression": {
            "references": [
             "aws_subnet.elasticache"
            ]
           }
          },
          "elasticache_subnet_group": {
           "description": "ID of elasticache subnet group",
           "expression": {
            "references": [
             "aws_elasticache_subnet_group.elasticache"
            ]
           }
          },
          "elasticache_subnet_group_name": {
           "description": "Name of elasticache subnet group",
           "expression": {
            "references": [
             "aws_elasticache_subnet_group.elasticache"
            ]
           }
          },
          "elasticache_subnets": {
           "description": "List of IDs of elasticache subnets",
           "expression": {
            "references": [
             "aws_subnet.elasticache"
            ]
           }
          },
          "elasticache_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of elasticache subnets",
           "expression": {
            "references": [
             "aws_subnet.elasticache"
            ]
           }
          },
          "elasticache_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.elasticache"
            ]
           }
          },
          "igw_arn": {
           "description": "The ARN of the Internet Gateway",
           "expression": {
            "references": [
             "aws_internet_gateway.this"
            ]
           }
          },
          "igw_id": {
           "description": "The ID of the Internet Gateway",
           "expression": {
            "references": [
             "aws_internet_gateway.this"
            ]
           }
          },
          "intra_network_acl_arn": {
           "description": "ARN of the intra network ACL",
           "expression": {
            "references": [
             "aws_network_acl.intra"
            ]
           }
          },
          "intra_network_acl_id": {
           "description": "ID of the intra network ACL",
           "expression": {
            "references": [
             "aws_network_acl.intra"
            ]
           }
          },
          "intra_route_table_association_ids": {
           "description": "List of IDs of the intra route table association",
           "expression": {
            "references": [
             "aws_route_table_association.intra"
            ]
           }
          },
          "intra_route_table_ids": {
           "description": "List of IDs of intra route tables",
           "expression": {
            "references": [
             "aws_route_table.intra"
            ]
           }
          },
          "intra_subnet_arns": {
           "description": "List of ARNs of intra subnets",
           "expression": {
            "references": [
             "aws_subnet.intra"
            ]
           }
          },
          "intra_subnets": {
           "description": "List of IDs of intra subnets",
           "expression": {
            "references": [
             "aws_subnet.intra"
            ]
           }
          },
          "intra_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of intra subnets",
           "expression": {
            "references": [
             "aws_subnet.intra"
            ]
           }
          },
          "intra_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.intra"
            ]
           }
          },
          "name": {
           "description": "The name of the VPC specified as argument to this module",
           "expression": {
            "references": [
             "var.name"
            ]
           }
          },
          "nat_ids": {
           "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
           "expression": {
            "references": [
             "aws_eip.nat"
            ]
           }
          },
          "nat_public_ips": {
           "description": "List of public Elastic IPs created for AWS NAT Gateway",
           "expression": {
            "references": [
             "var.reuse_nat_ips",
             "var.external_nat_ips",
             "aws_eip.nat"
            ]
           }
          },
          "natgw_ids": {
           "description": "List of NAT Gateway IDs",
           "expression": {
            "references": [
             "aws_nat_gateway.this"
            ]
           }
          },
          "outpost_network_acl_arn": {
           "description": "ARN of the outpost network ACL",
           "expression": {
            "references": [
             "aws_network_acl.outpost"
            ]
           }
          },
          "outpost_network_acl_id": {
           "description": "ID of the outpost network ACL",
           "expression": {
            "references": [
             "aws_network_acl.outpost"
            ]
           }
          },
          "outpost_subnet_arns": {
           "description": "List of ARNs of outpost subnets",
           "expression": {
            "references": [
             "aws_subnet.outpost"
            ]
           }
          },
          "outpost_subnets": {
           "description": "List of IDs of outpost subnets",
           "expression": {
            "references": [
             "aws_subnet.outpost"
            ]
           }
          },
          "outpost_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of outpost subnets",
           "expression": {
            "references": [
             "aws_subnet.outpost"
            ]
           }
          },
          "outpost_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.outpost"
            ]
           }
          },
          "private_ipv6_egress_route_ids": {
           "description": "List of IDs of the ipv6 egress route.",
           "expression": {
            "references": [
             "aws_route.private_ipv6_egress"
            ]
           }
          },
          "private_nat_gateway_route_ids": {
           "description": "List of IDs of the private nat gateway route.",
           "expression": {
            "references": [
             "aws_route.private_nat_gateway"
            ]
           }
          },
          "private_network_acl_arn": {
           "description": "ARN of the private network ACL",
           "expression": {
            "references": [
             "aws_network_acl.private"
            ]
           }
          },
          "private_network_acl_id": {
           "description": "ID of the private network ACL",
           "expression": {
            "references": [
             "aws_network_acl.private"
            ]
           }
          },
          "private_route_table_association_ids": {
           "description": "List of IDs of the private route table association",
           "expression": {
            "references": [
             "aws_route_table_association.private"
            ]
           }
          },
          "private_route_table_ids": {
           "description": "List of IDs of private route tables",
           "expression": {
            "references": [
             "aws_route_table.private"
            ]
           }
          },
          "private_subnet_arns": {
           "description": "List of ARNs of private subnets",
           "expression": {
            "references": [
             "aws_subnet.private"
            ]
           }
          },
          "private_subnets": {
           "description": "List of IDs of private subnets",
           "expression": {
            "references": [
             "aws_subnet.private"
            ]
           }
          },
          "private_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of private subnets",
           "expression": {
            "references": [
             "aws_subnet.private"
            ]
           }
          },
          "private_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.private"
            ]
           }
          },
          "public_internet_gateway_ipv6_route_id": {
           "description": "ID of the IPv6 internet gateway route.",
           "expression": {
            "references": [
             "aws_route.public_internet_gateway_ipv6"
            ]
           }
          },
          "public_internet_gateway_route_id": {
           "description": "ID of the internet gateway route.",
           "expression": {
            "references": [
             "aws_route.public_internet_gateway"
            ]
           }
          },
          "public_network_acl_arn": {
           "description": "ARN of the public network ACL",
           "expression": {
            "references": [
             "aws_network_acl.public"
            ]
           }
          },
          "public_network_acl_id": {
           "description": "ID of the public network ACL",
           "expression": {
            "references": [
             "aws_network_acl.public"
            ]
           }
          },
          "public_route_table_association_ids": {
           "description": "List of IDs of the public route table association",
           "expression": {
            "references": [
             "aws_route_table_association.public"
            ]
           }
          },
          "public_route_table_ids": {
           "description": "List of IDs of public route tables",
           "expression": {
            "references": [
             "aws_route_table.public"
            ]
           }
          },
          "public_subnet_arns": {
           "description": "List of ARNs of public subnets",
           "expression": {
            "references": [
             "aws_subnet.public"
            ]
           }
          },
          "public_subnets": {
           "description": "List of IDs of public subnets",
           "expression": {
            "references": [
             "aws_subnet.public"
            ]
           }
          },
          "public_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of public subnets",
           "expression": {
            "references": [
             "aws_subnet.public"
            ]
           }
          },
          "public_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.public"
            ]
           }
          },
          "redshift_network_acl_arn": {
           "description": "ARN of the redshift network ACL",
           "expression": {
            "references": [
             "aws_network_acl.redshift"
            ]
           }
          },
          "redshift_network_acl_id": {
           "description": "ID of the redshift network ACL",
           "expression": {
            "references": [
             "aws_network_acl.redshift"
            ]
           }
          },
          "redshift_public_route_table_association_ids": {
           "description": "List of IDs of the public redshidt route table association",
           "expression": {
            "references": [
             "aws_route_table_association.redshift_public"
            ]
           }
          },
          "redshift_route_table_association_ids": {
           "description": "List of IDs of the redshift route table association",
           "expression": {
            "references": [
             "aws_route_table_association.redshift"
            ]
           }
          },
          "redshift_route_table_ids": {
           "description": "List of IDs of redshift route tables",
           "expression": {
            "references": [
             "aws_route_table.redshift",
             "aws_route_table.redshift",
             "var.enable_public_redshift",
             "aws_route_table.public",
             "aws_route_table.private"
            ]
           }
          },
          "redshift_subnet_arns": {
           "description": "List of ARNs of redshift subnets",
           "expression": {
            "references": [
             "aws_subnet.redshift"
            ]
           }
          },
          "redshift_subnet_group": {
           "description": "ID of redshift subnet group",
           "expression": {
            "references": [
             "aws_redshift_subnet_group.redshift"
            ]
           }
          },
          "redshift_subnets": {
           "description": "List of IDs of redshift subnets",
           "expression": {
            "references": [
             "aws_subnet.redshift"
            ]
           }
          },
          "redshift_subnets_cidr_blocks": {
           "description": "List of cidr_blocks of redshift subnets",
           "expression": {
            "references": [
             "aws_subnet.redshift"
            ]
           }
          },
          "redshift_subnets_ipv6_cidr_blocks": {
           "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
           "expression": {
            "references": [
             "aws_subnet.redshift"
            ]
           }
          },
          "this_customer_gateway": {
           "description": "Map of Customer Gateway attributes",
           "expression": {
            "references": [
             "aws_customer_gateway.this"
            ]
           }
          },
          "vgw_arn": {
           "description": "The ARN of the VPN Gateway",
           "expression": {
            "references": [
             "aws_vpn_gateway.this"
            ]
           }
          },
          "vgw_id": {
           "description": "The ID of the VPN Gateway",
           "expression": {
            "references": [
             "aws_vpn_gateway.this",
             "aws_vpn_gateway_attachment.this"
            ]
           }
          },
          "vpc_arn": {
           "description": "The ARN of the VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_cidr_block": {
           "description": "The CIDR block of the VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_enable_dns_hostnames": {
           "description": "Whether or not the VPC has DNS hostname support",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_enable_dns_support": {
           "description": "Whether or not the VPC has DNS support",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_flow_log_cloudwatch_iam_role_arn": {
           "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
           "expression": {
            "references": [
             "local.flow_log_iam_role_arn"
            ]
           }
          },
          "vpc_flow_log_destination_arn": {
           "description": "The ARN of the destination for VPC Flow Logs",
           "expression": {
            "references": [
             "local.flow_log_destination_arn"
            ]
           }
          },
          "vpc_flow_log_destination_type": {
           "description": "The type of the destination for VPC Flow Logs",
           "expression": {
            "references": [
             "var.flow_log_destination_type"
            ]
           }
          },
          "vpc_flow_log_id": {
           "description": "The ID of the Flow Log resource",
           "expression": {
            "references": [
             "aws_flow_log.this"
            ]
           }
          },
          "vpc_id": {
           "description": "The ID of the VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_instance_tenancy": {
           "description": "Tenancy of instances spin up within VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_ipv6_association_id": {
           "description": "The association ID for the IPv6 CIDR block",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_ipv6_cidr_block": {
           "description": "The IPv6 CIDR block",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_main_route_table_id": {
           "description": "The ID of the main route table associated with this VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_owner_id": {
           "description": "The ID of the AWS account that owns the VPC",
           "expression": {
            "references": [
             "aws_vpc.this"
            ]
           }
          },
          "vpc_secondary_cidr_blocks": {
           "description": "List of secondary CIDR blocks of the VPC",
           "expression": {
            "references": [
             "aws_vpc_ipv4_cidr_block_association.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_cloudwatch_log_group.flow_log",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_log_group"
            ]
           },
           "expressions": {
            "kms_key_id": {
             "references": [
              "var.flow_log_cloudwatch_log_group_kms_key_id"
             ]
            },
            "name": {
             "references": [
              "var.flow_log_cloudwatch_log_group_name_prefix",
              "local.vpc_id"
             ]
            },
            "retention_in_days": {
             "references": [
              "var.flow_log_cloudwatch_log_group_retention_in_days"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.vpc_flow_log_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "flow_log",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_cloudwatch_log_group"
          },
          {
           "address": "aws_customer_gateway.this",
           "expressions": {
            "bgp_asn": {
             "references": [
              "each.value[\"bgp_asn\"]",
              "each.value"
             ]
            },
            "device_name": {
             "references": [
              "each.value"
             ]
            },
            "ip_address": {
             "references": [
              "each.value[\"ip_address\"]",
              "each.value"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "each.key",
              "var.tags",
              "var.customer_gateway_tags"
             ]
            },
            "type": {
             "constant_value": "ipsec.1"
            }
           },
           "for_each_expression": {
            "references": [
             "var.customer_gateways"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_customer_gateway"
          },
          {
           "address": "aws_db_subnet_group.database",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_subnets",
             "var.create_database_subnet_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.name"
             ]
            },
            "name": {
             "references": [
              "var.database_subnet_group_name",
              "var.name"
             ]
            },
            "subnet_ids": {
             "references": [
              "aws_subnet.database"
             ]
            },
            "tags": {
             "references": [
              "var.database_subnet_group_name",
              "var.name",
              "var.tags",
              "var.database_subnet_group_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "database",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_db_subnet_group"
          },
          {
           "address": "aws_default_network_acl.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.manage_default_network_acl"
            ]
           },
           "expressions": {
            "default_network_acl_id": {
             "references": [
              "aws_vpc.this"
             ]
            },
            "subnet_ids": {
             "references": [
              "aws_subnet.public",
              "aws_subnet.private",
              "aws_subnet.intra",
              "aws_subnet.database",
              "aws_subnet.redshift",
              "aws_subnet.elasticache",
              "aws_subnet.outpost",
              "aws_network_acl.public",
              "aws_network_acl.private",
              "aws_network_acl.intra",
              "aws_network_acl.database",
              "aws_network_acl.redshift",
              "aws_network_acl.elasticache",
              "aws_network_acl.outpost"
             ]
            },
            "tags": {
             "references": [
              "var.default_network_acl_name",
              "var.tags",
              "var.default_network_acl_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_default_network_acl"
          },
          {
           "address": "aws_default_route_table.default",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.manage_default_route_table"
            ]
           },
           "expressions": {
            "default_route_table_id": {
             "references": [
              "aws_vpc.this[0].default_route_table_id",
              "aws_vpc.this[0]",
              "aws_vpc.this"
             ]
            },
            "propagating_vgws": {
             "references": [
              "var.default_route_table_propagating_vgws"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.default_route_table_tags"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             },
             "update": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "default",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_default_route_table"
          },
          {
           "address": "aws_default_security_group.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.manage_default_security_group"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.default_security_group_name",
              "var.tags",
              "var.default_security_group_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this[0].id",
              "aws_vpc.this[0]",
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_default_security_group"
          },
          {
           "address": "aws_default_vpc.this",
           "count_expression": {
            "references": [
             "var.manage_default_vpc"
            ]
           },
           "expressions": {
            "enable_classiclink": {
             "references": [
              "var.default_vpc_enable_classiclink"
             ]
            },
            "enable_dns_hostnames": {
             "references": [
              "var.default_vpc_enable_dns_hostnames"
             ]
            },
            "enable_dns_support": {
             "references": [
              "var.default_vpc_enable_dns_support"
             ]
            },
            "tags": {
             "references": [
              "var.default_vpc_name",
              "var.tags",
              "var.default_vpc_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_default_vpc"
          },
          {
           "address": "aws_egress_only_internet_gateway.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_egress_only_igw",
             "var.enable_ipv6",
             "local.max_subnet_length"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.igw_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_egress_only_internet_gateway"
          },
          {
           "address": "aws_eip.nat",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_nat_gateway",
             "var.reuse_nat_ips",
             "local.nat_gateway_count"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.azs",
              "var.single_nat_gateway",
              "count.index",
              "var.tags",
              "var.nat_eip_tags"
             ]
            },
            "vpc": {
             "constant_value": true
            }
           },
           "mode": "managed",
           "name": "nat",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eip"
          },
          {
           "address": "aws_elasticache_subnet_group.elasticache",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_subnets",
             "var.create_elasticache_subnet_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.name"
             ]
            },
            "name": {
             "references": [
              "var.elasticache_subnet_group_name",
              "var.name"
             ]
            },
            "subnet_ids": {
             "references": [
              "aws_subnet.elasticache"
             ]
            },
            "tags": {
             "references": [
              "var.elasticache_subnet_group_name",
              "var.name",
              "var.tags",
              "var.elasticache_subnet_group_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_elasticache_subnet_group"
          },
          {
           "address": "aws_flow_log.this",
           "count_expression": {
            "references": [
             "local.enable_flow_log"
            ]
           },
           "expressions": {
            "iam_role_arn": {
             "references": [
              "local.flow_log_iam_role_arn"
             ]
            },
            "log_destination": {
             "references": [
              "local.flow_log_destination_arn"
             ]
            },
            "log_destination_type": {
             "references": [
              "var.flow_log_destination_type"
             ]
            },
            "log_format": {
             "references": [
              "var.flow_log_log_format"
             ]
            },
            "max_aggregation_interval": {
             "references": [
              "var.flow_log_max_aggregation_interval"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.vpc_flow_log_tags"
             ]
            },
            "traffic_type": {
             "references": [
              "var.flow_log_traffic_type"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_flow_log"
          },
          {
           "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_iam_role"
            ]
           },
           "expressions": {
            "name_prefix": {
             "constant_value": "vpc-flow-log-to-cloudwatch-"
            },
            "policy": {
             "references": [
              "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
              "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
              "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.vpc_flow_log_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "vpc_flow_log_cloudwatch",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy"
          },
          {
           "address": "aws_iam_role.vpc_flow_log_cloudwatch",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
              "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
              "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
             ]
            },
            "name_prefix": {
             "constant_value": "vpc-flow-log-role-"
            },
            "permissions_boundary": {
             "references": [
              "var.vpc_flow_log_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.vpc_flow_log_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "vpc_flow_log_cloudwatch",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_iam_role"
            ]
           },
           "expressions": {
            "policy_arn": {
             "references": [
              "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
              "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
              "aws_iam_policy.vpc_flow_log_cloudwatch"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
              "aws_iam_role.vpc_flow_log_cloudwatch[0]",
              "aws_iam_role.vpc_flow_log_cloudwatch"
             ]
            }
           },
           "mode": "managed",
           "name": "vpc_flow_log_cloudwatch",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_internet_gateway.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_igw",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.igw_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_internet_gateway"
          },
          {
           "address": "aws_nat_gateway.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_nat_gateway",
             "local.nat_gateway_count"
            ]
           },
           "depends_on": [
            "aws_internet_gateway.this"
           ],
           "expressions": {
            "allocation_id": {
             "references": [
              "local.nat_gateway_ips",
              "var.single_nat_gateway",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.public",
              "var.single_nat_gateway",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.azs",
              "var.single_nat_gateway",
              "count.index",
              "var.tags",
              "var.nat_gateway_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_nat_gateway"
          },
          {
           "address": "aws_network_acl.database",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_dedicated_network_acl",
             "var.database_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.database"
             ]
            },
            "tags": {
             "references": [
              "var.database_subnet_suffix",
              "var.name",
              "var.tags",
              "var.database_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "database",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.elasticache",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_dedicated_network_acl",
             "var.elasticache_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.elasticache"
             ]
            },
            "tags": {
             "references": [
              "var.elasticache_subnet_suffix",
              "var.name",
              "var.tags",
              "var.elasticache_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.intra",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_dedicated_network_acl",
             "var.intra_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.intra"
             ]
            },
            "tags": {
             "references": [
              "var.intra_subnet_suffix",
              "var.name",
              "var.tags",
              "var.intra_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "intra",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.outpost",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.outpost_dedicated_network_acl",
             "var.outpost_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.outpost"
             ]
            },
            "tags": {
             "references": [
              "var.outpost_subnet_suffix",
              "var.name",
              "var.tags",
              "var.outpost_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "outpost",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.private",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.private_dedicated_network_acl",
             "var.private_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.private"
             ]
            },
            "tags": {
             "references": [
              "var.private_subnet_suffix",
              "var.name",
              "var.tags",
              "var.private_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "private",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_dedicated_network_acl",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.public"
             ]
            },
            "tags": {
             "references": [
              "var.public_subnet_suffix",
              "var.name",
              "var.tags",
              "var.public_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "public",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl.redshift",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_dedicated_network_acl",
             "var.redshift_subnets"
            ]
           },
           "expressions": {
            "subnet_ids": {
             "references": [
              "aws_subnet.redshift"
             ]
            },
            "tags": {
             "references": [
              "var.redshift_subnet_suffix",
              "var.name",
              "var.tags",
              "var.redshift_acl_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl"
          },
          {
           "address": "aws_network_acl_rule.database_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_dedicated_network_acl",
             "var.database_subnets",
             "var.database_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.database[0].id",
              "aws_network_acl.database[0]",
              "aws_network_acl.database"
             ]
            },
            "protocol": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.database_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "database_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.database_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_dedicated_network_acl",
             "var.database_subnets",
             "var.database_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.database[0].id",
              "aws_network_acl.database[0]",
              "aws_network_acl.database"
             ]
            },
            "protocol": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.database_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "database_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.elasticache_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_dedicated_network_acl",
             "var.elasticache_subnets",
             "var.elasticache_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.elasticache[0].id",
              "aws_network_acl.elasticache[0]",
              "aws_network_acl.elasticache"
             ]
            },
            "protocol": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.elasticache_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.elasticache_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_dedicated_network_acl",
             "var.elasticache_subnets",
             "var.elasticache_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.elasticache[0].id",
              "aws_network_acl.elasticache[0]",
              "aws_network_acl.elasticache"
             ]
            },
            "protocol": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.elasticache_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.intra_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_dedicated_network_acl",
             "var.intra_subnets",
             "var.intra_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.intra[0].id",
              "aws_network_acl.intra[0]",
              "aws_network_acl.intra"
             ]
            },
            "protocol": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.intra_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "intra_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.intra_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_dedicated_network_acl",
             "var.intra_subnets",
             "var.intra_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.intra[0].id",
              "aws_network_acl.intra[0]",
              "aws_network_acl.intra"
             ]
            },
            "protocol": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.intra_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "intra_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.outpost_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.outpost_dedicated_network_acl",
             "var.outpost_subnets",
             "var.outpost_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.outpost[0].id",
              "aws_network_acl.outpost[0]",
              "aws_network_acl.outpost"
             ]
            },
            "protocol": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.outpost_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "outpost_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.outpost_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.outpost_dedicated_network_acl",
             "var.outpost_subnets",
             "var.outpost_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.outpost[0].id",
              "aws_network_acl.outpost[0]",
              "aws_network_acl.outpost"
             ]
            },
            "protocol": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.outpost_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "outpost_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.private_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.private_dedicated_network_acl",
             "var.private_subnets",
             "var.private_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.private[0].id",
              "aws_network_acl.private[0]",
              "aws_network_acl.private"
             ]
            },
            "protocol": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.private_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "private_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.private_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.private_dedicated_network_acl",
             "var.private_subnets",
             "var.private_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.private[0].id",
              "aws_network_acl.private[0]",
              "aws_network_acl.private"
             ]
            },
            "protocol": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.private_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "private_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.public_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_dedicated_network_acl",
             "var.public_subnets",
             "var.public_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.public[0].id",
              "aws_network_acl.public[0]",
              "aws_network_acl.public"
             ]
            },
            "protocol": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.public_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "public_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.public_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_dedicated_network_acl",
             "var.public_subnets",
             "var.public_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.public[0].id",
              "aws_network_acl.public[0]",
              "aws_network_acl.public"
             ]
            },
            "protocol": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.public_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "public_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.redshift_inbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_dedicated_network_acl",
             "var.redshift_subnets",
             "var.redshift_inbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": false
            },
            "from_port": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.redshift[0].id",
              "aws_network_acl.redshift[0]",
              "aws_network_acl.redshift"
             ]
            },
            "protocol": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.redshift_inbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift_inbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_network_acl_rule.redshift_outbound",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_dedicated_network_acl",
             "var.redshift_subnets",
             "var.redshift_outbound_acl_rules"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "egress": {
             "constant_value": true
            },
            "from_port": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_code": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "icmp_type": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "network_acl_id": {
             "references": [
              "aws_network_acl.redshift[0].id",
              "aws_network_acl.redshift[0]",
              "aws_network_acl.redshift"
             ]
            },
            "protocol": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_action": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "rule_number": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            },
            "to_port": {
             "references": [
              "var.redshift_outbound_acl_rules",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift_outbound",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_network_acl_rule"
          },
          {
           "address": "aws_redshift_subnet_group.redshift",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_subnets",
             "var.create_redshift_subnet_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.name"
             ]
            },
            "name": {
             "references": [
              "var.redshift_subnet_group_name",
              "var.name"
             ]
            },
            "subnet_ids": {
             "references": [
              "aws_subnet.redshift"
             ]
            },
            "tags": {
             "references": [
              "var.redshift_subnet_group_name",
              "var.name",
              "var.tags",
              "var.redshift_subnet_group_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_redshift_subnet_group"
          },
          {
           "address": "aws_route.database_internet_gateway",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_igw",
             "var.create_database_subnet_route_table",
             "var.database_subnets",
             "var.create_database_internet_gateway_route",
             "var.create_database_nat_gateway_route"
            ]
           },
           "expressions": {
            "destination_cidr_block": {
             "constant_value": "0.0.0.0/0"
            },
            "gateway_id": {
             "references": [
              "aws_internet_gateway.this[0].id",
              "aws_internet_gateway.this[0]",
              "aws_internet_gateway.this"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.database[0].id",
              "aws_route_table.database[0]",
              "aws_route_table.database"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "database_internet_gateway",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.database_ipv6_egress",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_egress_only_igw",
             "var.enable_ipv6",
             "var.create_database_subnet_route_table",
             "var.database_subnets",
             "var.create_database_internet_gateway_route"
            ]
           },
           "expressions": {
            "destination_ipv6_cidr_block": {
             "constant_value": "::/0"
            },
            "egress_only_gateway_id": {
             "references": [
              "aws_egress_only_internet_gateway.this[0].id",
              "aws_egress_only_internet_gateway.this[0]",
              "aws_egress_only_internet_gateway.this"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.database[0].id",
              "aws_route_table.database[0]",
              "aws_route_table.database"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "database_ipv6_egress",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.database_nat_gateway",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_database_subnet_route_table",
             "var.database_subnets",
             "var.create_database_internet_gateway_route",
             "var.create_database_nat_gateway_route",
             "var.enable_nat_gateway",
             "var.single_nat_gateway",
             "var.database_subnets"
            ]
           },
           "expressions": {
            "destination_cidr_block": {
             "constant_value": "0.0.0.0/0"
            },
            "nat_gateway_id": {
             "references": [
              "aws_nat_gateway.this",
              "count.index"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.database",
              "count.index"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "database_nat_gateway",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.private_ipv6_egress",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_egress_only_igw",
             "var.enable_ipv6",
             "var.private_subnets"
            ]
           },
           "expressions": {
            "destination_ipv6_cidr_block": {
             "constant_value": "::/0"
            },
            "egress_only_gateway_id": {
             "references": [
              "aws_egress_only_internet_gateway.this"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.private",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "private_ipv6_egress",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.private_nat_gateway",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_nat_gateway",
             "local.nat_gateway_count"
            ]
           },
           "expressions": {
            "destination_cidr_block": {
             "constant_value": "0.0.0.0/0"
            },
            "nat_gateway_id": {
             "references": [
              "aws_nat_gateway.this",
              "count.index"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.private",
              "count.index"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "private_nat_gateway",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.public_internet_gateway",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_igw",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "destination_cidr_block": {
             "constant_value": "0.0.0.0/0"
            },
            "gateway_id": {
             "references": [
              "aws_internet_gateway.this[0].id",
              "aws_internet_gateway.this[0]",
              "aws_internet_gateway.this"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.public[0].id",
              "aws_route_table.public[0]",
              "aws_route_table.public"
             ]
            },
            "timeouts": {
             "create": {
              "constant_value": "5m"
             }
            }
           },
           "mode": "managed",
           "name": "public_internet_gateway",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route.public_internet_gateway_ipv6",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_igw",
             "var.enable_ipv6",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "destination_ipv6_cidr_block": {
             "constant_value": "::/0"
            },
            "gateway_id": {
             "references": [
              "aws_internet_gateway.this[0].id",
              "aws_internet_gateway.this[0]",
              "aws_internet_gateway.this"
             ]
            },
            "route_table_id": {
             "references": [
              "aws_route_table.public[0].id",
              "aws_route_table.public[0]",
              "aws_route_table.public"
             ]
            }
           },
           "mode": "managed",
           "name": "public_internet_gateway_ipv6",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route"
          },
          {
           "address": "aws_route_table.database",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_database_subnet_route_table",
             "var.database_subnets",
             "var.single_nat_gateway",
             "var.create_database_internet_gateway_route",
             "var.database_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.single_nat_gateway",
              "var.create_database_internet_gateway_route",
              "var.name",
              "var.database_subnet_suffix",
              "var.database_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.database_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "database",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table.elasticache",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_elasticache_subnet_route_table",
             "var.elasticache_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.elasticache_subnet_suffix",
              "var.tags",
              "var.elasticache_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table.intra",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.intra_subnet_suffix",
              "var.tags",
              "var.intra_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "intra",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table.private",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "local.max_subnet_length",
             "local.nat_gateway_count"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.single_nat_gateway",
              "var.name",
              "var.private_subnet_suffix",
              "var.private_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.private_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "private",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table.public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.public_subnet_suffix",
              "var.name",
              "var.tags",
              "var.public_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "public",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table.redshift",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.create_redshift_subnet_route_table",
             "var.redshift_subnets"
            ]
           },
           "expressions": {
            "tags": {
             "references": [
              "var.name",
              "var.redshift_subnet_suffix",
              "var.tags",
              "var.redshift_route_table_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table"
          },
          {
           "address": "aws_route_table_association.database",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_subnets",
             "var.database_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.database",
              "aws_route_table.private",
              "var.create_database_subnet_route_table",
              "var.single_nat_gateway",
              "var.create_database_internet_gateway_route",
              "count.index",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.database",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "database",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.elasticache",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_subnets",
             "var.elasticache_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.elasticache",
              "aws_route_table.private",
              "var.single_nat_gateway",
              "var.create_elasticache_subnet_route_table",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.elasticache",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.intra",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_subnets",
             "var.intra_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.intra"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.intra",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "intra",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.outpost",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.outpost_subnets",
             "var.outpost_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.private",
              "var.single_nat_gateway",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.outpost",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "outpost",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.private",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.private_subnets",
             "var.private_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.private",
              "var.single_nat_gateway",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.private",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "private",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_subnets",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.public[0].id",
              "aws_route_table.public[0]",
              "aws_route_table.public"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.public",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "public",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.redshift",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_subnets",
             "var.enable_public_redshift",
             "var.redshift_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.redshift",
              "aws_route_table.private",
              "var.single_nat_gateway",
              "var.create_redshift_subnet_route_table",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.redshift",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_route_table_association.redshift_public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_subnets",
             "var.enable_public_redshift",
             "var.redshift_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.redshift",
              "aws_route_table.public",
              "var.single_nat_gateway",
              "var.create_redshift_subnet_route_table",
              "count.index"
             ]
            },
            "subnet_id": {
             "references": [
              "aws_subnet.redshift",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift_public",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_route_table_association"
          },
          {
           "address": "aws_subnet.database",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.database_subnets",
             "var.database_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.database_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.database_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.database_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.database_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.database_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.database_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.database_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "database",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.elasticache",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.elasticache_subnets",
             "var.elasticache_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.elasticache_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.elasticache_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.elasticache_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.elasticache_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.elasticache_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.elasticache_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.elasticache_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "elasticache",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.intra",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.intra_subnets",
             "var.intra_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.intra_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.intra_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.intra_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.intra_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.intra_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.intra_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.intra_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "intra",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.outpost",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.outpost_subnets",
             "var.outpost_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.outpost_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.outpost_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.outpost_az"
             ]
            },
            "cidr_block": {
             "references": [
              "var.outpost_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.outpost_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.outpost_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "outpost_arn": {
             "references": [
              "var.outpost_arn"
             ]
            },
            "tags": {
             "references": [
              "var.outpost_subnet_suffix",
              "var.name",
              "var.outpost_az",
              "var.tags",
              "var.outpost_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "outpost",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.private",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.private_subnets",
             "var.private_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.private_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.private_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.private_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.private_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.private_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.private_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.private_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "private",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.public_subnets",
             "var.one_nat_gateway_per_az",
             "var.public_subnets",
             "var.azs",
             "var.public_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.public_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.public_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.public_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.public_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.public_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "map_public_ip_on_launch": {
             "references": [
              "var.map_public_ip_on_launch"
             ]
            },
            "tags": {
             "references": [
              "var.public_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.public_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "public",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_subnet.redshift",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.redshift_subnets",
             "var.redshift_subnets"
            ]
           },
           "expressions": {
            "assign_ipv6_address_on_creation": {
             "references": [
              "var.redshift_subnet_assign_ipv6_address_on_creation",
              "var.assign_ipv6_address_on_creation",
              "var.redshift_subnet_assign_ipv6_address_on_creation"
             ]
            },
            "availability_zone": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "availability_zone_id": {
             "references": [
              "var.azs",
              "count.index",
              "var.azs",
              "count.index"
             ]
            },
            "cidr_block": {
             "references": [
              "var.redshift_subnets",
              "count.index"
             ]
            },
            "ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6",
              "var.redshift_subnet_ipv6_prefixes",
              "aws_vpc.this[0].ipv6_cidr_block",
              "aws_vpc.this[0]",
              "aws_vpc.this",
              "var.redshift_subnet_ipv6_prefixes",
              "count.index"
             ]
            },
            "tags": {
             "references": [
              "var.redshift_subnet_suffix",
              "var.name",
              "var.azs",
              "count.index",
              "var.tags",
              "var.redshift_subnet_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "redshift",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_subnet"
          },
          {
           "address": "aws_vpc.this",
           "count_expression": {
            "references": [
             "var.create_vpc"
            ]
           },
           "expressions": {
            "assign_generated_ipv6_cidr_block": {
             "references": [
              "var.enable_ipv6"
             ]
            },
            "cidr_block": {
             "references": [
              "var.cidr"
             ]
            },
            "enable_classiclink": {
             "references": [
              "var.enable_classiclink"
             ]
            },
            "enable_classiclink_dns_support": {
             "references": [
              "var.enable_classiclink_dns_support"
             ]
            },
            "enable_dns_hostnames": {
             "references": [
              "var.enable_dns_hostnames"
             ]
            },
            "enable_dns_support": {
             "references": [
              "var.enable_dns_support"
             ]
            },
            "instance_tenancy": {
             "references": [
              "var.instance_tenancy"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.vpc_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_vpc"
          },
          {
           "address": "aws_vpc_dhcp_options.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_dhcp_options"
            ]
           },
           "expressions": {
            "domain_name": {
             "references": [
              "var.dhcp_options_domain_name"
             ]
            },
            "domain_name_servers": {
             "references": [
              "var.dhcp_options_domain_name_servers"
             ]
            },
            "netbios_name_servers": {
             "references": [
              "var.dhcp_options_netbios_name_servers"
             ]
            },
            "netbios_node_type": {
             "references": [
              "var.dhcp_options_netbios_node_type"
             ]
            },
            "ntp_servers": {
             "references": [
              "var.dhcp_options_ntp_servers"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.dhcp_options_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpc_dhcp_options"
          },
          {
           "address": "aws_vpc_dhcp_options_association.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_dhcp_options"
            ]
           },
           "expressions": {
            "dhcp_options_id": {
             "references": [
              "aws_vpc_dhcp_options.this[0].id",
              "aws_vpc_dhcp_options.this[0]",
              "aws_vpc_dhcp_options.this"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpc_dhcp_options_association"
          },
          {
           "address": "aws_vpc_ipv4_cidr_block_association.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.secondary_cidr_blocks",
             "var.secondary_cidr_blocks"
            ]
           },
           "expressions": {
            "cidr_block": {
             "references": [
              "var.secondary_cidr_blocks",
              "count.index"
             ]
            },
            "vpc_id": {
             "references": [
              "aws_vpc.this[0].id",
              "aws_vpc.this[0]",
              "aws_vpc.this"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpc_ipv4_cidr_block_association"
          },
          {
           "address": "aws_vpn_gateway.this",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.enable_vpn_gateway"
            ]
           },
           "expressions": {
            "amazon_side_asn": {
             "references": [
              "var.amazon_side_asn"
             ]
            },
            "availability_zone": {
             "references": [
              "var.vpn_gateway_az"
             ]
            },
            "tags": {
             "references": [
              "var.name",
              "var.tags",
              "var.vpn_gateway_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpn_gateway"
          },
          {
           "address": "aws_vpn_gateway_attachment.this",
           "count_expression": {
            "references": [
             "var.vpn_gateway_id"
            ]
           },
           "expressions": {
            "vpc_id": {
             "references": [
              "local.vpc_id"
             ]
            },
            "vpn_gateway_id": {
             "references": [
              "var.vpn_gateway_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpn_gateway_attachment"
          },
          {
           "address": "aws_vpn_gateway_route_propagation.intra",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.propagate_intra_route_tables_vgw",
             "var.enable_vpn_gateway",
             "var.vpn_gateway_id",
             "var.intra_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.intra",
              "count.index"
             ]
            },
            "vpn_gateway_id": {
             "references": [
              "aws_vpn_gateway.this",
              "aws_vpn_gateway_attachment.this",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "intra",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpn_gateway_route_propagation"
          },
          {
           "address": "aws_vpn_gateway_route_propagation.private",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.propagate_private_route_tables_vgw",
             "var.enable_vpn_gateway",
             "var.vpn_gateway_id",
             "var.private_subnets"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.private",
              "count.index"
             ]
            },
            "vpn_gateway_id": {
             "references": [
              "aws_vpn_gateway.this",
              "aws_vpn_gateway_attachment.this",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "private",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpn_gateway_route_propagation"
          },
          {
           "address": "aws_vpn_gateway_route_propagation.public",
           "count_expression": {
            "references": [
             "var.create_vpc",
             "var.propagate_public_route_tables_vgw",
             "var.enable_vpn_gateway",
             "var.vpn_gateway_id"
            ]
           },
           "expressions": {
            "route_table_id": {
             "references": [
              "aws_route_table.public",
              "count.index"
             ]
            },
            "vpn_gateway_id": {
             "references": [
              "aws_vpn_gateway.this",
              "aws_vpn_gateway_attachment.this",
              "count.index"
             ]
            }
           },
           "mode": "managed",
           "name": "public",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_vpn_gateway_route_propagation"
          },
          {
           "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "effect": {
               "constant_value": "Allow"
              },
              "principals": [
               {
                "identifiers": {
                 "constant_value": [
                  "vpc-flow-logs.amazonaws.com"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "AWSVPCFlowLogsAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "flow_log_cloudwatch_assume_role",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
           "count_expression": {
            "references": [
             "local.create_flow_log_cloudwatch_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams"
               ]
              },
              "effect": {
               "constant_value": "Allow"
              },
              "resources": {
               "constant_value": [
                "*"
               ]
              },
              "sid": {
               "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
              }
             }
            ]
           },
           "mode": "data",
           "name": "vpc_flow_log_cloudwatch",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          }
         ],
         "variables": {
          "amazon_side_asn": {
           "default": "64512",
           "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
          },
          "assign_ipv6_address_on_creation": {
           "default": false,
           "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "azs": {
           "default": [],
           "description": "A list of availability zones names or ids in the region"
          },
          "cidr": {
           "default": "0.0.0.0/0",
           "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
          },
          "create_database_internet_gateway_route": {
           "default": false,
           "description": "Controls if an internet gateway route for public database access should be created"
          },
          "create_database_nat_gateway_route": {
           "default": false,
           "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
          },
          "create_database_subnet_group": {
           "default": true,
           "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
          },
          "create_database_subnet_route_table": {
           "default": false,
           "description": "Controls if separate route table for database should be created"
          },
          "create_egress_only_igw": {
           "default": true,
           "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
          },
          "create_elasticache_subnet_group": {
           "default": true,
           "description": "Controls if elasticache subnet group should be created"
          },
          "create_elasticache_subnet_route_table": {
           "default": false,
           "description": "Controls if separate route table for elasticache should be created"
          },
          "create_flow_log_cloudwatch_iam_role": {
           "default": false,
           "description": "Whether to create IAM role for VPC Flow Logs"
          },
          "create_flow_log_cloudwatch_log_group": {
           "default": false,
           "description": "Whether to create CloudWatch log group for VPC Flow Logs"
          },
          "create_igw": {
           "default": true,
           "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
          },
          "create_redshift_subnet_group": {
           "default": true,
           "description": "Controls if redshift subnet group should be created"
          },
          "create_redshift_subnet_route_table": {
           "default": false,
           "description": "Controls if separate route table for redshift should be created"
          },
          "create_vpc": {
           "default": true,
           "description": "Controls if VPC should be created (it affects almost all resources)"
          },
          "customer_gateway_tags": {
           "default": {},
           "description": "Additional tags for the Customer Gateway"
          },
          "customer_gateways": {
           "default": {},
           "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
          },
          "database_acl_tags": {
           "default": {},
           "description": "Additional tags for the database subnets network ACL"
          },
          "database_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
          },
          "database_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Database subnets inbound network ACL rules"
          },
          "database_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Database subnets outbound network ACL rules"
          },
          "database_route_table_tags": {
           "default": {},
           "description": "Additional tags for the database route tables"
          },
          "database_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "database_subnet_group_name": {
           "default": null,
           "description": "Name of database subnet group"
          },
          "database_subnet_group_tags": {
           "default": {},
           "description": "Additional tags for the database subnet group"
          },
          "database_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "database_subnet_suffix": {
           "default": "db",
           "description": "Suffix to append to database subnets name"
          },
          "database_subnet_tags": {
           "default": {},
           "description": "Additional tags for the database subnets"
          },
          "database_subnets": {
           "default": [],
           "description": "A list of database subnets"
          },
          "default_network_acl_egress": {
           "default": [
            {
             "action": "allow",
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_no": "100",
             "to_port": "0"
            },
            {
             "action": "allow",
             "from_port": "0",
             "ipv6_cidr_block": "::/0",
             "protocol": "-1",
             "rule_no": "101",
             "to_port": "0"
            }
           ],
           "description": "List of maps of egress rules to set on the Default Network ACL"
          },
          "default_network_acl_ingress": {
           "default": [
            {
             "action": "allow",
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_no": "100",
             "to_port": "0"
            },
            {
             "action": "allow",
             "from_port": "0",
             "ipv6_cidr_block": "::/0",
             "protocol": "-1",
             "rule_no": "101",
             "to_port": "0"
            }
           ],
           "description": "List of maps of ingress rules to set on the Default Network ACL"
          },
          "default_network_acl_name": {
           "default": "",
           "description": "Name to be used on the Default Network ACL"
          },
          "default_network_acl_tags": {
           "default": {},
           "description": "Additional tags for the Default Network ACL"
          },
          "default_route_table_propagating_vgws": {
           "default": [],
           "description": "List of virtual gateways for propagation"
          },
          "default_route_table_routes": {
           "default": [],
           "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
          },
          "default_route_table_tags": {
           "default": {},
           "description": "Additional tags for the default route table"
          },
          "default_security_group_egress": {
           "default": null,
           "description": "List of maps of egress rules to set on the default security group"
          },
          "default_security_group_ingress": {
           "default": null,
           "description": "List of maps of ingress rules to set on the default security group"
          },
          "default_security_group_name": {
           "default": "default",
           "description": "Name to be used on the default security group"
          },
          "default_security_group_tags": {
           "default": {},
           "description": "Additional tags for the default security group"
          },
          "default_vpc_enable_classiclink": {
           "default": false,
           "description": "Should be true to enable ClassicLink in the Default VPC"
          },
          "default_vpc_enable_dns_hostnames": {
           "default": false,
           "description": "Should be true to enable DNS hostnames in the Default VPC"
          },
          "default_vpc_enable_dns_support": {
           "default": true,
           "description": "Should be true to enable DNS support in the Default VPC"
          },
          "default_vpc_name": {
           "default": "",
           "description": "Name to be used on the Default VPC"
          },
          "default_vpc_tags": {
           "default": {},
           "description": "Additional tags for the Default VPC"
          },
          "dhcp_options_domain_name": {
           "default": "",
           "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
          },
          "dhcp_options_domain_name_servers": {
           "default": [
            "AmazonProvidedDNS"
           ],
           "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
          },
          "dhcp_options_netbios_name_servers": {
           "default": [],
           "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
          },
          "dhcp_options_netbios_node_type": {
           "default": "",
           "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
          },
          "dhcp_options_ntp_servers": {
           "default": [],
           "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
          },
          "dhcp_options_tags": {
           "default": {},
           "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
          },
          "elasticache_acl_tags": {
           "default": {},
           "description": "Additional tags for the elasticache subnets network ACL"
          },
          "elasticache_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
          },
          "elasticache_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Elasticache subnets inbound network ACL rules"
          },
          "elasticache_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Elasticache subnets outbound network ACL rules"
          },
          "elasticache_route_table_tags": {
           "default": {},
           "description": "Additional tags for the elasticache route tables"
          },
          "elasticache_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "elasticache_subnet_group_name": {
           "default": null,
           "description": "Name of elasticache subnet group"
          },
          "elasticache_subnet_group_tags": {
           "default": {},
           "description": "Additional tags for the elasticache subnet group"
          },
          "elasticache_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "elasticache_subnet_suffix": {
           "default": "elasticache",
           "description": "Suffix to append to elasticache subnets name"
          },
          "elasticache_subnet_tags": {
           "default": {},
           "description": "Additional tags for the elasticache subnets"
          },
          "elasticache_subnets": {
           "default": [],
           "description": "A list of elasticache subnets"
          },
          "enable_classiclink": {
           "default": null,
           "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
          },
          "enable_classiclink_dns_support": {
           "default": null,
           "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
          },
          "enable_dhcp_options": {
           "default": false,
           "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
          },
          "enable_dns_hostnames": {
           "default": false,
           "description": "Should be true to enable DNS hostnames in the VPC"
          },
          "enable_dns_support": {
           "default": true,
           "description": "Should be true to enable DNS support in the VPC"
          },
          "enable_flow_log": {
           "default": false,
           "description": "Whether or not to enable VPC Flow Logs"
          },
          "enable_ipv6": {
           "default": false,
           "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
          },
          "enable_nat_gateway": {
           "default": false,
           "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
          },
          "enable_public_redshift": {
           "default": false,
           "description": "Controls if redshift should have public routing table"
          },
          "enable_vpn_gateway": {
           "default": false,
           "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
          },
          "external_nat_ip_ids": {
           "default": [],
           "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
          },
          "external_nat_ips": {
           "default": [],
           "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
          },
          "flow_log_cloudwatch_iam_role_arn": {
           "default": "",
           "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
          },
          "flow_log_cloudwatch_log_group_kms_key_id": {
           "default": null,
           "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
          },
          "flow_log_cloudwatch_log_group_name_prefix": {
           "default": "/aws/vpc-flow-log/",
           "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
          },
          "flow_log_cloudwatch_log_group_retention_in_days": {
           "default": null,
           "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
          },
          "flow_log_destination_arn": {
           "default": "",
           "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
          },
          "flow_log_destination_type": {
           "default": "cloud-watch-logs",
           "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
          },
          "flow_log_file_format": {
           "default": "plain-text",
           "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`."
          },
          "flow_log_hive_compatible_partitions": {
           "default": false,
           "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3."
          },
          "flow_log_log_format": {
           "default": null,
           "description": "The fields to include in the flow log record, in the order in which they should appear."
          },
          "flow_log_max_aggregation_interval": {
           "default": 600,
           "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
          },
          "flow_log_per_hour_partition": {
           "default": false,
           "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries."
          },
          "flow_log_traffic_type": {
           "default": "ALL",
           "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
          },
          "igw_tags": {
           "default": {},
           "description": "Additional tags for the internet gateway"
          },
          "instance_tenancy": {
           "default": "default",
           "description": "A tenancy option for instances launched into the VPC"
          },
          "intra_acl_tags": {
           "default": {},
           "description": "Additional tags for the intra subnets network ACL"
          },
          "intra_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
          },
          "intra_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Intra subnets inbound network ACLs"
          },
          "intra_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Intra subnets outbound network ACLs"
          },
          "intra_route_table_tags": {
           "default": {},
           "description": "Additional tags for the intra route tables"
          },
          "intra_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "intra_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "intra_subnet_suffix": {
           "default": "intra",
           "description": "Suffix to append to intra subnets name"
          },
          "intra_subnet_tags": {
           "default": {},
           "description": "Additional tags for the intra subnets"
          },
          "intra_subnets": {
           "default": [],
           "description": "A list of intra subnets"
          },
          "manage_default_network_acl": {
           "default": false,
           "description": "Should be true to adopt and manage Default Network ACL"
          },
          "manage_default_route_table": {
           "default": false,
           "description": "Should be true to manage default route table"
          },
          "manage_default_security_group": {
           "default": false,
           "description": "Should be true to adopt and manage default security group"
          },
          "manage_default_vpc": {
           "default": false,
           "description": "Should be true to adopt and manage Default VPC"
          },
          "map_public_ip_on_launch": {
           "default": true,
           "description": "Should be false if you do not want to auto-assign public IP on launch"
          },
          "name": {
           "default": "",
           "description": "Name to be used on all the resources as identifier"
          },
          "nat_eip_tags": {
           "default": {},
           "description": "Additional tags for the NAT EIP"
          },
          "nat_gateway_tags": {
           "default": {},
           "description": "Additional tags for the NAT gateways"
          },
          "one_nat_gateway_per_az": {
           "default": false,
           "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
          },
          "outpost_acl_tags": {
           "default": {},
           "description": "Additional tags for the outpost subnets network ACL"
          },
          "outpost_arn": {
           "default": null,
           "description": "ARN of Outpost you want to create a subnet in."
          },
          "outpost_az": {
           "default": null,
           "description": "AZ where Outpost is anchored."
          },
          "outpost_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
          },
          "outpost_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Outpost subnets inbound network ACLs"
          },
          "outpost_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Outpost subnets outbound network ACLs"
          },
          "outpost_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "outpost_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "outpost_subnet_suffix": {
           "default": "outpost",
           "description": "Suffix to append to outpost subnets name"
          },
          "outpost_subnet_tags": {
           "default": {},
           "description": "Additional tags for the outpost subnets"
          },
          "outpost_subnets": {
           "default": [],
           "description": "A list of outpost subnets inside the VPC"
          },
          "private_acl_tags": {
           "default": {},
           "description": "Additional tags for the private subnets network ACL"
          },
          "private_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
          },
          "private_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Private subnets inbound network ACLs"
          },
          "private_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Private subnets outbound network ACLs"
          },
          "private_route_table_tags": {
           "default": {},
           "description": "Additional tags for the private route tables"
          },
          "private_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "private_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "private_subnet_suffix": {
           "default": "private",
           "description": "Suffix to append to private subnets name"
          },
          "private_subnet_tags": {
           "default": {},
           "description": "Additional tags for the private subnets"
          },
          "private_subnets": {
           "default": [],
           "description": "A list of private subnets inside the VPC"
          },
          "propagate_intra_route_tables_vgw": {
           "default": false,
           "description": "Should be true if you want route table propagation"
          },
          "propagate_private_route_tables_vgw": {
           "default": false,
           "description": "Should be true if you want route table propagation"
          },
          "propagate_public_route_tables_vgw": {
           "default": false,
           "description": "Should be true if you want route table propagation"
          },
          "public_acl_tags": {
           "default": {},
           "description": "Additional tags for the public subnets network ACL"
          },
          "public_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
          },
          "public_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Public subnets inbound network ACLs"
          },
          "public_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Public subnets outbound network ACLs"
          },
          "public_route_table_tags": {
           "default": {},
           "description": "Additional tags for the public route tables"
          },
          "public_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "public_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "public_subnet_suffix": {
           "default": "public",
           "description": "Suffix to append to public subnets name"
          },
          "public_subnet_tags": {
           "default": {},
           "description": "Additional tags for the public subnets"
          },
          "public_subnets": {
           "default": [],
           "description": "A list of public subnets inside the VPC"
          },
          "redshift_acl_tags": {
           "default": {},
           "description": "Additional tags for the redshift subnets network ACL"
          },
          "redshift_dedicated_network_acl": {
           "default": false,
           "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
          },
          "redshift_inbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Redshift subnets inbound network ACL rules"
          },
          "redshift_outbound_acl_rules": {
           "default": [
            {
             "cidr_block": "0.0.0.0/0",
             "from_port": "0",
             "protocol": "-1",
             "rule_action": "allow",
             "rule_number": "100",
             "to_port": "0"
            }
           ],
           "description": "Redshift subnets outbound network ACL rules"
          },
          "redshift_route_table_tags": {
           "default": {},
           "description": "Additional tags for the redshift route tables"
          },
          "redshift_subnet_assign_ipv6_address_on_creation": {
           "default": null,
           "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
          },
          "redshift_subnet_group_name": {
           "default": null,
           "description": "Name of redshift subnet group"
          },
          "redshift_subnet_group_tags": {
           "default": {},
           "description": "Additional tags for the redshift subnet group"
          },
          "redshift_subnet_ipv6_prefixes": {
           "default": [],
           "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
          },
          "redshift_subnet_suffix": {
           "default": "redshift",
           "description": "Suffix to append to redshift subnets name"
          },
          "redshift_subnet_tags": {
           "default": {},
           "description": "Additional tags for the redshift subnets"
          },
          "redshift_subnets": {
           "default": [],
           "description": "A list of redshift subnets"
          },
          "reuse_nat_ips": {
           "default": false,
           "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
          },
          "secondary_cidr_blocks": {
           "default": [],
           "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
          },
          "single_nat_gateway": {
           "default": false,
           "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "vpc_flow_log_permissions_boundary": {
           "default": null,
           "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
          },
          "vpc_flow_log_tags": {
           "default": {},
           "description": "Additional tags for the VPC Flow Logs"
          },
          "vpc_tags": {
           "default": {},
           "description": "Additional tags for the VPC"
          },
          "vpn_gateway_az": {
           "default": null,
           "description": "The Availability Zone for the VPN Gateway"
          },
          "vpn_gateway_id": {
           "default": "",
           "description": "ID of VPN Gateway to attach to the VPC"
          },
          "vpn_gateway_tags": {
           "default": {},
           "description": "Additional tags for the VPN gateway"
          }
         }
        },
        "source": "terraform-aws-modules/vpc/aws",
        "version_constraint": "3.11.0"
       }
      },
      "outputs": {
       "bastion_ec2_ami_id": {
        "description": "ec2 instance id",
        "expression": {
         "references": [
          "aws_instance.bastion.ami",
          "aws_instance.bastion"
         ]
        }
       },
       "bastion_ec2_instance_id": {
        "description": "ec2 instance id",
        "expression": {
         "references": [
          "aws_instance.bastion.id",
          "aws_instance.bastion"
         ]
        }
       },
       "bastion_public_fqdn": {
        "description": "Public fqdn of bastion",
        "expression": {
         "references": [
          "aws_eip.main.public_dns",
          "aws_eip.main"
         ]
        }
       },
       "private_subnet_ids": {
        "description": "Private subnet ids",
        "expression": {
         "references": [
          "module.vpc.private_subnets",
          "module.vpc"
         ]
        }
       },
       "public_subnet_ids": {
        "description": "Public subnet ids",
        "expression": {
         "references": [
          "module.vpc.public_subnets",
          "module.vpc"
         ]
        }
       },
       "ram_resource_share_arn": {
        "expression": {
         "references": [
          "module.tgw.ram_resource_share_id",
          "module.tgw"
         ]
        }
       },
       "security_group_ssh_id": {
        "description": "Security group ssh id",
        "expression": {
         "references": [
          "module.sg-mgmt.security_group_id",
          "module.sg-mgmt"
         ]
        }
       },
       "tgw_id": {
        "expression": {
         "references": [
          "module.tgw.ec2_transit_gateway_id",
          "module.tgw"
         ]
        }
       },
       "vpc_id": {
        "description": "VPC id",
        "expression": {
         "references": [
          "module.vpc.vpc_id",
          "module.vpc"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_eip.main",
        "expressions": {
         "instance": {
          "references": [
           "aws_instance.bastion.id",
           "aws_instance.bastion"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "main",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_eip_association.main",
        "expressions": {
         "allocation_id": {
          "references": [
           "aws_eip.main.id",
           "aws_eip.main"
          ]
         },
         "instance_id": {
          "references": [
           "aws_instance.bastion.id",
           "aws_instance.bastion"
          ]
         }
        },
        "mode": "managed",
        "name": "main",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip_association"
       },
       {
        "address": "aws_iam_instance_profile.ssm_instance_profile",
        "expressions": {
         "name": {
          "constant_value": "ssm_instance_profile"
         },
         "role": {
          "references": [
           "aws_iam_role.ssm_role.id",
           "aws_iam_role.ssm_role"
          ]
         }
        },
        "mode": "managed",
        "name": "ssm_instance_profile",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_instance_profile"
       },
       {
        "address": "aws_iam_role.ssm_role",
        "expressions": {
         "assume_role_policy": {},
         "name": {
          "constant_value": "ssm_role"
         }
        },
        "mode": "managed",
        "name": "ssm_role",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.ssm_policy_attachment",
        "expressions": {
         "policy_arn": {
          "constant_value": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
         },
         "role": {
          "references": [
           "aws_iam_role.ssm_role.name",
           "aws_iam_role.ssm_role"
          ]
         }
        },
        "mode": "managed",
        "name": "ssm_policy_attachment",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_instance.bastion",
        "expressions": {
         "ami": {
          "references": [
           "data.aws_ami.ubuntu20.id",
           "data.aws_ami.ubuntu20"
          ]
         },
         "associate_public_ip_address": {
          "constant_value": true
         },
         "iam_instance_profile": {
          "references": [
           "aws_iam_instance_profile.ssm_instance_profile.name",
           "aws_iam_instance_profile.ssm_instance_profile"
          ]
         },
         "instance_type": {
          "constant_value": "t3.small"
         },
         "key_name": {
          "references": [
           "aws_key_pair.main.key_name",
           "aws_key_pair.main"
          ]
         },
         "security_groups": {
          "references": [
           "module.sg-mgmt.security_group_id",
           "module.sg-mgmt"
          ]
         },
         "subnet_id": {
          "references": [
           "module.vpc.public_subnets",
           "module.vpc"
          ]
         },
         "tags": {
          "references": [
           "var.owner",
           "var.ttl"
          ]
         }
        },
        "mode": "managed",
        "name": "bastion",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_instance"
       },
       {
        "address": "aws_key_pair.main",
        "expressions": {
         "key_name": {
          "references": [
           "var.aws_key_pair_key_name"
          ]
         },
         "public_key": {
          "references": [
           "var.ssh_pubkey"
          ]
         }
        },
        "mode": "managed",
        "name": "main",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_key_pair"
       },
       {
        "address": "aws_route.hcp_hvn_route",
        "expressions": {
         "destination_cidr_block": {
          "references": [
           "var.hcp_hvn_cidr"
          ]
         },
         "route_table_id": {
          "references": [
           "module.vpc.public_route_table_ids[0]",
           "module.vpc.public_route_table_ids",
           "module.vpc"
          ]
         },
         "transit_gateway_id": {
          "references": [
           "module.tgw.ec2_transit_gateway_id",
           "module.tgw"
          ]
         }
        },
        "mode": "managed",
        "name": "hcp_hvn_route",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "data.aws_ami.ubuntu20",
        "expressions": {
         "filter": [
          {
           "name": {
            "constant_value": "name"
           },
           "values": {
            "constant_value": [
             "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04*"
            ]
           }
          },
          {
           "name": {
            "constant_value": "root-device-type"
           },
           "values": {
            "constant_value": [
             "ebs"
            ]
           }
          },
          {
           "name": {
            "constant_value": "virtualization-type"
           },
           "values": {
            "constant_value": [
             "hvm"
            ]
           }
          }
         ],
         "most_recent": {
          "constant_value": true
         },
         "owners": {
          "constant_value": [
           "099720109477"
          ]
         }
        },
        "mode": "data",
        "name": "ubuntu20",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ami"
       },
       {
        "address": "data.aws_availability_zones.available",
        "mode": "data",
        "name": "available",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_availability_zones"
       }
      ],
      "variables": {
       "admin_username": {
        "default": "ubuntu",
        "description": "ubuntu admin user"
       },
       "aws_key_pair_key_name": {
        "description": "AWS key pair name"
       },
       "deployment_id": {
        "description": "Deployment id"
       },
       "eks_cluster_service_cidr": {
        "description": "EKS cluster service cidr"
       },
       "eks_cluster_version": {
        "description": "EKS cluster version"
       },
       "eks_worker_desired_capacity": {
        "description": "EKS worker nodes desired capacity"
       },
       "eks_worker_instance_type": {
        "description": "EKS worker nodes instance type"
       },
       "hcp_hvn_cidr": {
        "description": "HCP HVN cidr"
       },
       "hcp_hvn_provider_account_id": {
        "description": "HCP HVN provider account id"
       },
       "ingress_cidr_blocks": {
        "description": "ingress allow list"
       },
       "mgmt_egress_rules": {
        "default": [
         "vault-tcp",
         "http-80-tcp",
         "https-443-tcp",
         "ssh-tcp",
         "https-8443-tcp"
        ],
        "description": "Management security group egress rules"
       },
       "mgmt_ingress_rules": {
        "default": [
         "rdp-tcp",
         "http-80-tcp",
         "https-443-tcp",
         "ssh-tcp",
         "https-8443-tcp"
        ],
        "description": "Management security group ingress rules"
       },
       "owner": {
        "description": "Resource owner identified using an email address"
       },
       "prefix": {
        "default": "demo",
        "description": "resource prefix"
       },
       "private_subnets": {
        "description": "Private subnets"
       },
       "public_subnets": {
        "description": "Public subnets"
       },
       "region": {
        "description": "AWS region"
       },
       "ssh_pubkey": {
        "default": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDOL7uceFyeKxFV/uH7va5ZUhYaFOuoNxY9fUrJtMxRfUewJ0INuQPoGvqmu2oOJVo+jz5tLDJGDl49TifEIUczIDIrVIVnYgwCL3aIUsiJPGPrjfqEtiwJMVc6ebePdxMOKFccxqShE1lQNNeu0iZThSYjpxC8d30+ZaXNGrENNTijhWHows7gQE5TVv2Dqu63hHlaipuuFo03PQuiLiqvPaMeByQi8XztYk5na+dHUmNGkwqHYqLrBIJhZnVfmdXBNNEwoW7T2fUg9MSm3DHlRp2wvDK07zj+TW/03YRCFiPhEMidXpybbEa3FtiC1QW3E3hOobOKDNsYbZS9M06/Tjg0uNW3cOFOwz/aEzAi+ZFm0fUV7uU9hkD5zinvyBgimIVkTBZVTpdgENcPRgjyWJj0mi7jJ1cbnwC90BE7wJGg1EkSAQTKb2wG9qzI85VNBtUZ8cAg+wOWnl4SkK50ZQucWoBFFI46vI/rQLfLU9rDMINN0FMxcI84q0+SxHc= simon.lynch@simon.lynch-TLYHK3HJGJ",
        "description": "ssh public key"
       },
       "ttl": {
        "description": "Resource TTL (time-to-live)"
       },
       "vpc_cidr": {
        "description": "VPC CIDR"
       }
      }
     },
     "source": "./modules/aws"
    },
    "tfc-agent": {
     "expressions": {
      "agent_image": {
       "constant_value": "hashicorp/tfc-agent:latest"
      },
      "enable_logs": {
       "constant_value": true
      },
      "friendly_name_prefix": {
       "references": [
        "var.tfc_agent_prefix"
       ]
      },
      "region": {
       "references": [
        "var.aws_region"
       ]
      },
      "subnet_ids": {
       "references": [
        "module.infra-aws.private_subnet_ids",
        "module.infra-aws"
       ]
      },
      "tfc_address": {
       "references": [
        "var.tfc_address"
       ]
      },
      "tfc_agent_name": {
       "references": [
        "var.tfc_agent_name"
       ]
      },
      "tfc_agent_token": {
       "references": [
        "var.tfc_agent_token"
       ]
      },
      "tfc_agent_version": {
       "references": [
        "var.tfc_agent_version"
       ]
      },
      "vpc_id": {
       "references": [
        "module.infra-aws.vpc_id",
        "module.infra-aws"
       ]
      }
     },
     "module": {
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.tfe_agents_ecs",
        "count_expression": {
         "references": [
          "var.enable_logs"
         ]
        },
        "expressions": {
         "name": {
          "references": [
           "var.friendly_name_prefix"
          ]
         },
         "tags": {
          "references": [
           "var.friendly_name_prefix",
           "var.common_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "tfe_agents_ecs",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_ecs_cluster.agents",
        "expressions": {
         "name": {
          "references": [
           "var.friendly_name_prefix"
          ]
         },
         "tags": {
          "references": [
           "var.friendly_name_prefix",
           "var.common_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "agents",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecs_cluster"
       },
       {
        "address": "aws_ecs_service.agents",
        "expressions": {
         "cluster": {
          "references": [
           "aws_ecs_cluster.agents.id",
           "aws_ecs_cluster.agents"
          ]
         },
         "desired_count": {
          "references": [
           "var.number_of_agents"
          ]
         },
         "launch_type": {
          "constant_value": "FARGATE"
         },
         "name": {
          "references": [
           "var.friendly_name_prefix"
          ]
         },
         "network_configuration": [
          {
           "assign_public_ip": {
            "references": [
             "var.assign_public_ip"
            ]
           },
           "security_groups": {
            "references": [
             "aws_security_group.agents.id",
             "aws_security_group.agents"
            ]
           },
           "subnets": {
            "references": [
             "var.subnet_ids"
            ]
           }
          }
         ],
         "platform_version": {
          "constant_value": "LATEST"
         },
         "propagate_tags": {
          "constant_value": "SERVICE"
         },
         "scheduling_strategy": {
          "constant_value": "REPLICA"
         },
         "tags": {
          "references": [
           "var.friendly_name_prefix",
           "var.common_tags"
          ]
         },
         "task_definition": {
          "references": [
           "aws_ecs_task_definition.agents.arn",
           "aws_ecs_task_definition.agents"
          ]
         }
        },
        "mode": "managed",
        "name": "agents",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecs_service"
       },
       {
        "address": "aws_ecs_task_definition.agents",
        "expressions": {
         "container_definitions": {
          "references": [
           "var.agent_image",
           "var.cpu",
           "var.memory",
           "var.friendly_name_prefix",
           "var.region",
           "var.friendly_name_prefix",
           "var.tfc_agent_name",
           "var.tfc_agent_token",
           "var.tfc_address",
           "var.agent_log_level"
          ]
         },
         "cpu": {
          "references": [
           "var.cpu"
          ]
         },
         "execution_role_arn": {
          "references": [
           "aws_iam_role.ecs_task_execution_role.arn",
           "aws_iam_role.ecs_task_execution_role"
          ]
         },
         "family": {
          "references": [
           "var.friendly_name_prefix"
          ]
         },
         "memory": {
          "references": [
           "var.memory"
          ]
         },
         "network_mode": {
          "constant_value": "awsvpc"
         },
         "requires_compatibilities": {
          "constant_value": [
           "FARGATE"
          ]
         }
        },
        "mode": "managed",
        "name": "agents",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_ecs_task_definition"
       },
       {
        "address": "aws_iam_role.ecs_task_execution_role",
        "expressions": {
         "assume_role_policy": {
          "constant_value": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ecs-tasks.amazonaws.com\"\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\n"
         },
         "name": {
          "constant_value": "ecsTaskExecutionRole"
         }
        },
        "mode": "managed",
        "name": "ecs_task_execution_role",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.ecs-task-execution-role-policy-attachment",
        "expressions": {
         "policy_arn": {
          "constant_value": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
         },
         "role": {
          "references": [
           "aws_iam_role.ecs_task_execution_role.name",
           "aws_iam_role.ecs_task_execution_role"
          ]
         }
        },
        "mode": "managed",
        "name": "ecs-task-execution-role-policy-attachment",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_security_group.agents",
        "expressions": {
         "name": {
          "references": [
           "var.friendly_name_prefix"
          ]
         },
         "tags": {
          "references": [
           "var.friendly_name_prefix",
           "var.common_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "agents",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group_rule.egress_https",
        "expressions": {
         "cidr_blocks": {
          "constant_value": [
           "0.0.0.0/0"
          ]
         },
         "description": {
          "constant_value": "Allow HTTPS traffic egress."
         },
         "from_port": {
          "constant_value": 443
         },
         "protocol": {
          "constant_value": "tcp"
         },
         "security_group_id": {
          "references": [
           "aws_security_group.agents.id",
           "aws_security_group.agents"
          ]
         },
         "to_port": {
          "constant_value": 443
         },
         "type": {
          "constant_value": "egress"
         }
        },
        "mode": "managed",
        "name": "egress_https",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       }
      ],
      "variables": {
       "agent_image": {
        "default": "hashicorp/tfc-agent:latest",
        "description": "The registry/image:tag_Version to use for the agent. Default = hashicorp/tfc-agent:latest"
       },
       "agent_log_level": {
        "default": "info",
        "description": "The log verbosity. Level options include 'trace', 'debug', 'info', 'warn', and 'error'. Log levels have a progressive level of data sensitivy. The 'info', 'warn', and 'error' levels are considered generally safe for log collection and don't include sensitive information. The 'debug' log level may include internal system details, such as specific commands and arguments including paths to user data on the local filesystem. The 'trace' log level is the most sensitive and may include personally identifiable information, secrets, pre-authorized internal URLs, and other sensitive material."
       },
       "assign_public_ip": {
        "default": false,
        "description": "Only required when using Fargate for ECS services placed in public subnets. Needed for fargate to assign ENI and pull docker image. True or False"
       },
       "common_tags": {
        "default": {},
        "description": "Map of common tags for taggable AWS resources."
       },
       "cpu": {
        "default": 1024,
        "description": "Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required."
       },
       "enable_logs": {
        "default": true,
        "description": "Whether or not to enable tfc-agent ECS logs."
       },
       "friendly_name_prefix": {
        "description": "Friendly name to prefix AWS resource names with."
       },
       "memory": {
        "default": 2048,
        "description": "Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required."
       },
       "number_of_agents": {
        "default": 1,
        "description": "Number of cloud agents to run per instance."
       },
       "region": {
        "default": "us-east-1",
        "description": "The AWS Region to deploy resources into."
       },
       "subnet_ids": {
        "description": "List of Subnet IDs to use for ECS tasks or services. Format should be a list of strings. Example ['subnet1', 'subnet2']"
       },
       "tfc_address": {
        "default": "app.terraform.io",
        "description": "Hostname of self-hosted TFE instance. Leave default if TFC is in use."
       },
       "tfc_agent_name": {
        "default": "ecs-agent",
        "description": "The name of the agent."
       },
       "tfc_agent_token": {
        "description": "Agent pool token to authenticate to TFC/TFE when cloud agents are instantiated."
       },
       "tfc_agent_version": {
        "default": "1.2.0",
        "description": "Version of tfc-agent to run."
       },
       "vpc_id": {
        "description": "VPC ID for Security Group and ECS Service."
       }
      }
     },
     "source": "github.com/hashicorp-demo-lab/terraform-aws-tfc-agents-ecs"
    }
   },
   "outputs": {
    "aws_bastion_public_fqdn": {
     "description": "AWS public fqdn of bastion node",
     "expression": {
      "references": [
       "module.infra-aws.bastion_public_fqdn",
       "module.infra-aws"
      ]
     }
    },
    "deployment_id": {
     "description": "Deployment identifier",
     "expression": {
      "references": [
       "local.deployment_id"
      ]
     }
    },
    "f5_bigip_password": {
     "description": "F5 management IP",
     "expression": {
      "references": [
       "module.bigip.bigip_password",
       "module.bigip"
      ]
     }
    },
    "f5_mgmtPublicDNS": {
     "description": "F5 management IP",
     "expression": {
      "references": [
       "module.bigip.mgmtPublicDNS",
       "module.bigip"
      ]
     }
    },
    "f5_mgmtPublicIP": {
     "description": "F5 management IP",
     "expression": {
      "references": [
       "module.bigip.mgmtPublicIP",
       "module.bigip"
      ]
     }
    },
    "f5_username": {
     "description": "F5 management IP",
     "expression": {
      "references": [
       "module.bigip.f5_username",
       "module.bigip"
      ]
     }
    },
    "hcp_vault_admin_token": {
     "description": "HCP vault admin token",
     "expression": {
      "references": [
       "module.hcp-vault.admin_token",
       "module.hcp-vault"
      ]
     },
     "sensitive": true
    },
    "hcp_vault_public_fqdn": {
     "description": "HCP vault public fqdn",
     "expression": {
      "references": [
       "module.hcp-vault.public_endpoint_url",
       "module.hcp-vault"
      ]
     }
    }
   },
   "resources": [
    {
     "address": "aws_route53_record.private_record_dev",
     "expressions": {
      "name": {
       "references": [
        "var.customer_domain"
       ]
      },
      "records": {
       "constant_value": [
        "10.200.10.11"
       ]
      },
      "ttl": {
       "constant_value": "300"
      },
      "type": {
       "constant_value": "A"
      },
      "zone_id": {
       "references": [
        "aws_route53_zone.private_zone.zone_id",
        "aws_route53_zone.private_zone"
       ]
      }
     },
     "mode": "managed",
     "name": "private_record_dev",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_route53_record"
    },
    {
     "address": "aws_route53_record.private_record_prod",
     "expressions": {
      "name": {
       "references": [
        "var.customer_domain"
       ]
      },
      "records": {
       "constant_value": [
        "10.200.10.10"
       ]
      },
      "ttl": {
       "constant_value": "300"
      },
      "type": {
       "constant_value": "A"
      },
      "zone_id": {
       "references": [
        "aws_route53_zone.private_zone.zone_id",
        "aws_route53_zone.private_zone"
       ]
      }
     },
     "mode": "managed",
     "name": "private_record_prod",
     "provider_config_key": "aws",
     "schema_version": 2,
     "type": "aws_route53_record"
    },
    {
     "address": "aws_route53_zone.private_zone",
     "expressions": {
      "name": {
       "references": [
        "var.customer_domain"
       ]
      },
      "vpc": [
       {
        "vpc_id": {
         "references": [
          "module.infra-aws.vpc_id",
          "module.infra-aws"
         ]
        }
       }
      ]
     },
     "mode": "managed",
     "name": "private_zone",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_route53_zone"
    },
    {
     "address": "aws_ssm_association.example",
     "expressions": {
      "name": {
       "references": [
        "aws_ssm_document.run_script_document.name",
        "aws_ssm_document.run_script_document"
       ]
      },
      "targets": [
       {
        "key": {
         "constant_value": "InstanceIds"
        },
        "values": {
         "references": [
          "module.infra-aws.bastion_ec2_instance_id",
          "module.infra-aws"
         ]
        }
       }
      ]
     },
     "mode": "managed",
     "name": "example",
     "provider_config_key": "aws",
     "schema_version": 1,
     "type": "aws_ssm_association"
    },
    {
     "address": "aws_ssm_document.run_script_document",
     "expressions": {
      "content": {
       "references": [
        "local.ssm_document_content"
       ]
      },
      "document_format": {
       "constant_value": "YAML"
      },
      "document_type": {
       "constant_value": "Command"
      },
      "name": {
       "constant_value": "vault_script_document"
      }
     },
     "mode": "managed",
     "name": "run_script_document",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_ssm_document"
    },
    {
     "address": "random_string.suffix",
     "expressions": {
      "length": {
       "constant_value": 8
      },
      "special": {
       "constant_value": false
      }
     },
     "mode": "managed",
     "name": "suffix",
     "provider_config_key": "random",
     "schema_version": 2,
     "type": "random_string"
    }
   ],
   "variables": {
    "agent_image": {
     "default": "hashicorp/tfc-agent:latest",
     "description": "The registry/image:tag_Version to use for the agent. Default = hashicorp/tfc-agent:latest"
    },
    "agent_log_level": {
     "default": "info",
     "description": "The log verbosity. Level options include 'trace', 'debug', 'info', 'warn', and 'error'. Log levels have a progressive level of data sensitivy. The 'info', 'warn', and 'error' levels are considered generally safe for log collection and don't include sensitive information. The 'debug' log level may include internal system details, such as specific commands and arguments including paths to user data on the local filesystem. The 'trace' log level is the most sensitive and may include personally identifiable information, secrets, pre-authorized internal URLs, and other sensitive material."
    },
    "assign_public_ip": {
     "default": false,
     "description": "Only required when using Fargate for ECS services placed in public subnets. Needed for fargate to assign ENI and pull docker image. True or False"
    },
    "aws_ami_hashicups_product_api_db": {
     "default": "ami-082c7add2ac0c19f6",
     "description": "AWS AMI for hashicups product-api-db"
    },
    "aws_eks_cluster_service_cidr": {
     "default": "172.20.0.0/18",
     "description": "AWS EKS cluster service cidr"
    },
    "aws_eks_cluster_version": {
     "default": "1.22",
     "description": "AWS EKS cluster version"
    },
    "aws_eks_worker_desired_capacity": {
     "default": 2,
     "description": "AWS EKS desired worker capacity in the autoscaling group"
    },
    "aws_eks_worker_instance_type": {
     "default": "m5.large",
     "description": "AWS EKS EC2 worker node instance type"
    },
    "aws_key_pair_key_name": {
     "default": "",
     "description": "Key pair name"
    },
    "aws_private_subnets": {
     "default": [
      "10.200.20.0/24",
      "10.200.21.0/24",
      "10.200.22.0/24"
     ],
     "description": "AWS private subnets"
    },
    "aws_public_subnets": {
     "default": [
      "10.200.10.0/24",
      "10.200.11.0/24",
      "10.200.12.0/24"
     ],
     "description": "AWS public subnets"
    },
    "aws_region": {
     "default": "",
     "description": "AWS region"
    },
    "aws_vpc_cidr": {
     "default": "10.200.0.0/16",
     "description": "AWS VPC CIDR"
    },
    "common_tags": {
     "default": {},
     "description": "Map of common tags for taggable AWS resources."
    },
    "cpu": {
     "default": 1024,
     "description": "Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required."
    },
    "customer_domain": {
     "default": "f5demo.com",
     "description": "This is the url that will be created customer_domain.com"
    },
    "customername": {
     "default": "acme",
     "description": "Customer Demo Name"
    },
    "deployment_name": {
     "default": "",
     "description": "Deployment name, used to prefix resources"
    },
    "enable_logs": {
     "default": true,
     "description": "Whether or not to enable tfc-agent ECS logs."
    },
    "gcp_gke_cluster_service_cidr": {
     "default": "172.20.0.0/18",
     "description": "GCP GKE cluster service cidr"
    },
    "gcp_gke_pod_subnet": {
     "default": "10.211.20.0/23",
     "description": "GCP GKE pod subnet"
    },
    "gcp_private_subnets": {
     "default": [
      "10.210.20.0/24",
      "10.210.21.0/24",
      "10.210.22.0/24"
     ],
     "description": "GCP private subnets"
    },
    "gcp_project_id": {
     "default": "",
     "description": "GCP project id"
    },
    "gcp_region": {
     "default": "",
     "description": "GCP region"
    },
    "hcp_client_id": {
     "default": "",
     "description": "HCP client id"
    },
    "hcp_client_secret": {
     "default": "",
     "description": "HCP client secret"
    },
    "hcp_hvn_cidr": {
     "default": "172.25.16.0/20",
     "description": "HCP HVN cidr"
    },
    "hcp_region": {
     "default": "",
     "description": "HCP region"
    },
    "hcp_vault_tier": {
     "default": "dev",
     "description": "HCP Vault cluster tier"
    },
    "ingress_cidr_blocks": {
     "description": "ingress allow list"
    },
    "memory": {
     "default": 2048,
     "description": "Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required."
    },
    "number_of_agents": {
     "default": 1,
     "description": "Number of cloud agents to run per instance."
    },
    "organization": {
     "description": "TFC Organization to build under"
    },
    "owner": {
     "default": "",
     "description": "Resource owner identified using an email address"
    },
    "prefix": {
     "default": "bigip-aws-1nic",
     "description": "F5 - prefix for resources"
    },
    "region": {
     "default": "us-east-1",
     "description": "The AWS Region to deploy resources into."
    },
    "ssh_pubkey": {
     "description": "SSH public key"
    },
    "tfc_address": {
     "default": "https://app.terraform.io",
     "description": "Hostname of self-hosted TFE instance. Leave default if TFC is in use."
    },
    "tfc_agent_name": {
     "default": "ecs-agent",
     "description": "The name of the agent."
    },
    "tfc_agent_prefix": {
     "default": "tfc_agent",
     "description": "Agent pool token to authenticate to TFC/TFE when cloud agents are instantiated."
    },
    "tfc_agent_token": {
     "description": "Agent pool token to authenticate to TFC/TFE when cloud agents are instantiated."
    },
    "tfc_agent_version": {
     "default": "1.4.0",
     "description": "Version of tfc-agent to run."
    },
    "ttl": {
     "default": 48,
     "description": "Resource TTL (time-to-live)"
    }
   }
  }
 },
 "format_version": "1.1",
 "output_changes": {
  "aws_bastion_public_fqdn": {
   "actions": [
    "no-op"
   ],
   "after": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
   "before_sensitive": false
  },
  "deployment_id": {
   "actions": [
    "no-op"
   ],
   "after": "hcp-vault-demo-irukqoel",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "hcp-vault-demo-irukqoel",
   "before_sensitive": false
  },
  "f5_bigip_password": {
   "actions": [
    "no-op"
   ],
   "after": "8PsJ8liwNC8iduER",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "8PsJ8liwNC8iduER",
   "before_sensitive": false
  },
  "f5_mgmtPublicDNS": {
   "actions": [
    "no-op"
   ],
   "after": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
   "before_sensitive": false
  },
  "f5_mgmtPublicIP": {
   "actions": [
    "no-op"
   ],
   "after": "54.66.229.110",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "54.66.229.110",
   "before_sensitive": false
  },
  "f5_username": {
   "actions": [
    "no-op"
   ],
   "after": "bigipuser",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "bigipuser",
   "before_sensitive": false
  },
  "hcp_vault_admin_token": {
   "actions": [
    "no-op"
   ],
   "after": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE",
   "after_sensitive": true,
   "after_unknown": false,
   "before": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE",
   "before_sensitive": true
  },
  "hcp_vault_public_fqdn": {
   "actions": [
    "no-op"
   ],
   "after": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
   "before_sensitive": false
  }
 },
 "planned_values": {
  "outputs": {
   "aws_bastion_public_fqdn": {
    "sensitive": false,
    "type": "string",
    "value": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com"
   },
   "deployment_id": {
    "sensitive": false,
    "type": "string",
    "value": "hcp-vault-demo-irukqoel"
   },
   "f5_bigip_password": {
    "sensitive": false,
    "type": "string",
    "value": "8PsJ8liwNC8iduER"
   },
   "f5_mgmtPublicDNS": {
    "sensitive": false,
    "type": "string",
    "value": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com"
   },
   "f5_mgmtPublicIP": {
    "sensitive": false,
    "type": "string",
    "value": "54.66.229.110"
   },
   "f5_username": {
    "sensitive": false,
    "type": "string",
    "value": "bigipuser"
   },
   "hcp_vault_admin_token": {
    "sensitive": true,
    "type": "string",
    "value": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
   },
   "hcp_vault_public_fqdn": {
    "sensitive": false,
    "type": "string",
    "value": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200"
   }
  },
  "root_module": {
   "child_modules": [
    {
     "address": "module.bigip",
     "resources": [
      {
       "address": "module.bigip.aws_eip.mgmt[0]",
       "index": 0,
       "mode": "managed",
       "name": "mgmt",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_eip",
       "values": {
        "address": null,
        "allocation_id": "eipalloc-0ba1d06528025bc46",
        "associate_with_private_ip": null,
        "association_id": "eipassoc-07d36e668b605d991",
        "carrier_ip": "",
        "customer_owned_ip": "",
        "customer_owned_ipv4_pool": "",
        "domain": "vpc",
        "id": "eipalloc-0ba1d06528025bc46",
        "instance": "i-0406a65c863a0dc3b",
        "network_border_group": "ap-southeast-2",
        "network_interface": "eni-076bb769250ceb723",
        "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
        "private_ip": "10.200.10.225",
        "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
        "public_ip": "54.66.229.110",
        "public_ipv4_pool": "amazon",
        "tags": {
         "Name": "BIGIP-Managemt-PublicIp-0",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        },
        "tags_all": {
         "Name": "BIGIP-Managemt-PublicIp-0",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        },
        "timeouts": null,
        "vpc": true
       }
      },
      {
       "address": "module.bigip.aws_instance.f5_bigip",
       "mode": "managed",
       "name": "f5_bigip",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "capacity_reservation_specification": [
         {
          "capacity_reservation_target": []
         }
        ],
        "credit_specification": [
         {}
        ],
        "ebs_block_device": [],
        "enclave_options": [
         {}
        ],
        "ephemeral_block_device": [],
        "ipv6_addresses": [],
        "launch_template": [],
        "maintenance_options": [
         {}
        ],
        "metadata_options": [
         {}
        ],
        "network_interface": [
         {}
        ],
        "private_dns_name_options": [
         {}
        ],
        "root_block_device": [
         {
          "tags": {}
         }
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "tags": {},
        "tags_all": {},
        "vpc_security_group_ids": [
         false
        ]
       },
       "type": "aws_instance",
       "values": {
        "ami": "ami-0f2fdc8c110c4904f",
        "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0406a65c863a0dc3b",
        "associate_public_ip_address": true,
        "availability_zone": "ap-southeast-2a",
        "capacity_reservation_specification": [
         {
          "capacity_reservation_preference": "open",
          "capacity_reservation_target": []
         }
        ],
        "cpu_core_count": 1,
        "cpu_threads_per_core": 2,
        "credit_specification": [
         {
          "cpu_credits": "unlimited"
         }
        ],
        "disable_api_stop": false,
        "disable_api_termination": false,
        "ebs_block_device": [],
        "ebs_optimized": false,
        "enclave_options": [
         {
          "enabled": false
         }
        ],
        "ephemeral_block_device": [],
        "get_password_data": false,
        "hibernation": false,
        "host_id": "",
        "host_resource_group_arn": null,
        "iam_instance_profile": "",
        "id": "i-0406a65c863a0dc3b",
        "instance_initiated_shutdown_behavior": "stop",
        "instance_state": "running",
        "instance_type": "t3.medium",
        "ipv6_address_count": 0,
        "ipv6_addresses": [],
        "key_name": "awsf5demo",
        "launch_template": [],
        "maintenance_options": [
         {
          "auto_recovery": "default"
         }
        ],
        "metadata_options": [
         {
          "http_endpoint": "enabled",
          "http_put_response_hop_limit": 1,
          "http_tokens": "optional",
          "instance_metadata_tags": "disabled"
         }
        ],
        "monitoring": false,
        "network_interface": [
         {
          "delete_on_termination": false,
          "device_index": 0,
          "network_card_index": 0,
          "network_interface_id": "eni-076bb769250ceb723"
         }
        ],
        "outpost_arn": "",
        "password_data": "",
        "placement_group": "",
        "placement_partition_number": 0,
        "primary_network_interface_id": "eni-076bb769250ceb723",
        "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
        "private_dns_name_options": [
         {
          "enable_resource_name_dns_a_record": false,
          "enable_resource_name_dns_aaaa_record": false,
          "hostname_type": "ip-name"
         }
        ],
        "private_ip": "10.200.10.225",
        "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
        "public_ip": "54.66.229.110",
        "root_block_device": [
         {
          "delete_on_termination": true,
          "device_name": "/dev/xvda",
          "encrypted": false,
          "iops": 120,
          "kms_key_id": "",
          "tags": {},
          "throughput": 0,
          "volume_id": "vol-073660a913a7e727b",
          "volume_size": 40,
          "volume_type": "gp2"
         }
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "source_dest_check": true,
        "subnet_id": "subnet-03475e20ee7be9fe2",
        "tags": {
         "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        },
        "tags_all": {
         "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        },
        "tenancy": "default",
        "timeouts": null,
        "user_data": "c46d56f3e5f3f3fbf7103eac71eed5bbf234d726",
        "user_data_base64": null,
        "user_data_replace_on_change": false,
        "volume_tags": null,
        "vpc_security_group_ids": [
         "sg-0d296ffafa864943d"
        ]
       }
      },
      {
       "address": "module.bigip.aws_network_interface.mgmt1[0]",
       "index": 0,
       "mode": "managed",
       "name": "mgmt1",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "attachment": [
         {}
        ],
        "ipv4_prefixes": [],
        "ipv6_address_list": [],
        "ipv6_addresses": [],
        "ipv6_prefixes": [],
        "private_ip_list": [
         false
        ],
        "private_ips": [
         false
        ],
        "security_groups": [
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_network_interface",
       "values": {
        "arn": "arn:aws:ec2:ap-southeast-2:855831148133:network-interface/eni-076bb769250ceb723",
        "attachment": [
         {
          "attachment_id": "eni-attach-01973631deaed984e",
          "device_index": 0,
          "instance": "i-0406a65c863a0dc3b"
         }
        ],
        "description": "",
        "id": "eni-076bb769250ceb723",
        "interface_type": "interface",
        "ipv4_prefix_count": 0,
        "ipv4_prefixes": [],
        "ipv6_address_count": 0,
        "ipv6_address_list": [],
        "ipv6_address_list_enabled": false,
        "ipv6_addresses": [],
        "ipv6_prefix_count": 0,
        "ipv6_prefixes": [],
        "mac_address": "06:fb:13:8c:5f:12",
        "outpost_arn": "",
        "owner_id": "855831148133",
        "private_dns_name": "ip-10-200-10-225.ap-southeast-2.compute.internal",
        "private_ip": "10.200.10.225",
        "private_ip_list": [
         "10.200.10.225"
        ],
        "private_ip_list_enabled": false,
        "private_ips": [
         "10.200.10.225"
        ],
        "private_ips_count": 0,
        "security_groups": [
         "sg-0d296ffafa864943d"
        ],
        "source_dest_check": true,
        "subnet_id": "subnet-03475e20ee7be9fe2",
        "tags": {
         "Name": "BIGIP-Managemt-Interface-0",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        },
        "tags_all": {
         "Name": "BIGIP-Managemt-Interface-0",
         "Prefix": "bigip-aws-1nicnew-1ab8"
        }
       }
      },
      {
       "address": "module.bigip.random_id.module_id",
       "mode": "managed",
       "name": "module_id",
       "provider_name": "registry.terraform.io/hashicorp/random",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "random_id",
       "values": {
        "b64_std": "Grg=",
        "b64_url": "Grg",
        "byte_length": 2,
        "dec": "6840",
        "hex": "1ab8",
        "id": "Grg",
        "keepers": null,
        "prefix": null
       }
      },
      {
       "address": "module.bigip.random_string.dynamic_password",
       "mode": "managed",
       "name": "dynamic_password",
       "provider_name": "registry.terraform.io/hashicorp/random",
       "schema_version": 2,
       "sensitive_values": {},
       "type": "random_string",
       "values": {
        "id": "8PsJ8liwNC8iduER",
        "keepers": null,
        "length": 16,
        "lower": true,
        "min_lower": 1,
        "min_numeric": 1,
        "min_special": 0,
        "min_upper": 1,
        "number": true,
        "numeric": true,
        "override_special": null,
        "result": "8PsJ8liwNC8iduER",
        "special": false,
        "upper": true
       }
      },
      {
       "address": "module.bigip.time_sleep.wait_for_aws_instance_f5_bigip",
       "mode": "managed",
       "name": "wait_for_aws_instance_f5_bigip",
       "provider_name": "registry.terraform.io/hashicorp/time",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "time_sleep",
       "values": {
        "create_duration": "600s",
        "destroy_duration": null,
        "id": "2023-03-26T21:04:41Z",
        "triggers": null
       }
      }
     ]
    },
    {
     "address": "module.hcp-hvn",
     "resources": [
      {
       "address": "module.hcp-hvn.hcp_aws_transit_gateway_attachment.tgw",
       "mode": "managed",
       "name": "tgw",
       "provider_name": "registry.terraform.io/hashicorp/hcp",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "hcp_aws_transit_gateway_attachment",
       "values": {
        "created_at": "2023-03-26T20:55:13.000Z",
        "expires_at": "2023-04-02T20:55:13.000Z",
        "hvn_id": "hcp-vault-demo-irukqoel",
        "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
        "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
        "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
        "provider_transit_gateway_attachment_id": "tgw-attach-02becce94ec4cc5b8",
        "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
        "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
        "state": "ACTIVE",
        "timeouts": null,
        "transit_gateway_attachment_id": "hcp-vault-demo-irukqoel",
        "transit_gateway_id": "tgw-01099067ffc4b2e61"
       }
      },
      {
       "address": "module.hcp-hvn.hcp_hvn.hvn",
       "mode": "managed",
       "name": "hvn",
       "provider_name": "registry.terraform.io/hashicorp/hcp",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "hcp_hvn",
       "values": {
        "cidr_block": "172.25.16.0/20",
        "cloud_provider": "aws",
        "created_at": "2023-03-26T20:46:34.000Z",
        "hvn_id": "hcp-vault-demo-irukqoel",
        "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
        "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
        "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
        "provider_account_id": "298208748192",
        "region": "ap-southeast-2",
        "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
        "state": "STABLE",
        "timeouts": null
       }
      },
      {
       "address": "module.hcp-hvn.hcp_hvn_route.route",
       "mode": "managed",
       "name": "route",
       "provider_name": "registry.terraform.io/hashicorp/hcp",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "hcp_hvn_route",
       "values": {
        "created_at": "2023-03-26T20:55:22.000Z",
        "destination_cidr": "10.200.0.0/16",
        "hvn_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
        "hvn_route_id": "hcp-vault-demo-irukqoel",
        "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
        "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
        "state": "ACTIVE",
        "target_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
        "timeouts": null
       }
      }
     ]
    },
    {
     "address": "module.hcp-vault",
     "resources": [
      {
       "address": "module.hcp-vault.hcp_vault_cluster.vault",
       "mode": "managed",
       "name": "vault",
       "provider_name": "registry.terraform.io/hashicorp/hcp",
       "schema_version": 0,
       "sensitive_values": {
        "audit_log_config": [],
        "major_version_upgrade_config": [
         {}
        ],
        "metrics_config": []
       },
       "type": "hcp_vault_cluster",
       "values": {
        "audit_log_config": [],
        "cloud_provider": "aws",
        "cluster_id": "hcp-vault-demo",
        "created_at": "2023-03-26T20:47:43.478Z",
        "hvn_id": "hcp-vault-demo-irukqoel",
        "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
        "major_version_upgrade_config": [
         {
          "maintenance_window_day": "",
          "maintenance_window_time": "",
          "upgrade_type": "AUTOMATIC"
         }
        ],
        "metrics_config": [],
        "min_vault_version": null,
        "namespace": "admin",
        "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
        "paths_filter": null,
        "primary_link": null,
        "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
        "public_endpoint": true,
        "region": "ap-southeast-2",
        "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
        "state": "RUNNING",
        "tier": "DEV",
        "timeouts": null,
        "vault_private_endpoint_url": "https://hcp-vault-demo-private-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
        "vault_public_endpoint_url": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
        "vault_version": "v1.12.3"
       }
      },
      {
       "address": "module.hcp-vault.hcp_vault_cluster_admin_token.token",
       "mode": "managed",
       "name": "token",
       "provider_name": "registry.terraform.io/hashicorp/hcp",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "hcp_vault_cluster_admin_token",
       "values": {
        "cluster_id": "hcp-vault-demo",
        "created_at": "2023-03-27T07:53:36+11:00",
        "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo/token",
        "timeouts": null,
        "token": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
       }
      }
     ]
    },
    {
     "address": "module.hcp-vault-config",
     "resources": [
      {
       "address": "module.hcp-vault-config.aws_iam_access_key.vault_mount_user",
       "mode": "managed",
       "name": "vault_mount_user",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_access_key",
       "values": {
        "create_date": "2023-03-26T20:54:06Z",
        "encrypted_secret": null,
        "encrypted_ses_smtp_password_v4": null,
        "id": "AKIA4OQ4C6ZS5G4DPCN4",
        "key_fingerprint": null,
        "pgp_key": null,
        "secret": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
        "ses_smtp_password_v4": "BOisMmY8FGpDaEG4maVtvDhs2AzkFt/SAj5us5NAz6s/",
        "status": "Active",
        "user": "demo-simon.lynch@hashicorp.com"
       }
      },
      {
       "address": "module.hcp-vault-config.aws_iam_user.vault_mount_user",
       "mode": "managed",
       "name": "vault_mount_user",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_user",
       "values": {
        "arn": "arn:aws:iam::855831148133:user/demo-simon.lynch@hashicorp.com",
        "force_destroy": true,
        "id": "demo-simon.lynch@hashicorp.com",
        "name": "demo-simon.lynch@hashicorp.com",
        "path": "/",
        "permissions_boundary": "arn:aws:iam::855831148133:policy/DemoUser",
        "tags": {},
        "tags_all": {},
        "unique_id": "AIDA4OQ4C6ZS32HZGE3SW"
       }
      },
      {
       "address": "module.hcp-vault-config.aws_iam_user_policy.vault_mount_user",
       "mode": "managed",
       "name": "vault_mount_user",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_user_policy",
       "values": {
        "id": "demo-simon.lynch@hashicorp.com:DemoUserInlinePolicy",
        "name": "DemoUserInlinePolicy",
        "name_prefix": null,
        "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"ec2:DescribeInstances\",\"ec2:DescribeRegions\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:ListRoles\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"DemoUserPermissions\"},{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"DemoAssumedRoleCredentialType\"},{\"Action\":[\"sts:GetFederationToken\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sts::855831148133:federated-user/${aws:username}*\",\"Sid\":\"DemoUserFederationCredentialType\"},{\"Action\":[\"iam:CreateUser\"],\"Condition\":{\"StringEquals\":{\"iam:PermissionsBoundary\":\"arn:aws:iam::855831148133:policy/DemoUser\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"CreateChildUser\"},{\"Action\":[\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageAndDeleteChildren\"},{\"Action\":[\"iam:CreateAccessKey\",\"iam:DeleteAccessKey\",\"iam:GetAccessKeyLastUsed\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:UpdateAccessKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageSelfAndChildren\"},{\"Effect\":\"Deny\",\"NotAction\":[\"ec2:DescribeRegions\",\"ec2:DescribeInstances\",\"iam:CreateAccessKey\",\"iam:CreateUser\",\"iam:DeleteAccessKey\",\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:GetAccessKeyLastUsed\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\",\"iam:UpdateAccessKey\",\"sts:AssumeRole\",\"sts:GetFederationToken\"],\"Resource\":\"*\",\"Sid\":\"ExplicitDenyAll\"},{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Deny\",\"NotResource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"ExplicitDenyAssumeRole\"}]}",
        "user": "demo-simon.lynch@hashicorp.com"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_auth_backend.vault_aws_auth",
       "mode": "managed",
       "name": "vault_aws_auth",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 1,
       "sensitive_values": {
        "tune": []
       },
       "type": "vault_auth_backend",
       "values": {
        "accessor": "auth_aws_b2a59c73",
        "description": "",
        "disable_remount": false,
        "id": "aws",
        "local": false,
        "namespace": null,
        "path": "aws",
        "tune": [],
        "type": "aws"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_aws_auth_backend_client.vault_aws_client",
       "mode": "managed",
       "name": "vault_aws_client",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "secret_key": true
       },
       "type": "vault_aws_auth_backend_client",
       "values": {
        "access_key": "AKIA4OQ4C6ZS5G4DPCN4",
        "backend": "aws",
        "ec2_endpoint": "",
        "iam_endpoint": "",
        "iam_server_id_header_value": "",
        "id": "auth/aws/config/client",
        "namespace": null,
        "secret_key": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
        "sts_endpoint": "",
        "sts_region": ""
       }
      },
      {
       "address": "module.hcp-vault-config.vault_aws_auth_backend_role.vault_ec2_auth_role",
       "mode": "managed",
       "name": "vault_ec2_auth_role",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "bound_account_ids": [],
        "bound_ami_ids": [
         false
        ],
        "bound_ec2_instance_ids": [],
        "bound_iam_instance_profile_arns": [],
        "bound_iam_principal_arns": [],
        "bound_iam_role_arns": [],
        "bound_regions": [],
        "bound_subnet_ids": [],
        "bound_vpc_ids": [],
        "token_bound_cidrs": [],
        "token_policies": [
         false
        ]
       },
       "type": "vault_aws_auth_backend_role",
       "values": {
        "allow_instance_migration": false,
        "auth_type": "ec2",
        "backend": "aws",
        "bound_account_ids": [],
        "bound_ami_ids": [
         "ami-05f998315cca9bfe3"
        ],
        "bound_ec2_instance_ids": [],
        "bound_iam_instance_profile_arns": [],
        "bound_iam_principal_arns": [],
        "bound_iam_role_arns": [],
        "bound_regions": [],
        "bound_subnet_ids": [],
        "bound_vpc_ids": [],
        "disallow_reauthentication": false,
        "id": "auth/aws/role/f5-device-role",
        "inferred_aws_region": "",
        "inferred_entity_type": "",
        "namespace": null,
        "resolve_aws_unique_ids": true,
        "role": "f5-device-role",
        "role_id": "71e4bc43-2ad0-4401-243e-7b4258cd89a9",
        "role_tag": "",
        "token_bound_cidrs": [],
        "token_explicit_max_ttl": 0,
        "token_max_ttl": 120,
        "token_no_default_policy": false,
        "token_num_uses": 0,
        "token_period": 0,
        "token_policies": [
         "cert-policy"
        ],
        "token_ttl": 60,
        "token_type": "default"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_kv_secret_v2.f5",
       "mode": "managed",
       "name": "f5",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "custom_metadata": [
         {
          "data": {}
         }
        ],
        "data": {},
        "data_json": true,
        "metadata": {}
       },
       "type": "vault_kv_secret_v2",
       "values": {
        "cas": null,
        "custom_metadata": [
         {
          "cas_required": false,
          "data": {},
          "delete_version_after": 0,
          "max_versions": 0
         }
        ],
        "data": {
         "f5admin": "bigipuser",
         "f5password": "8PsJ8liwNC8iduER"
        },
        "data_json": "{\"f5admin\":\"bigipuser\",\"f5password\":\"8PsJ8liwNC8iduER\"}",
        "delete_all_versions": false,
        "disable_read": false,
        "id": "network/data/f5admin",
        "metadata": {
         "created_time": "2023-03-26T20:54:26.890357196Z",
         "custom_metadata": "null",
         "deletion_time": "",
         "destroyed": "false",
         "version": "1"
        },
        "mount": "network",
        "name": "f5admin",
        "namespace": null,
        "options": null,
        "path": "network/data/f5admin"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_mount.kvv2",
       "mode": "managed",
       "name": "kvv2",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "options": {}
       },
       "type": "vault_mount",
       "values": {
        "accessor": "kv_61e304d2",
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "default_lease_ttl_seconds": 0,
        "description": "KV Version 2 secret engine mount",
        "external_entropy_access": false,
        "id": "network",
        "local": false,
        "max_lease_ttl_seconds": 0,
        "namespace": null,
        "options": {
         "version": "2"
        },
        "path": "network",
        "seal_wrap": false,
        "type": "kv"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_mount.pki_intermediate",
       "mode": "managed",
       "name": "pki_intermediate",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "options": {}
       },
       "type": "vault_mount",
       "values": {
        "accessor": "pki_c56565d3",
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "default_lease_ttl_seconds": 2678400,
        "description": "",
        "external_entropy_access": false,
        "id": "pki_intermediate",
        "local": false,
        "max_lease_ttl_seconds": 160704000,
        "namespace": null,
        "options": {},
        "path": "pki_intermediate",
        "seal_wrap": false,
        "type": "pki"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_mount.pki_root",
       "mode": "managed",
       "name": "pki_root",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "options": {}
       },
       "type": "vault_mount",
       "values": {
        "accessor": "pki_79cdd510",
        "allowed_managed_keys": [],
        "audit_non_hmac_request_keys": [],
        "audit_non_hmac_response_keys": [],
        "default_lease_ttl_seconds": 34819200,
        "description": "",
        "external_entropy_access": false,
        "id": "pki_root",
        "local": false,
        "max_lease_ttl_seconds": 160704000,
        "namespace": null,
        "options": {},
        "path": "pki_root",
        "seal_wrap": false,
        "type": "pki"
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls",
       "mode": "managed",
       "name": "config_urls",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "crl_distribution_points": [
         true
        ],
        "issuing_certificates": [
         true
        ],
        "ocsp_servers": []
       },
       "type": "vault_pki_secret_backend_config_urls",
       "values": {
        "backend": "pki_root",
        "crl_distribution_points": [
         "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/crl"
        ],
        "id": "pki_root/config/urls",
        "issuing_certificates": [
         "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/ca"
        ],
        "namespace": null,
        "ocsp_servers": []
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls_int",
       "mode": "managed",
       "name": "config_urls_int",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "crl_distribution_points": [
         true
        ],
        "issuing_certificates": [
         true
        ],
        "ocsp_servers": []
       },
       "type": "vault_pki_secret_backend_config_urls",
       "values": {
        "backend": "pki_intermediate",
        "crl_distribution_points": [
         "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/crl"
        ],
        "id": "pki_intermediate/config/urls",
        "issuing_certificates": [
         "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/ca"
        ],
        "namespace": null,
        "ocsp_servers": []
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_cert_request.intermediate",
       "mode": "managed",
       "name": "intermediate",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "vault_pki_secret_backend_intermediate_cert_request",
       "values": {
        "add_basic_constraints": false,
        "alt_names": null,
        "backend": "pki_intermediate",
        "common_name": "ca.acme.hashicorp.demo",
        "country": null,
        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
        "exclude_cn_from_sans": null,
        "format": "pem",
        "id": "pki_intermediate/intermediate/generate/internal",
        "ip_sans": null,
        "key_bits": 2048,
        "key_type": "rsa",
        "locality": null,
        "managed_key_id": null,
        "managed_key_name": null,
        "namespace": null,
        "organization": null,
        "other_sans": null,
        "ou": null,
        "postal_code": null,
        "private_key": null,
        "private_key_format": "der",
        "private_key_type": null,
        "province": null,
        "street_address": null,
        "type": "internal",
        "uri_sans": null
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_set_signed.intermediate",
       "mode": "managed",
       "name": "intermediate",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "vault_pki_secret_backend_intermediate_set_signed",
       "values": {
        "backend": "pki_intermediate",
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
        "id": "pki_intermediate/intermediate/set-signed",
        "namespace": null
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_role.role",
       "mode": "managed",
       "name": "role",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "allowed_domains": [
         false
        ],
        "allowed_other_sans": [],
        "allowed_serial_numbers": [],
        "allowed_uri_sans": [],
        "country": [],
        "ext_key_usage": [],
        "key_usage": [
         false,
         false,
         false
        ],
        "locality": [],
        "organization": [],
        "ou": [],
        "policy_identifier": [],
        "postal_code": [],
        "province": [],
        "street_address": []
       },
       "type": "vault_pki_secret_backend_role",
       "values": {
        "allow_any_name": false,
        "allow_bare_domains": false,
        "allow_glob_domains": false,
        "allow_ip_sans": true,
        "allow_localhost": true,
        "allow_subdomains": true,
        "allowed_domains": [
         "f5demo.com"
        ],
        "allowed_domains_template": false,
        "allowed_other_sans": [],
        "allowed_serial_numbers": [],
        "allowed_uri_sans": [],
        "backend": "pki_intermediate",
        "basic_constraints_valid_for_non_ca": false,
        "client_flag": true,
        "code_signing_flag": false,
        "country": [],
        "email_protection_flag": false,
        "enforce_hostnames": true,
        "ext_key_usage": [],
        "generate_lease": false,
        "id": "pki_intermediate/roles/f5demo",
        "key_bits": 4096,
        "key_type": "rsa",
        "key_usage": [
         "DigitalSignature",
         "KeyAgreement",
         "KeyEncipherment"
        ],
        "locality": [],
        "max_ttl": "0",
        "name": "f5demo",
        "namespace": null,
        "no_store": false,
        "not_before_duration": "0s",
        "organization": [],
        "ou": [],
        "policy_identifier": [],
        "policy_identifiers": null,
        "postal_code": [],
        "province": [],
        "require_cn": true,
        "server_flag": true,
        "street_address": [],
        "ttl": "600",
        "use_csr_common_name": true,
        "use_csr_sans": true
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_role.vault-self",
       "mode": "managed",
       "name": "vault-self",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {
        "allowed_domains": [],
        "allowed_other_sans": [],
        "allowed_serial_numbers": [],
        "allowed_uri_sans": [],
        "country": [],
        "ext_key_usage": [],
        "key_usage": [
         false,
         false,
         false
        ],
        "locality": [],
        "organization": [],
        "ou": [],
        "policy_identifier": [],
        "postal_code": [],
        "province": [],
        "street_address": []
       },
       "type": "vault_pki_secret_backend_role",
       "values": {
        "allow_any_name": true,
        "allow_bare_domains": false,
        "allow_glob_domains": false,
        "allow_ip_sans": true,
        "allow_localhost": true,
        "allow_subdomains": false,
        "allowed_domains": [],
        "allowed_domains_template": false,
        "allowed_other_sans": [],
        "allowed_serial_numbers": [],
        "allowed_uri_sans": [],
        "backend": "pki_intermediate",
        "basic_constraints_valid_for_non_ca": false,
        "client_flag": true,
        "code_signing_flag": false,
        "country": [],
        "email_protection_flag": false,
        "enforce_hostnames": true,
        "ext_key_usage": [],
        "generate_lease": false,
        "id": "pki_intermediate/roles/vault-self",
        "key_bits": 2048,
        "key_type": "rsa",
        "key_usage": [
         "DigitalSignature",
         "KeyAgreement",
         "KeyEncipherment"
        ],
        "locality": [],
        "max_ttl": "0",
        "name": "vault-self",
        "namespace": null,
        "no_store": false,
        "not_before_duration": "0s",
        "organization": [],
        "ou": [],
        "policy_identifier": [],
        "policy_identifiers": null,
        "postal_code": [],
        "province": [],
        "require_cn": true,
        "server_flag": true,
        "street_address": [],
        "ttl": "94608000",
        "use_csr_common_name": true,
        "use_csr_sans": true
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
       "mode": "managed",
       "name": "self-signing-cert",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 1,
       "sensitive_values": {},
       "type": "vault_pki_secret_backend_root_cert",
       "values": {
        "alt_names": null,
        "backend": "pki_root",
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
        "common_name": "Root CA",
        "country": null,
        "exclude_cn_from_sans": true,
        "format": "pem",
        "id": "pki_root/root/generate/internal",
        "ip_sans": null,
        "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
        "key_bits": 4096,
        "key_type": "rsa",
        "locality": null,
        "managed_key_id": null,
        "managed_key_name": null,
        "max_path_length": -1,
        "namespace": null,
        "organization": "acme Demo Org",
        "other_sans": null,
        "ou": "acme Orgnisation Unit",
        "permitted_dns_domains": null,
        "postal_code": null,
        "private_key_format": "der",
        "province": null,
        "serial": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
        "serial_number": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
        "street_address": null,
        "ttl": "160704000",
        "type": "internal",
        "uri_sans": null
       }
      },
      {
       "address": "module.hcp-vault-config.vault_pki_secret_backend_root_sign_intermediate.root",
       "mode": "managed",
       "name": "root",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 2,
       "sensitive_values": {
        "ca_chain": [
         false,
         false
        ]
       },
       "type": "vault_pki_secret_backend_root_sign_intermediate",
       "values": {
        "alt_names": null,
        "backend": "pki_root",
        "ca_chain": [
         "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
         "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----"
        ],
        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
        "certificate_bundle": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
        "common_name": "ca.acme.hashicorp.demo",
        "country": null,
        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
        "exclude_cn_from_sans": true,
        "format": "pem",
        "id": "pki_root/ca.acme.hashicorp.demo",
        "ip_sans": null,
        "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
        "locality": null,
        "max_path_length": -1,
        "namespace": null,
        "organization": "acme Demo Org",
        "other_sans": null,
        "ou": "acme Orgnisation Unit",
        "permitted_dns_domains": null,
        "postal_code": null,
        "province": null,
        "revoke": false,
        "serial": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
        "serial_number": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
        "street_address": null,
        "ttl": "160704000",
        "uri_sans": null,
        "use_csr_values": false
       }
      },
      {
       "address": "module.hcp-vault-config.vault_policy.example",
       "mode": "managed",
       "name": "example",
       "provider_name": "registry.terraform.io/hashicorp/vault",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "vault_policy",
       "values": {
        "id": "cert-policy",
        "name": "cert-policy",
        "namespace": null,
        "policy": "# Permits token creation\npath \"auth/token/create\" {\n  capabilities = [\"update\"]\n}\n\n# Permits token renew\npath \"auth/token/renew\" {\n  capabilities = [\"update\"]\n}\n\n# Read-only permission on secret/\npath \"secret/data/*\" {\n  capabilities = [\"read\"]\n}\n\n# Enable secrets engine\npath \"sys/mounts/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n# List enabled secrets engine\npath \"sys/mounts\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n# Work with pki secrets engine\npath \"pki*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\" ]\n}\n\n# read network secrets \npath \"network/data/*\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n"
       }
      }
     ]
    },
    {
     "address": "module.infra-aws",
     "child_modules": [
      {
       "address": "module.infra-aws.module.vpc",
       "resources": [
        {
         "address": "module.infra-aws.module.vpc.aws_eip.nat[0]",
         "index": 0,
         "mode": "managed",
         "name": "nat",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_eip",
         "values": {
          "address": null,
          "allocation_id": "eipalloc-013bb1d2a21e8adae",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0b67156aff66dfe3c",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-013bb1d2a21e8adae",
          "instance": "",
          "network_border_group": "ap-southeast-2",
          "network_interface": "eni-082fdb5480d50c5eb",
          "private_dns": "ip-10-200-10-140.ap-southeast-2.compute.internal",
          "private_ip": "10.200.10.140",
          "public_dns": "ec2-52-64-109-96.ap-southeast-2.compute.amazonaws.com",
          "public_ip": "52.64.109.96",
          "public_ipv4_pool": "amazon",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "timeouts": null,
          "vpc": true
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_internet_gateway.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_internet_gateway",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:internet-gateway/igw-0ddd5b76ae1975ac0",
          "id": "igw-0ddd5b76ae1975ac0",
          "owner_id": "855831148133",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_nat_gateway.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_nat_gateway",
         "values": {
          "allocation_id": "eipalloc-013bb1d2a21e8adae",
          "connectivity_type": "public",
          "id": "nat-0c3cff73ae4448cf1",
          "network_interface_id": "eni-082fdb5480d50c5eb",
          "private_ip": "10.200.10.140",
          "public_ip": "52.64.109.96",
          "subnet_id": "subnet-03475e20ee7be9fe2",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          }
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route.private_nat_gateway[0]",
         "index": 0,
         "mode": "managed",
         "name": "private_nat_gateway",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "timeouts": {}
         },
         "type": "aws_route",
         "values": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-0678e0eba8978e44f1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-0c3cff73ae4448cf1",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0678e0eba8978e44f",
          "state": "active",
          "timeouts": {
           "create": "5m",
           "delete": null,
           "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route.public_internet_gateway[0]",
         "index": 0,
         "mode": "managed",
         "name": "public_internet_gateway",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "timeouts": {}
         },
         "type": "aws_route",
         "values": {
          "carrier_gateway_id": "",
          "core_network_arn": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-0ddd5b76ae1975ac0",
          "id": "r-rtb-0359582849d38acdd1080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0359582849d38acdd",
          "state": "active",
          "timeouts": {
           "create": "5m",
           "delete": null,
           "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table.private[0]",
         "index": 0,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "propagating_vgws": [],
          "route": [
           {}
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_route_table",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0678e0eba8978e44f",
          "id": "rtb-0678e0eba8978e44f",
          "owner_id": "855831148133",
          "propagating_vgws": [],
          "route": [
           {
            "carrier_gateway_id": "",
            "cidr_block": "0.0.0.0/0",
            "core_network_arn": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "instance_id": "",
            "ipv6_cidr_block": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0c3cff73ae4448cf1",
            "network_interface_id": "",
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
           }
          ],
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-private",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-private",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table.public[0]",
         "index": 0,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "propagating_vgws": [],
          "route": [
           {},
           {}
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_route_table",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0359582849d38acdd",
          "id": "rtb-0359582849d38acdd",
          "owner_id": "855831148133",
          "propagating_vgws": [],
          "route": [
           {
            "carrier_gateway_id": "",
            "cidr_block": "0.0.0.0/0",
            "core_network_arn": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0ddd5b76ae1975ac0",
            "instance_id": "",
            "ipv6_cidr_block": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
           },
           {
            "carrier_gateway_id": "",
            "cidr_block": "172.25.16.0/20",
            "core_network_arn": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "instance_id": "",
            "ipv6_cidr_block": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "transit_gateway_id": "tgw-01099067ffc4b2e61",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
           }
          ],
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-public",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-public",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.private[0]",
         "index": 0,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-05ddd2ba0b1fbe17e",
          "route_table_id": "rtb-0678e0eba8978e44f",
          "subnet_id": "subnet-0b0c433045e19828c"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.private[1]",
         "index": 1,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-0b546365fc103c69e",
          "route_table_id": "rtb-0678e0eba8978e44f",
          "subnet_id": "subnet-029c5ca58ff58d1d7"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.private[2]",
         "index": 2,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-0d3d11fd8108abf0b",
          "route_table_id": "rtb-0678e0eba8978e44f",
          "subnet_id": "subnet-0e235bd5870506158"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.public[0]",
         "index": 0,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-0f7ecbed0647ce96d",
          "route_table_id": "rtb-0359582849d38acdd",
          "subnet_id": "subnet-03475e20ee7be9fe2"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.public[1]",
         "index": 1,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-0664b390aa0eaa1a4",
          "route_table_id": "rtb-0359582849d38acdd",
          "subnet_id": "subnet-0594f0a7cb5d9addc"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_route_table_association.public[2]",
         "index": 2,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_route_table_association",
         "values": {
          "gateway_id": "",
          "id": "rtbassoc-0618645d2b3686b2f",
          "route_table_id": "rtb-0359582849d38acdd",
          "subnet_id": "subnet-0b8c961533d7fae78"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.private[0]",
         "index": 0,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b0c433045e19828c",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2a",
          "availability_zone_id": "apse2-az3",
          "cidr_block": "10.200.20.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0b0c433045e19828c",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.private[1]",
         "index": 1,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-029c5ca58ff58d1d7",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2b",
          "availability_zone_id": "apse2-az1",
          "cidr_block": "10.200.21.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-029c5ca58ff58d1d7",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.private[2]",
         "index": 2,
         "mode": "managed",
         "name": "private",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0e235bd5870506158",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2c",
          "availability_zone_id": "apse2-az2",
          "cidr_block": "10.200.22.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0e235bd5870506158",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.public[0]",
         "index": 0,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-03475e20ee7be9fe2",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2a",
          "availability_zone_id": "apse2-az3",
          "cidr_block": "10.200.10.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-03475e20ee7be9fe2",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.public[1]",
         "index": 1,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0594f0a7cb5d9addc",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2b",
          "availability_zone_id": "apse2-az1",
          "cidr_block": "10.200.11.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0594f0a7cb5d9addc",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_subnet.public[2]",
         "index": 2,
         "mode": "managed",
         "name": "public",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_subnet",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b8c961533d7fae78",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "ap-southeast-2c",
          "availability_zone_id": "apse2-az2",
          "cidr_block": "10.200.12.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0b8c961533d7fae78",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "855831148133",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
           "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.vpc.aws_vpc.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_vpc",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:vpc/vpc-04f3e1e59d4facd4f",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.200.0.0/16",
          "default_network_acl_id": "acl-0424ebd92f2677c7d",
          "default_route_table_id": "rtb-05a77d173a1f91bfc",
          "default_security_group_id": "sg-0440b8e6a4da5b7f8",
          "dhcp_options_id": "dopt-0d500dd5e867008f0",
          "enable_classiclink": false,
          "enable_classiclink_dns_support": false,
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "enable_network_address_usage_metrics": false,
          "id": "vpc-04f3e1e59d4facd4f",
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_network_border_group": "",
          "ipv6_ipam_pool_id": "",
          "ipv6_netmask_length": 0,
          "main_route_table_id": "rtb-05a77d173a1f91bfc",
          "owner_id": "855831148133",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel",
           "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
          }
         }
        }
       ]
      },
      {
       "address": "module.infra-aws.module.sg-mgmt",
       "resources": [
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]",
         "index": 0,
         "mode": "managed",
         "name": "this_name_prefix",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "egress": [
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [
             false
            ],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [
             false
            ],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [
             false
            ],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [
             false
            ],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [
             false
            ],
            "prefix_list_ids": [],
            "security_groups": []
           }
          ],
          "ingress": [
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "security_groups": []
           },
           {
            "cidr_blocks": [
             false
            ],
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "security_groups": []
           }
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
         },
         "type": "aws_security_group",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-0d296ffafa864943d",
          "description": "Security Group managed by Terraform",
          "egress": [
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "HTTP",
            "from_port": 80,
            "ipv6_cidr_blocks": [
             "::/0"
            ],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 80
           },
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "HTTPS",
            "from_port": 443,
            "ipv6_cidr_blocks": [
             "::/0"
            ],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 443
           },
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "HTTPS",
            "from_port": 8443,
            "ipv6_cidr_blocks": [
             "::/0"
            ],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 8443
           },
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "SSH",
            "from_port": 22,
            "ipv6_cidr_blocks": [
             "::/0"
            ],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 22
           },
           {
            "cidr_blocks": [
             "0.0.0.0/0"
            ],
            "description": "Vault",
            "from_port": 8200,
            "ipv6_cidr_blocks": [
             "::/0"
            ],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 8200
           }
          ],
          "id": "sg-0d296ffafa864943d",
          "ingress": [
           {
            "cidr_blocks": [
             "202.137.173.136/32"
            ],
            "description": "HTTP",
            "from_port": 80,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 80
           },
           {
            "cidr_blocks": [
             "202.137.173.136/32"
            ],
            "description": "HTTPS",
            "from_port": 443,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 443
           },
           {
            "cidr_blocks": [
             "202.137.173.136/32"
            ],
            "description": "HTTPS",
            "from_port": 8443,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 8443
           },
           {
            "cidr_blocks": [
             "202.137.173.136/32"
            ],
            "description": "Remote Desktop",
            "from_port": 3389,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 3389
           },
           {
            "cidr_blocks": [
             "202.137.173.136/32"
            ],
            "description": "SSH",
            "from_port": 22,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 22
           }
          ],
          "name": "hcp-vault-demo-irukqoel-all-20230326205416578300000005",
          "name_prefix": "hcp-vault-demo-irukqoel-all-",
          "owner_id": "855831148133",
          "revoke_rules_on_delete": false,
          "tags": {
           "Name": "hcp-vault-demo-irukqoel-all"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel-all"
          },
          "timeouts": {
           "create": "10m",
           "delete": "15m"
          },
          "vpc_id": "vpc-04f3e1e59d4facd4f"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[0]",
         "index": 0,
         "mode": "managed",
         "name": "egress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [
           false
          ],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Vault",
          "from_port": 8200,
          "id": "sgrule-1683148569",
          "ipv6_cidr_blocks": [
           "::/0"
          ],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 8200,
          "type": "egress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[1]",
         "index": 1,
         "mode": "managed",
         "name": "egress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [
           false
          ],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "HTTP",
          "from_port": 80,
          "id": "sgrule-3812331524",
          "ipv6_cidr_blocks": [
           "::/0"
          ],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 80,
          "type": "egress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[2]",
         "index": 2,
         "mode": "managed",
         "name": "egress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [
           false
          ],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "HTTPS",
          "from_port": 443,
          "id": "sgrule-2309250818",
          "ipv6_cidr_blocks": [
           "::/0"
          ],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 443,
          "type": "egress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[3]",
         "index": 3,
         "mode": "managed",
         "name": "egress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [
           false
          ],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "SSH",
          "from_port": 22,
          "id": "sgrule-1318974775",
          "ipv6_cidr_blocks": [
           "::/0"
          ],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 22,
          "type": "egress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[4]",
         "index": 4,
         "mode": "managed",
         "name": "egress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [
           false
          ],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "HTTPS",
          "from_port": 8443,
          "id": "sgrule-3177803617",
          "ipv6_cidr_blocks": [
           "::/0"
          ],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 8443,
          "type": "egress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[0]",
         "index": 0,
         "mode": "managed",
         "name": "ingress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "202.137.173.136/32"
          ],
          "description": "Remote Desktop",
          "from_port": 3389,
          "id": "sgrule-2117798333",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "sgr-09da38a52bdbb7990",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 3389,
          "type": "ingress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[1]",
         "index": 1,
         "mode": "managed",
         "name": "ingress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "202.137.173.136/32"
          ],
          "description": "HTTP",
          "from_port": 80,
          "id": "sgrule-2047611276",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "sgr-08af38cfb3413baba",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 80,
          "type": "ingress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[2]",
         "index": 2,
         "mode": "managed",
         "name": "ingress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "202.137.173.136/32"
          ],
          "description": "HTTPS",
          "from_port": 443,
          "id": "sgrule-2990499484",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "sgr-0a9510e232478b71a",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[3]",
         "index": 3,
         "mode": "managed",
         "name": "ingress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "202.137.173.136/32"
          ],
          "description": "SSH",
          "from_port": 22,
          "id": "sgrule-1445541789",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "sgr-0d5cf1142b30dbc14",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 22,
          "type": "ingress"
         }
        },
        {
         "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[4]",
         "index": 4,
         "mode": "managed",
         "name": "ingress_rules",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 2,
         "sensitive_values": {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
         },
         "type": "aws_security_group_rule",
         "values": {
          "cidr_blocks": [
           "202.137.173.136/32"
          ],
          "description": "HTTPS",
          "from_port": 8443,
          "id": "sgrule-3202049348",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-0d296ffafa864943d",
          "security_group_rule_id": "sgr-0c07fcf1b1be7a925",
          "self": false,
          "source_security_group_id": null,
          "timeouts": null,
          "to_port": 8443,
          "type": "ingress"
         }
        }
       ]
      },
      {
       "address": "module.infra-aws.module.tgw",
       "resources": [
        {
         "address": "module.infra-aws.module.tgw.aws_ec2_tag.this[\"Name\"]",
         "index": "Name",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_ec2_tag",
         "values": {
          "id": "tgw-rtb-054fc4149f428c395,Name",
          "key": "Name",
          "resource_id": "tgw-rtb-054fc4149f428c395",
          "value": "hcp-vault-demo-irukqoel"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "transit_gateway_cidr_blocks": []
         },
         "type": "aws_ec2_transit_gateway",
         "values": {
          "amazon_side_asn": 64512,
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
          "association_default_route_table_id": "tgw-rtb-054fc4149f428c395",
          "auto_accept_shared_attachments": "enable",
          "default_route_table_association": "enable",
          "default_route_table_propagation": "enable",
          "description": "hcp-vault-demo-irukqoel",
          "dns_support": "enable",
          "id": "tgw-01099067ffc4b2e61",
          "multicast_support": "disable",
          "owner_id": "855831148133",
          "propagation_default_route_table_id": "tgw-rtb-054fc4149f428c395",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "timeouts": {
           "create": null,
           "delete": null,
           "update": null
          },
          "transit_gateway_cidr_blocks": [],
          "vpn_ecmp_support": "enable"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_ec2_transit_gateway_route_table",
         "values": {
          "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway-route-table/tgw-rtb-06061a18ae86807c4",
          "default_association_route_table": false,
          "default_propagation_route_table": false,
          "id": "tgw-rtb-06061a18ae86807c4",
          "tags": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "transit_gateway_id": "tgw-01099067ffc4b2e61"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_vpc_attachment.this[\"vpc1\"]",
         "index": "vpc1",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "subnet_ids": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_ec2_transit_gateway_vpc_attachment",
         "values": {
          "appliance_mode_support": "disable",
          "dns_support": "enable",
          "id": "tgw-attach-06394757fd588d215",
          "ipv6_support": "disable",
          "subnet_ids": [
           "subnet-029c5ca58ff58d1d7",
           "subnet-0b0c433045e19828c",
           "subnet-0e235bd5870506158"
          ],
          "tags": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "transit_gateway_default_route_table_association": true,
          "transit_gateway_default_route_table_propagation": true,
          "transit_gateway_id": "tgw-01099067ffc4b2e61",
          "vpc_id": "vpc-04f3e1e59d4facd4f",
          "vpc_owner_id": "855831148133"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ram_principal_association.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_ram_principal_association",
         "values": {
          "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,298208748192",
          "principal": "298208748192",
          "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ram_resource_association.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_ram_resource_association",
         "values": {
          "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
          "resource_arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
          "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
         }
        },
        {
         "address": "module.infra-aws.module.tgw.aws_ram_resource_share.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "permission_arns": [
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_ram_resource_share",
         "values": {
          "allow_external_principals": true,
          "arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
          "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
          "name": "hcp-vault-demo-irukqoel",
          "permission_arns": [
           "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionTransitGateway"
          ],
          "tags": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "tags_all": {
           "Name": "hcp-vault-demo-irukqoel"
          },
          "timeouts": null
         }
        }
       ]
      }
     ],
     "resources": [
      {
       "address": "module.infra-aws.aws_eip.main",
       "mode": "managed",
       "name": "main",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_eip",
       "values": {
        "address": null,
        "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
        "associate_with_private_ip": null,
        "association_id": "eipassoc-0ccbe95029aaa5f4a",
        "carrier_ip": "",
        "customer_owned_ip": "",
        "customer_owned_ipv4_pool": "",
        "domain": "vpc",
        "id": "eipalloc-0d4b7ba79f02aceb2",
        "instance": "i-0f7c3db42fc2275fb",
        "network_border_group": "ap-southeast-2",
        "network_interface": "eni-0dcc0fbd5b02c018b",
        "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
        "private_ip": "10.200.11.212",
        "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
        "public_ip": "13.211.245.115",
        "public_ipv4_pool": "amazon",
        "tags": {},
        "tags_all": {},
        "timeouts": null,
        "vpc": true
       }
      },
      {
       "address": "module.infra-aws.aws_eip_association.main",
       "mode": "managed",
       "name": "main",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_eip_association",
       "values": {
        "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
        "allow_reassociation": null,
        "id": "eipassoc-0ccbe95029aaa5f4a",
        "instance_id": "i-0f7c3db42fc2275fb",
        "network_interface_id": "eni-0dcc0fbd5b02c018b",
        "private_ip_address": "10.200.11.212",
        "public_ip": "13.211.245.115"
       }
      },
      {
       "address": "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
       "mode": "managed",
       "name": "ssm_instance_profile",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_instance_profile",
       "values": {
        "arn": "arn:aws:iam::855831148133:instance-profile/ssm_instance_profile",
        "create_date": "2023-03-26T20:54:06Z",
        "id": "ssm_instance_profile",
        "name": "ssm_instance_profile",
        "name_prefix": null,
        "path": "/",
        "role": "ssm_role",
        "tags": {},
        "tags_all": {},
        "unique_id": "AIPA4OQ4C6ZSQKO4U3BIN"
       }
      },
      {
       "address": "module.infra-aws.aws_iam_role.ssm_role",
       "mode": "managed",
       "name": "ssm_role",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [],
        "managed_policy_arns": [
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "arn": "arn:aws:iam::855831148133:role/ssm_role",
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
        "create_date": "2023-03-26T20:54:05Z",
        "description": "",
        "force_detach_policies": false,
        "id": "ssm_role",
        "inline_policy": [],
        "managed_policy_arns": [
         "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        ],
        "max_session_duration": 3600,
        "name": "ssm_role",
        "name_prefix": "",
        "path": "/",
        "permissions_boundary": null,
        "tags": {},
        "tags_all": {},
        "unique_id": "AROA4OQ4C6ZSXQFIRZCCI"
       }
      },
      {
       "address": "module.infra-aws.aws_iam_role_policy_attachment.ssm_policy_attachment",
       "mode": "managed",
       "name": "ssm_policy_attachment",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "ssm_role-20230326205407080300000001",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
        "role": "ssm_role"
       }
      },
      {
       "address": "module.infra-aws.aws_instance.bastion",
       "mode": "managed",
       "name": "bastion",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "capacity_reservation_specification": [
         {
          "capacity_reservation_target": []
         }
        ],
        "credit_specification": [
         {}
        ],
        "ebs_block_device": [],
        "enclave_options": [
         {}
        ],
        "ephemeral_block_device": [],
        "ipv6_addresses": [],
        "launch_template": [],
        "maintenance_options": [
         {}
        ],
        "metadata_options": [
         {}
        ],
        "network_interface": [],
        "private_dns_name_options": [
         {}
        ],
        "root_block_device": [
         {
          "tags": {}
         }
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "tags": {},
        "tags_all": {},
        "vpc_security_group_ids": [
         false
        ]
       },
       "type": "aws_instance",
       "values": {
        "ami": "ami-05f998315cca9bfe3",
        "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0f7c3db42fc2275fb",
        "associate_public_ip_address": true,
        "availability_zone": "ap-southeast-2b",
        "capacity_reservation_specification": [
         {
          "capacity_reservation_preference": "open",
          "capacity_reservation_target": []
         }
        ],
        "cpu_core_count": 1,
        "cpu_threads_per_core": 2,
        "credit_specification": [
         {
          "cpu_credits": "unlimited"
         }
        ],
        "disable_api_stop": false,
        "disable_api_termination": false,
        "ebs_block_device": [],
        "ebs_optimized": false,
        "enclave_options": [
         {
          "enabled": false
         }
        ],
        "ephemeral_block_device": [],
        "get_password_data": false,
        "hibernation": false,
        "host_id": "",
        "host_resource_group_arn": null,
        "iam_instance_profile": "ssm_instance_profile",
        "id": "i-0f7c3db42fc2275fb",
        "instance_initiated_shutdown_behavior": "stop",
        "instance_state": "running",
        "instance_type": "t3.small",
        "ipv6_address_count": 0,
        "ipv6_addresses": [],
        "key_name": "awsf5demo",
        "launch_template": [],
        "maintenance_options": [
         {
          "auto_recovery": "default"
         }
        ],
        "metadata_options": [
         {
          "http_endpoint": "enabled",
          "http_put_response_hop_limit": 1,
          "http_tokens": "optional",
          "instance_metadata_tags": "disabled"
         }
        ],
        "monitoring": false,
        "network_interface": [],
        "outpost_arn": "",
        "password_data": "",
        "placement_group": "",
        "placement_partition_number": 0,
        "primary_network_interface_id": "eni-0dcc0fbd5b02c018b",
        "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
        "private_dns_name_options": [
         {
          "enable_resource_name_dns_a_record": false,
          "enable_resource_name_dns_aaaa_record": false,
          "hostname_type": "ip-name"
         }
        ],
        "private_ip": "10.200.11.212",
        "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
        "public_ip": "13.211.245.115",
        "root_block_device": [
         {
          "delete_on_termination": true,
          "device_name": "/dev/sda1",
          "encrypted": false,
          "iops": 100,
          "kms_key_id": "",
          "tags": {},
          "throughput": 0,
          "volume_id": "vol-0616dc1d48b38a5b8",
          "volume_size": 8,
          "volume_type": "gp2"
         }
        ],
        "secondary_private_ips": [],
        "security_groups": [],
        "source_dest_check": true,
        "subnet_id": "subnet-0594f0a7cb5d9addc",
        "tags": {
         "Name": "VaultAgent",
         "TTL": "300",
         "owner": "srlynch"
        },
        "tags_all": {
         "Name": "VaultAgent",
         "TTL": "300",
         "owner": "srlynch"
        },
        "tenancy": "default",
        "timeouts": null,
        "user_data": null,
        "user_data_base64": null,
        "user_data_replace_on_change": false,
        "volume_tags": null,
        "vpc_security_group_ids": [
         "sg-0d296ffafa864943d"
        ]
       }
      },
      {
       "address": "module.infra-aws.aws_key_pair.main",
       "mode": "managed",
       "name": "main",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_key_pair",
       "values": {
        "arn": "arn:aws:ec2:ap-southeast-2:855831148133:key-pair/awsf5demo",
        "fingerprint": "suDzOamwyhfOVf6zKgOAYl/qDr+lg6kGNVZxItIs5TY=",
        "id": "awsf5demo",
        "key_name": "awsf5demo",
        "key_name_prefix": "",
        "key_pair_id": "key-034dafd692e0e5d28",
        "key_type": "ed25519",
        "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII8wNgHtY1Lao00trZ8XoweIxa4F9T/wekoP2e2VzZPq simon.lynch@hashicorp.com",
        "tags": {},
        "tags_all": {}
       }
      },
      {
       "address": "module.infra-aws.aws_route.hcp_hvn_route",
       "mode": "managed",
       "name": "hcp_hvn_route",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": "",
        "core_network_arn": "",
        "destination_cidr_block": "172.25.16.0/20",
        "destination_ipv6_cidr_block": "",
        "destination_prefix_list_id": "",
        "egress_only_gateway_id": "",
        "gateway_id": "",
        "id": "r-rtb-0359582849d38acdd4288272982",
        "instance_id": "",
        "instance_owner_id": "",
        "local_gateway_id": "",
        "nat_gateway_id": "",
        "network_interface_id": "",
        "origin": "CreateRoute",
        "route_table_id": "rtb-0359582849d38acdd",
        "state": "active",
        "timeouts": null,
        "transit_gateway_id": "tgw-01099067ffc4b2e61",
        "vpc_endpoint_id": "",
        "vpc_peering_connection_id": ""
       }
      }
     ]
    },
    {
     "address": "module.tfc-agent",
     "resources": [
      {
       "address": "module.tfc-agent.aws_cloudwatch_log_group.tfe_agents_ecs[0]",
       "index": 0,
       "mode": "managed",
       "name": "tfe_agents_ecs",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_cloudwatch_log_group",
       "values": {
        "arn": "arn:aws:logs:ap-southeast-2:855831148133:log-group:tfc_agent-tfe-agents-ecs",
        "id": "tfc_agent-tfe-agents-ecs",
        "kms_key_id": "",
        "name": "tfc_agent-tfe-agents-ecs",
        "name_prefix": "",
        "retention_in_days": 0,
        "skip_destroy": false,
        "tags": {
         "Name": "tfc_agent-tfe-agents-ecs-logs"
        },
        "tags_all": {
         "Name": "tfc_agent-tfe-agents-ecs-logs"
        }
       }
      },
      {
       "address": "module.tfc-agent.aws_ecs_cluster.agents",
       "mode": "managed",
       "name": "agents",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "capacity_providers": [],
        "configuration": [],
        "default_capacity_provider_strategy": [],
        "service_connect_defaults": [],
        "setting": [
         {}
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_ecs_cluster",
       "values": {
        "arn": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
        "capacity_providers": [],
        "configuration": [],
        "default_capacity_provider_strategy": [],
        "id": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
        "name": "tfc_agent-cloud-agents-cluster",
        "service_connect_defaults": [],
        "setting": [
         {
          "name": "containerInsights",
          "value": "disabled"
         }
        ],
        "tags": {
         "Name": "tfc_agent-cloud-agents-cluster"
        },
        "tags_all": {
         "Name": "tfc_agent-cloud-agents-cluster"
        }
       }
      },
      {
       "address": "module.tfc-agent.aws_ecs_service.agents",
       "mode": "managed",
       "name": "agents",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "alarms": [],
        "capacity_provider_strategy": [],
        "deployment_circuit_breaker": [
         {}
        ],
        "deployment_controller": [
         {}
        ],
        "load_balancer": [],
        "network_configuration": [
         {
          "security_groups": [
           false
          ],
          "subnets": [
           false,
           false,
           false
          ]
         }
        ],
        "ordered_placement_strategy": [],
        "placement_constraints": [],
        "service_connect_configuration": [],
        "service_registries": [],
        "tags": {},
        "tags_all": {},
        "triggers": {}
       },
       "type": "aws_ecs_service",
       "values": {
        "alarms": [],
        "capacity_provider_strategy": [],
        "cluster": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
        "deployment_circuit_breaker": [
         {
          "enable": false,
          "rollback": false
         }
        ],
        "deployment_controller": [
         {
          "type": "ECS"
         }
        ],
        "deployment_maximum_percent": 200,
        "deployment_minimum_healthy_percent": 100,
        "desired_count": 1,
        "enable_ecs_managed_tags": false,
        "enable_execute_command": false,
        "force_new_deployment": null,
        "health_check_grace_period_seconds": 0,
        "iam_role": "aws-service-role",
        "id": "arn:aws:ecs:ap-southeast-2:855831148133:service/tfc_agent-cloud-agents-cluster/tfc_agent-cloud-agents-service",
        "launch_type": "FARGATE",
        "load_balancer": [],
        "name": "tfc_agent-cloud-agents-service",
        "network_configuration": [
         {
          "assign_public_ip": false,
          "security_groups": [
           "sg-00c74d72a200ff57b"
          ],
          "subnets": [
           "subnet-029c5ca58ff58d1d7",
           "subnet-0b0c433045e19828c",
           "subnet-0e235bd5870506158"
          ]
         }
        ],
        "ordered_placement_strategy": [],
        "placement_constraints": [],
        "platform_version": "LATEST",
        "propagate_tags": "SERVICE",
        "scheduling_strategy": "REPLICA",
        "service_connect_configuration": [],
        "service_registries": [],
        "tags": {
         "ECS_Launch_Type": "Fargate",
         "Name": "tfc_agent-cloud-agents-service"
        },
        "tags_all": {
         "ECS_Launch_Type": "Fargate",
         "Name": "tfc_agent-cloud-agents-service"
        },
        "task_definition": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
        "timeouts": null,
        "triggers": {},
        "wait_for_steady_state": false
       }
      },
      {
       "address": "module.tfc-agent.aws_ecs_task_definition.agents",
       "mode": "managed",
       "name": "agents",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "ephemeral_storage": [],
        "inference_accelerator": [],
        "placement_constraints": [],
        "proxy_configuration": [],
        "requires_compatibilities": [
         false
        ],
        "runtime_platform": [],
        "tags": {},
        "tags_all": {},
        "volume": []
       },
       "type": "aws_ecs_task_definition",
       "values": {
        "arn": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
        "container_definitions": "[{\"cpu\":1024,\"environment\":[{\"name\":\"AGENT_LOG_LEVEL\",\"value\":\"info\"},{\"name\":\"TFC_ADDRESS\",\"value\":\"https://app.terraform.io\"},{\"name\":\"TFC_AGENT_NAME\",\"value\":\"ecs-agent\"},{\"name\":\"TFC_AGENT_TOKEN\",\"value\":\"qbSzJpcdS4bLKw.atlasv1.x7WCLcH0EHcaDZZ57uVhUf6ko8voPJYH9VlKeWJhF6MIkgGeIG6VZ4frDAHJNxUKGSM\"}],\"essential\":true,\"image\":\"hashicorp/tfc-agent:latest\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"tfc_agent-tfe-agents-ecs\",\"awslogs-region\":\"ap-southeast-2\",\"awslogs-stream-prefix\":\"tfc_agent\"}},\"memory\":2048,\"mountPoints\":[],\"name\":\"tfc-agent\",\"portMappings\":[],\"volumesFrom\":[]}]",
        "cpu": "1024",
        "ephemeral_storage": [],
        "execution_role_arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
        "family": "tfc_agent-cloud-agents-task",
        "id": "tfc_agent-cloud-agents-task",
        "inference_accelerator": [],
        "ipc_mode": "",
        "memory": "2048",
        "network_mode": "awsvpc",
        "pid_mode": "",
        "placement_constraints": [],
        "proxy_configuration": [],
        "requires_compatibilities": [
         "FARGATE"
        ],
        "revision": 4,
        "runtime_platform": [],
        "skip_destroy": false,
        "tags": {},
        "tags_all": {},
        "task_role_arn": "",
        "volume": []
       }
      },
      {
       "address": "module.tfc-agent.aws_iam_role.ecs_task_execution_role",
       "mode": "managed",
       "name": "ecs_task_execution_role",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [],
        "managed_policy_arns": [
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
        "create_date": "2023-03-26T20:54:05Z",
        "description": "",
        "force_detach_policies": false,
        "id": "ecsTaskExecutionRole",
        "inline_policy": [],
        "managed_policy_arns": [
         "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        ],
        "max_session_duration": 3600,
        "name": "ecsTaskExecutionRole",
        "name_prefix": "",
        "path": "/",
        "permissions_boundary": null,
        "tags": {},
        "tags_all": {},
        "unique_id": "AROA4OQ4C6ZSW244RC2RU"
       }
      },
      {
       "address": "module.tfc-agent.aws_iam_role_policy_attachment.ecs-task-execution-role-policy-attachment",
       "mode": "managed",
       "name": "ecs-task-execution-role-policy-attachment",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "ecsTaskExecutionRole-20230326205407106100000002",
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        "role": "ecsTaskExecutionRole"
       }
      },
      {
       "address": "module.tfc-agent.aws_security_group.agents",
       "mode": "managed",
       "name": "agents",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "ingress": [],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-00c74d72a200ff57b",
        "description": "Managed by Terraform",
        "egress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Allow HTTPS traffic egress.",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 443
         }
        ],
        "id": "sg-00c74d72a200ff57b",
        "ingress": [],
        "name": "tfc_agent-tfc-cloud-agents-sg",
        "name_prefix": "",
        "owner_id": "855831148133",
        "revoke_rules_on_delete": false,
        "tags": {
         "Name": "tfc_agent-tfc-cloud-agents-sg"
        },
        "tags_all": {
         "Name": "tfc_agent-tfc-cloud-agents-sg"
        },
        "timeouts": null,
        "vpc_id": "vpc-04f3e1e59d4facd4f"
       }
      },
      {
       "address": "module.tfc-agent.aws_security_group_rule.egress_https",
       "mode": "managed",
       "name": "egress_https",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ]
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Allow HTTPS traffic egress.",
        "from_port": 443,
        "id": "sgrule-2234879437",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": null,
        "protocol": "tcp",
        "security_group_id": "sg-00c74d72a200ff57b",
        "security_group_rule_id": "sgr-07e257c37d8ef346c",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      }
     ]
    }
   ],
   "resources": [
    {
     "address": "aws_route53_record.private_record_dev",
     "mode": "managed",
     "name": "private_record_dev",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "alias": [],
      "failover_routing_policy": [],
      "geolocation_routing_policy": [],
      "latency_routing_policy": [],
      "records": [
       false
      ],
      "weighted_routing_policy": []
     },
     "type": "aws_route53_record",
     "values": {
      "alias": [],
      "allow_overwrite": null,
      "failover_routing_policy": [],
      "fqdn": "dev.f5demo.com",
      "geolocation_routing_policy": [],
      "health_check_id": "",
      "id": "Z09308551HJD0H26SF41L_dev.f5demo.com_A",
      "latency_routing_policy": [],
      "multivalue_answer_routing_policy": false,
      "name": "dev.f5demo.com",
      "records": [
       "10.200.10.11"
      ],
      "set_identifier": "",
      "ttl": 300,
      "type": "A",
      "weighted_routing_policy": [],
      "zone_id": "Z09308551HJD0H26SF41L"
     }
    },
    {
     "address": "aws_route53_record.private_record_prod",
     "mode": "managed",
     "name": "private_record_prod",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 2,
     "sensitive_values": {
      "alias": [],
      "failover_routing_policy": [],
      "geolocation_routing_policy": [],
      "latency_routing_policy": [],
      "records": [
       false
      ],
      "weighted_routing_policy": []
     },
     "type": "aws_route53_record",
     "values": {
      "alias": [],
      "allow_overwrite": null,
      "failover_routing_policy": [],
      "fqdn": "prod.f5demo.com",
      "geolocation_routing_policy": [],
      "health_check_id": "",
      "id": "Z09308551HJD0H26SF41L_prod.f5demo.com_A",
      "latency_routing_policy": [],
      "multivalue_answer_routing_policy": false,
      "name": "prod.f5demo.com",
      "records": [
       "10.200.10.10"
      ],
      "set_identifier": "",
      "ttl": 300,
      "type": "A",
      "weighted_routing_policy": [],
      "zone_id": "Z09308551HJD0H26SF41L"
     }
    },
    {
     "address": "aws_route53_zone.private_zone",
     "mode": "managed",
     "name": "private_zone",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "name_servers": [
       false,
       false,
       false,
       false
      ],
      "tags": {},
      "tags_all": {},
      "vpc": [
       {}
      ]
     },
     "type": "aws_route53_zone",
     "values": {
      "arn": "arn:aws:route53:::hostedzone/Z09308551HJD0H26SF41L",
      "comment": "Managed by Terraform",
      "delegation_set_id": "",
      "force_destroy": false,
      "id": "Z09308551HJD0H26SF41L",
      "name": "f5demo.com",
      "name_servers": [
       "ns-0.awsdns-00.com.",
       "ns-1024.awsdns-00.org.",
       "ns-1536.awsdns-00.co.uk.",
       "ns-512.awsdns-00.net."
      ],
      "primary_name_server": "ns-0.awsdns-00.com.",
      "tags": {},
      "tags_all": {},
      "vpc": [
       {
        "vpc_id": "vpc-04f3e1e59d4facd4f",
        "vpc_region": "ap-southeast-2"
       }
      ],
      "zone_id": "Z09308551HJD0H26SF41L"
     }
    },
    {
     "address": "aws_ssm_association.example",
     "mode": "managed",
     "name": "example",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 1,
     "sensitive_values": {
      "output_location": [],
      "parameters": {},
      "targets": [
       {
        "values": [
         false
        ]
       }
      ]
     },
     "type": "aws_ssm_association",
     "values": {
      "apply_only_at_cron_interval": false,
      "arn": "arn:aws:ssm:ap-southeast-2:855831148133:association/1398c7c4-12ff-4e66-8d36-9009472b5832",
      "association_id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
      "association_name": "",
      "automation_target_parameter_name": "",
      "compliance_severity": "",
      "document_version": "$DEFAULT",
      "id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
      "instance_id": "",
      "max_concurrency": "",
      "max_errors": "",
      "name": "vault_script_document",
      "output_location": [],
      "parameters": {},
      "schedule_expression": "",
      "targets": [
       {
        "key": "InstanceIds",
        "values": [
         "i-0f7c3db42fc2275fb"
        ]
       }
      ],
      "wait_for_success_timeout_seconds": null
     }
    },
    {
     "address": "aws_ssm_document.run_script_document",
     "mode": "managed",
     "name": "run_script_document",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "attachments_source": [],
      "parameter": [],
      "permissions": {},
      "platform_types": [
       false,
       false
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_ssm_document",
     "values": {
      "arn": "arn:aws:ssm:ap-southeast-2:855831148133:document/vault_script_document",
      "attachments_source": [],
      "content": "---\nschemaVersion: \"2.2\"\ndescription: \"Install and configure Vault Agent\"\nmainSteps:\n  - action: \"aws:runShellScript\"\n    name: \"update\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - sudo DEBIAN_FRONTEND=noninteractive apt update\n      - sudo DEBIAN_FRONTEND=noninteractive apt install unzip\n      - sudo DEBIAN_FRONTEND=noninteractive apt install git\n      - cd /tmp\n      - sudo rm -rf vault_1.13.0_linux_amd64.zip\n      - sudo wget https://releases.hashicorp.com/vault/1.13.0/vault_1.13.0_linux_amd64.zip 2\u003e/dev/null\n      - sudo wget https://www.c-nergy.be/downloads/xRDP/xrdp-installer-1.4.6.zip\n  - action: \"aws:runShellScript\"\n    name: \"configure\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - cd /tmp\n      - sudo rm -rf /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo rm -rf usr/local/bin/vault\n      - sudo git clone https://github.com/hashicorp-demo-lab/vault-f5-pki-rotation-splunk 2\u003e/dev/null\n      - sudo unzip vault_1.13.0_linux_amd64.zip\n      - sudo mv vault /usr/local/bin/\n      - sudo mv /tmp/vault-f5-pki-rotation-splunk /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo echo \"# DO NOT DO THIS - DEMO ONLY\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo echo \"vault agent -config=/home/ubuntu/vault-f5-pki-rotation-splunk/vault_agent_config/\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo chmod u+x /tmp/startVaultAgent.sh\n      - echo \"done vault config update ec2\" \u003e\u003e /tmp/vault_config_log.txt\n  - action: \"aws:runShellScript\"\n    name: \"add_desktop\"\n    inputs:\n      timeoutSeconds: '900'\n      runCommand:\n      - echo \"starting desktop install\"\n      - sudo apt install ubuntu-gnome-desktop -y 2\u003e/dev/null\n\n\n",
      "created_date": "2023-03-26T20:54:04Z",
      "default_version": "1",
      "description": "Install and configure Vault Agent",
      "document_format": "YAML",
      "document_type": "Command",
      "document_version": "1",
      "hash": "b720bfc091f22b309e204d4c246e9ca30dcf32d6a21472173c22b6c293a1a74b",
      "hash_type": "Sha256",
      "id": "vault_script_document",
      "latest_version": "1",
      "name": "vault_script_document",
      "owner": "855831148133",
      "parameter": [],
      "permissions": {},
      "platform_types": [
       "Linux",
       "MacOS"
      ],
      "schema_version": "2.2",
      "status": "Active",
      "tags": {},
      "tags_all": {},
      "target_type": "",
      "version_name": ""
     }
    },
    {
     "address": "random_string.suffix",
     "mode": "managed",
     "name": "suffix",
     "provider_name": "registry.terraform.io/hashicorp/random",
     "schema_version": 2,
     "sensitive_values": {},
     "type": "random_string",
     "values": {
      "id": "iRUKQoeL",
      "keepers": null,
      "length": 8,
      "lower": true,
      "min_lower": 0,
      "min_numeric": 0,
      "min_special": 0,
      "min_upper": 0,
      "number": true,
      "numeric": true,
      "override_special": null,
      "result": "iRUKQoeL",
      "special": false,
      "upper": true
     }
    }
   ]
  }
 },
 "prior_state": {
  "format_version": "1.0",
  "terraform_version": "1.4.0",
  "values": {
   "outputs": {
    "aws_bastion_public_fqdn": {
     "sensitive": false,
     "type": "string",
     "value": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com"
    },
    "deployment_id": {
     "sensitive": false,
     "type": "string",
     "value": "hcp-vault-demo-irukqoel"
    },
    "f5_bigip_password": {
     "sensitive": false,
     "type": "string",
     "value": "8PsJ8liwNC8iduER"
    },
    "f5_mgmtPublicDNS": {
     "sensitive": false,
     "type": "string",
     "value": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com"
    },
    "f5_mgmtPublicIP": {
     "sensitive": false,
     "type": "string",
     "value": "54.66.229.110"
    },
    "f5_username": {
     "sensitive": false,
     "type": "string",
     "value": "bigipuser"
    },
    "hcp_vault_admin_token": {
     "sensitive": true,
     "type": "string",
     "value": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
    },
    "hcp_vault_public_fqdn": {
     "sensitive": false,
     "type": "string",
     "value": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200"
    }
   },
   "root_module": {
    "child_modules": [
     {
      "address": "module.bigip",
      "resources": [
       {
        "address": "module.bigip.data.aws_ami.f5_ami",
        "mode": "data",
        "name": "f5_ami",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "block_device_mappings": [
          {
           "ebs": {}
          }
         ],
         "filter": [
          {
           "values": [
            false
           ]
          }
         ],
         "owners": [
          false
         ],
         "product_codes": [
          {}
         ],
         "state_reason": {},
         "tags": {}
        },
        "type": "aws_ami",
        "values": {
         "architecture": "x86_64",
         "arn": "arn:aws:ec2:ap-southeast-2::image/ami-0f2fdc8c110c4904f",
         "block_device_mappings": [
          {
           "device_name": "/dev/xvda",
           "ebs": {
            "delete_on_termination": "true",
            "encrypted": "false",
            "iops": "0",
            "snapshot_id": "snap-0688e328b7883e4e9",
            "throughput": "0",
            "volume_size": "40",
            "volume_type": "gp2"
           },
           "no_device": "",
           "virtual_name": ""
          }
         ],
         "boot_mode": "",
         "creation_date": "2023-01-11T16:25:07.911Z",
         "deprecation_time": "2025-01-11T16:25:07.911Z",
         "description": "F5 BIGIP-16.1.3.3-0.0.3 PAYG-Good 25Mbps-221222141140",
         "ena_support": true,
         "executable_users": null,
         "filter": [
          {
           "name": "description",
           "values": [
            "F5 BIGIP-16.1.3.3* PAYG-Good 25Mbps*"
           ]
          }
         ],
         "hypervisor": "xen",
         "id": "ami-0f2fdc8c110c4904f",
         "image_id": "ami-0f2fdc8c110c4904f",
         "image_location": "aws-marketplace/F5 BIGIP-16.1.3.3-0.0.3 PAYG-Good 25Mbps-221222141140-8e1217d4-a046-4cdf-894e-e38175bae37f",
         "image_owner_alias": "aws-marketplace",
         "image_type": "machine",
         "imds_support": "",
         "include_deprecated": false,
         "kernel_id": "",
         "most_recent": true,
         "name": "F5 BIGIP-16.1.3.3-0.0.3 PAYG-Good 25Mbps-221222141140-8e1217d4-a046-4cdf-894e-e38175bae37f",
         "name_regex": null,
         "owner_id": "679593333241",
         "owners": [
          "aws-marketplace"
         ],
         "platform": "",
         "platform_details": "Linux/UNIX",
         "product_codes": [
          {
           "product_code_id": "8esk90vx7v713sa0muq2skw3j",
           "product_code_type": "marketplace"
          }
         ],
         "public": true,
         "ramdisk_id": "",
         "root_device_name": "/dev/xvda",
         "root_device_type": "ebs",
         "root_snapshot_id": "snap-0688e328b7883e4e9",
         "sriov_net_support": "simple",
         "state": "available",
         "state_reason": {
          "code": "UNSET",
          "message": "UNSET"
         },
         "tags": {},
         "timeouts": null,
         "tpm_support": "",
         "usage_operation": "RunInstances",
         "virtualization_type": "hvm"
        }
       },
       {
        "address": "module.bigip.aws_eip.mgmt[0]",
        "depends_on": [
         "module.bigip.aws_network_interface.mgmt",
         "module.bigip.aws_network_interface.mgmt1",
         "module.bigip.random_id.module_id",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "index": 0,
        "mode": "managed",
        "name": "mgmt",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_eip",
        "values": {
         "address": null,
         "allocation_id": "eipalloc-0ba1d06528025bc46",
         "associate_with_private_ip": null,
         "association_id": "eipassoc-07d36e668b605d991",
         "carrier_ip": "",
         "customer_owned_ip": "",
         "customer_owned_ipv4_pool": "",
         "domain": "vpc",
         "id": "eipalloc-0ba1d06528025bc46",
         "instance": "i-0406a65c863a0dc3b",
         "network_border_group": "ap-southeast-2",
         "network_interface": "eni-076bb769250ceb723",
         "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
         "private_ip": "10.200.10.225",
         "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
         "public_ip": "54.66.229.110",
         "public_ipv4_pool": "amazon",
         "tags": {
          "Name": "BIGIP-Managemt-PublicIp-0",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         },
         "tags_all": {
          "Name": "BIGIP-Managemt-PublicIp-0",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         },
         "timeouts": null,
         "vpc": true
        }
       },
       {
        "address": "module.bigip.aws_instance.f5_bigip",
        "depends_on": [
         "module.bigip.aws_eip.mgmt",
         "module.bigip.aws_network_interface.external_private",
         "module.bigip.aws_network_interface.external_private1",
         "module.bigip.aws_network_interface.mgmt",
         "module.bigip.aws_network_interface.mgmt1",
         "module.bigip.aws_network_interface.private",
         "module.bigip.aws_network_interface.private1",
         "module.bigip.aws_network_interface.public",
         "module.bigip.aws_network_interface.public1",
         "module.bigip.data.aws_ami.f5_ami",
         "module.bigip.data.aws_secretsmanager_secret.password",
         "module.bigip.data.aws_secretsmanager_secret_version.current",
         "module.bigip.random_id.module_id",
         "module.bigip.random_string.dynamic_password",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "f5_bigip",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "capacity_reservation_specification": [
          {
           "capacity_reservation_target": []
          }
         ],
         "credit_specification": [
          {}
         ],
         "ebs_block_device": [],
         "enclave_options": [
          {}
         ],
         "ephemeral_block_device": [],
         "ipv6_addresses": [],
         "launch_template": [],
         "maintenance_options": [
          {}
         ],
         "metadata_options": [
          {}
         ],
         "network_interface": [
          {}
         ],
         "private_dns_name_options": [
          {}
         ],
         "root_block_device": [
          {
           "tags": {}
          }
         ],
         "secondary_private_ips": [],
         "security_groups": [],
         "tags": {},
         "tags_all": {},
         "vpc_security_group_ids": [
          false
         ]
        },
        "type": "aws_instance",
        "values": {
         "ami": "ami-0f2fdc8c110c4904f",
         "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0406a65c863a0dc3b",
         "associate_public_ip_address": true,
         "availability_zone": "ap-southeast-2a",
         "capacity_reservation_specification": [
          {
           "capacity_reservation_preference": "open",
           "capacity_reservation_target": []
          }
         ],
         "cpu_core_count": 1,
         "cpu_threads_per_core": 2,
         "credit_specification": [
          {
           "cpu_credits": "unlimited"
          }
         ],
         "disable_api_stop": false,
         "disable_api_termination": false,
         "ebs_block_device": [],
         "ebs_optimized": false,
         "enclave_options": [
          {
           "enabled": false
          }
         ],
         "ephemeral_block_device": [],
         "get_password_data": false,
         "hibernation": false,
         "host_id": "",
         "host_resource_group_arn": null,
         "iam_instance_profile": "",
         "id": "i-0406a65c863a0dc3b",
         "instance_initiated_shutdown_behavior": "stop",
         "instance_state": "running",
         "instance_type": "t3.medium",
         "ipv6_address_count": 0,
         "ipv6_addresses": [],
         "key_name": "awsf5demo",
         "launch_template": [],
         "maintenance_options": [
          {
           "auto_recovery": "default"
          }
         ],
         "metadata_options": [
          {
           "http_endpoint": "enabled",
           "http_put_response_hop_limit": 1,
           "http_tokens": "optional",
           "instance_metadata_tags": "disabled"
          }
         ],
         "monitoring": false,
         "network_interface": [
          {
           "delete_on_termination": false,
           "device_index": 0,
           "network_card_index": 0,
           "network_interface_id": "eni-076bb769250ceb723"
          }
         ],
         "outpost_arn": "",
         "password_data": "",
         "placement_group": "",
         "placement_partition_number": 0,
         "primary_network_interface_id": "eni-076bb769250ceb723",
         "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
         "private_dns_name_options": [
          {
           "enable_resource_name_dns_a_record": false,
           "enable_resource_name_dns_aaaa_record": false,
           "hostname_type": "ip-name"
          }
         ],
         "private_ip": "10.200.10.225",
         "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
         "public_ip": "54.66.229.110",
         "root_block_device": [
          {
           "delete_on_termination": true,
           "device_name": "/dev/xvda",
           "encrypted": false,
           "iops": 120,
           "kms_key_id": "",
           "tags": {},
           "throughput": 0,
           "volume_id": "vol-073660a913a7e727b",
           "volume_size": 40,
           "volume_type": "gp2"
          }
         ],
         "secondary_private_ips": [],
         "security_groups": [],
         "source_dest_check": true,
         "subnet_id": "subnet-03475e20ee7be9fe2",
         "tags": {
          "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         },
         "tags_all": {
          "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         },
         "tenancy": "default",
         "timeouts": null,
         "user_data": "c46d56f3e5f3f3fbf7103eac71eed5bbf234d726",
         "user_data_base64": null,
         "user_data_replace_on_change": false,
         "volume_tags": null,
         "vpc_security_group_ids": [
          "sg-0d296ffafa864943d"
         ]
        }
       },
       {
        "address": "module.bigip.aws_network_interface.mgmt1[0]",
        "depends_on": [
         "module.bigip.random_id.module_id",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "index": 0,
        "mode": "managed",
        "name": "mgmt1",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "attachment": [
          {}
         ],
         "ipv4_prefixes": [],
         "ipv6_address_list": [],
         "ipv6_addresses": [],
         "ipv6_prefixes": [],
         "private_ip_list": [
          false
         ],
         "private_ips": [
          false
         ],
         "security_groups": [
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_network_interface",
        "values": {
         "arn": "arn:aws:ec2:ap-southeast-2:855831148133:network-interface/eni-076bb769250ceb723",
         "attachment": [
          {
           "attachment_id": "eni-attach-01973631deaed984e",
           "device_index": 0,
           "instance": "i-0406a65c863a0dc3b"
          }
         ],
         "description": "",
         "id": "eni-076bb769250ceb723",
         "interface_type": "interface",
         "ipv4_prefix_count": 0,
         "ipv4_prefixes": [],
         "ipv6_address_count": 0,
         "ipv6_address_list": [],
         "ipv6_address_list_enabled": false,
         "ipv6_addresses": [],
         "ipv6_prefix_count": 0,
         "ipv6_prefixes": [],
         "mac_address": "06:fb:13:8c:5f:12",
         "outpost_arn": "",
         "owner_id": "855831148133",
         "private_dns_name": "ip-10-200-10-225.ap-southeast-2.compute.internal",
         "private_ip": "10.200.10.225",
         "private_ip_list": [
          "10.200.10.225"
         ],
         "private_ip_list_enabled": false,
         "private_ips": [
          "10.200.10.225"
         ],
         "private_ips_count": 0,
         "security_groups": [
          "sg-0d296ffafa864943d"
         ],
         "source_dest_check": true,
         "subnet_id": "subnet-03475e20ee7be9fe2",
         "tags": {
          "Name": "BIGIP-Managemt-Interface-0",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         },
         "tags_all": {
          "Name": "BIGIP-Managemt-Interface-0",
          "Prefix": "bigip-aws-1nicnew-1ab8"
         }
        }
       },
       {
        "address": "module.bigip.random_id.module_id",
        "depends_on": [
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "module_id",
        "provider_name": "registry.terraform.io/hashicorp/random",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "random_id",
        "values": {
         "b64_std": "Grg=",
         "b64_url": "Grg",
         "byte_length": 2,
         "dec": "6840",
         "hex": "1ab8",
         "id": "Grg",
         "keepers": null,
         "prefix": null
        }
       },
       {
        "address": "module.bigip.random_string.dynamic_password",
        "depends_on": [
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "dynamic_password",
        "provider_name": "registry.terraform.io/hashicorp/random",
        "schema_version": 2,
        "sensitive_values": {},
        "type": "random_string",
        "values": {
         "id": "8PsJ8liwNC8iduER",
         "keepers": null,
         "length": 16,
         "lower": true,
         "min_lower": 1,
         "min_numeric": 1,
         "min_special": 0,
         "min_upper": 1,
         "number": true,
         "numeric": true,
         "override_special": null,
         "result": "8PsJ8liwNC8iduER",
         "special": false,
         "upper": true
        }
       },
       {
        "address": "module.bigip.time_sleep.wait_for_aws_instance_f5_bigip",
        "depends_on": [
         "module.bigip.aws_eip.mgmt",
         "module.bigip.aws_instance.f5_bigip",
         "module.bigip.aws_network_interface.external_private",
         "module.bigip.aws_network_interface.external_private1",
         "module.bigip.aws_network_interface.mgmt",
         "module.bigip.aws_network_interface.mgmt1",
         "module.bigip.aws_network_interface.private",
         "module.bigip.aws_network_interface.private1",
         "module.bigip.aws_network_interface.public",
         "module.bigip.aws_network_interface.public1",
         "module.bigip.data.aws_ami.f5_ami",
         "module.bigip.data.aws_secretsmanager_secret.password",
         "module.bigip.data.aws_secretsmanager_secret_version.current",
         "module.bigip.random_id.module_id",
         "module.bigip.random_string.dynamic_password",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "wait_for_aws_instance_f5_bigip",
        "provider_name": "registry.terraform.io/hashicorp/time",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "time_sleep",
        "values": {
         "create_duration": "600s",
         "destroy_duration": null,
         "id": "2023-03-26T21:04:41Z",
         "triggers": null
        }
       }
      ]
     },
     {
      "address": "module.hcp-hvn",
      "resources": [
       {
        "address": "module.hcp-hvn.hcp_aws_transit_gateway_attachment.tgw",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
         "module.infra-aws.module.tgw.aws_ram_resource_share.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "tgw",
        "provider_name": "registry.terraform.io/hashicorp/hcp",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "hcp_aws_transit_gateway_attachment",
        "values": {
         "created_at": "2023-03-26T20:55:13.000Z",
         "expires_at": "2023-04-02T20:55:13.000Z",
         "hvn_id": "hcp-vault-demo-irukqoel",
         "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
         "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
         "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
         "provider_transit_gateway_attachment_id": "tgw-attach-02becce94ec4cc5b8",
         "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
         "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
         "state": "ACTIVE",
         "timeouts": null,
         "transit_gateway_attachment_id": "hcp-vault-demo-irukqoel",
         "transit_gateway_id": "tgw-01099067ffc4b2e61"
        }
       },
       {
        "address": "module.hcp-hvn.hcp_hvn.hvn",
        "depends_on": [
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "hvn",
        "provider_name": "registry.terraform.io/hashicorp/hcp",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "hcp_hvn",
        "values": {
         "cidr_block": "172.25.16.0/20",
         "cloud_provider": "aws",
         "created_at": "2023-03-26T20:46:34.000Z",
         "hvn_id": "hcp-vault-demo-irukqoel",
         "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
         "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
         "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
         "provider_account_id": "298208748192",
         "region": "ap-southeast-2",
         "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
         "state": "STABLE",
         "timeouts": null
        }
       },
       {
        "address": "module.hcp-hvn.hcp_hvn_route.route",
        "depends_on": [
         "module.hcp-hvn.hcp_aws_transit_gateway_attachment.tgw",
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
         "module.infra-aws.module.tgw.aws_ram_resource_share.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "route",
        "provider_name": "registry.terraform.io/hashicorp/hcp",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "hcp_hvn_route",
        "values": {
         "created_at": "2023-03-26T20:55:22.000Z",
         "destination_cidr": "10.200.0.0/16",
         "hvn_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
         "hvn_route_id": "hcp-vault-demo-irukqoel",
         "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
         "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
         "state": "ACTIVE",
         "target_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
         "timeouts": null
        }
       }
      ]
     },
     {
      "address": "module.hcp-vault",
      "resources": [
       {
        "address": "module.hcp-vault.hcp_vault_cluster.vault",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "vault",
        "provider_name": "registry.terraform.io/hashicorp/hcp",
        "schema_version": 0,
        "sensitive_values": {
         "audit_log_config": [],
         "major_version_upgrade_config": [
          {}
         ],
         "metrics_config": []
        },
        "type": "hcp_vault_cluster",
        "values": {
         "audit_log_config": [],
         "cloud_provider": "aws",
         "cluster_id": "hcp-vault-demo",
         "created_at": "2023-03-26T20:47:43.478Z",
         "hvn_id": "hcp-vault-demo-irukqoel",
         "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
         "major_version_upgrade_config": [
          {
           "maintenance_window_day": "",
           "maintenance_window_time": "",
           "upgrade_type": "AUTOMATIC"
          }
         ],
         "metrics_config": [],
         "min_vault_version": null,
         "namespace": "admin",
         "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
         "paths_filter": null,
         "primary_link": null,
         "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
         "public_endpoint": true,
         "region": "ap-southeast-2",
         "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
         "state": "RUNNING",
         "tier": "DEV",
         "timeouts": null,
         "vault_private_endpoint_url": "https://hcp-vault-demo-private-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
         "vault_public_endpoint_url": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
         "vault_version": "v1.12.3"
        }
       },
       {
        "address": "module.hcp-vault.hcp_vault_cluster_admin_token.token",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "token",
        "provider_name": "registry.terraform.io/hashicorp/hcp",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "hcp_vault_cluster_admin_token",
        "values": {
         "cluster_id": "hcp-vault-demo",
         "created_at": "2023-03-27T07:53:36+11:00",
         "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo/token",
         "timeouts": null,
         "token": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
        }
       }
      ]
     },
     {
      "address": "module.hcp-vault-config",
      "resources": [
       {
        "address": "module.hcp-vault-config.data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "855831148133",
         "arn": "arn:aws:sts::855831148133:assumed-role/aws_simon.lynch_test-developer/simon.lynch@hashicorp.com",
         "id": "855831148133",
         "user_id": "AROA4OQ4C6ZS66EBBSGZD:simon.lynch@hashicorp.com"
        }
       },
       {
        "address": "module.hcp-vault-config.data.aws_iam_policy.demo_user_permissions_boundary",
        "mode": "data",
        "name": "demo_user_permissions_boundary",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {}
        },
        "type": "aws_iam_policy",
        "values": {
         "arn": "arn:aws:iam::855831148133:policy/DemoUser",
         "description": "Policy for Boundary and Vault IAM Demo Users",
         "id": "arn:aws:iam::855831148133:policy/DemoUser",
         "name": "DemoUser",
         "path": "/",
         "path_prefix": null,
         "policy": "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Sid\": \"DemoUserPermissions\", \"Effect\": \"Allow\", \"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeRegions\", \"iam:GetInstanceProfile\", \"iam:GetRole\", \"iam:GetUser\", \"iam:ListRoles\"], \"Resource\": \"*\"}, {\"Sid\": \"DemoAssumedRoleCredentialType\", \"Effect\": \"Allow\", \"Action\": [\"sts:AssumeRole\"], \"Resource\": \"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\"}, {\"Sid\": \"DemoUserFederationCredentialType\", \"Effect\": \"Allow\", \"Action\": [\"sts:GetFederationToken\"], \"Resource\": \"arn:aws:sts::855831148133:federated-user/${aws:username}*\"}, {\"Sid\": \"CreateChildUser\", \"Effect\": \"Allow\", \"Action\": [\"iam:CreateUser\"], \"Resource\": \"arn:aws:iam::855831148133:user/${aws:username}*\", \"Condition\": {\"StringEquals\": {\"iam:PermissionsBoundary\": \"arn:aws:iam::855831148133:policy/DemoUser\"}}}, {\"Sid\": \"ManageAndDeleteChildren\", \"Effect\": \"Allow\", \"Action\": [\"iam:DeleteUser\", \"iam:DeleteUserPolicy\", \"iam:PutUserPolicy\", \"iam:TagUser\", \"iam:UntagUser\"], \"Resource\": \"arn:aws:iam::855831148133:user/${aws:username}*\"}, {\"Sid\": \"ManageSelfAndChildren\", \"Effect\": \"Allow\", \"Action\": [\"iam:CreateAccessKey\", \"iam:DeleteAccessKey\", \"iam:GetAccessKeyLastUsed\", \"iam:GetUser\", \"iam:GetUserPolicy\", \"iam:List*\", \"iam:UpdateAccessKey\"], \"Resource\": \"arn:aws:iam::855831148133:user/${aws:username}*\"}, {\"Sid\": \"ExplicitDenyAll\", \"Effect\": \"Deny\", \"Resource\": \"*\", \"NotAction\": [\"ec2:DescribeRegions\", \"ec2:DescribeInstances\", \"iam:CreateAccessKey\", \"iam:CreateUser\", \"iam:DeleteAccessKey\", \"iam:DeleteUser\", \"iam:DeleteUserPolicy\", \"iam:GetAccessKeyLastUsed\", \"iam:GetInstanceProfile\", \"iam:GetRole\", \"iam:GetUser\", \"iam:GetUserPolicy\", \"iam:List*\", \"iam:PutUserPolicy\", \"iam:TagUser\", \"iam:UntagUser\", \"iam:UpdateAccessKey\", \"sts:AssumeRole\", \"sts:GetFederationToken\"]}, {\"Sid\": \"ExplicitDenyAssumeRole\", \"Effect\": \"Deny\", \"NotResource\": \"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\", \"Action\": \"sts:AssumeRole\"}]}",
         "policy_id": "ANPA4OQ4C6ZS47XUHW63I",
         "tags": {
          "hc-config-as-code": "honeybee",
          "hc-owner-dl": "team-secops@hashicorp.com"
         }
        }
       },
       {
        "address": "module.hcp-vault-config.data.aws_region.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_region",
        "values": {
         "description": "Asia Pacific (Sydney)",
         "endpoint": "ec2.ap-southeast-2.amazonaws.com",
         "id": "ap-southeast-2",
         "name": "ap-southeast-2"
        }
       },
       {
        "address": "module.hcp-vault-config.aws_iam_access_key.vault_mount_user",
        "depends_on": [
         "module.hcp-vault-config.aws_iam_user.vault_mount_user",
         "module.hcp-vault-config.data.aws_caller_identity.current",
         "module.hcp-vault-config.data.aws_iam_policy.demo_user_permissions_boundary"
        ],
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_access_key",
        "values": {
         "create_date": "2023-03-26T20:54:06Z",
         "encrypted_secret": null,
         "encrypted_ses_smtp_password_v4": null,
         "id": "AKIA4OQ4C6ZS5G4DPCN4",
         "key_fingerprint": null,
         "pgp_key": null,
         "secret": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
         "ses_smtp_password_v4": "BOisMmY8FGpDaEG4maVtvDhs2AzkFt/SAj5us5NAz6s/",
         "status": "Active",
         "user": "demo-simon.lynch@hashicorp.com"
        }
       },
       {
        "address": "module.hcp-vault-config.aws_iam_user.vault_mount_user",
        "depends_on": [
         "module.hcp-vault-config.data.aws_caller_identity.current",
         "module.hcp-vault-config.data.aws_iam_policy.demo_user_permissions_boundary"
        ],
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_user",
        "values": {
         "arn": "arn:aws:iam::855831148133:user/demo-simon.lynch@hashicorp.com",
         "force_destroy": true,
         "id": "demo-simon.lynch@hashicorp.com",
         "name": "demo-simon.lynch@hashicorp.com",
         "path": "/",
         "permissions_boundary": "arn:aws:iam::855831148133:policy/DemoUser",
         "tags": {},
         "tags_all": {},
         "unique_id": "AIDA4OQ4C6ZS32HZGE3SW"
        }
       },
       {
        "address": "module.hcp-vault-config.aws_iam_user_policy.vault_mount_user",
        "depends_on": [
         "module.hcp-vault-config.aws_iam_user.vault_mount_user",
         "module.hcp-vault-config.data.aws_caller_identity.current",
         "module.hcp-vault-config.data.aws_iam_policy.demo_user_permissions_boundary"
        ],
        "mode": "managed",
        "name": "vault_mount_user",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_user_policy",
        "values": {
         "id": "demo-simon.lynch@hashicorp.com:DemoUserInlinePolicy",
         "name": "DemoUserInlinePolicy",
         "name_prefix": null,
         "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"ec2:DescribeInstances\",\"ec2:DescribeRegions\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:ListRoles\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"DemoUserPermissions\"},{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"DemoAssumedRoleCredentialType\"},{\"Action\":[\"sts:GetFederationToken\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sts::855831148133:federated-user/${aws:username}*\",\"Sid\":\"DemoUserFederationCredentialType\"},{\"Action\":[\"iam:CreateUser\"],\"Condition\":{\"StringEquals\":{\"iam:PermissionsBoundary\":\"arn:aws:iam::855831148133:policy/DemoUser\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"CreateChildUser\"},{\"Action\":[\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageAndDeleteChildren\"},{\"Action\":[\"iam:CreateAccessKey\",\"iam:DeleteAccessKey\",\"iam:GetAccessKeyLastUsed\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:UpdateAccessKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageSelfAndChildren\"},{\"Effect\":\"Deny\",\"NotAction\":[\"ec2:DescribeRegions\",\"ec2:DescribeInstances\",\"iam:CreateAccessKey\",\"iam:CreateUser\",\"iam:DeleteAccessKey\",\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:GetAccessKeyLastUsed\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\",\"iam:UpdateAccessKey\",\"sts:AssumeRole\",\"sts:GetFederationToken\"],\"Resource\":\"*\",\"Sid\":\"ExplicitDenyAll\"},{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Deny\",\"NotResource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"ExplicitDenyAssumeRole\"}]}",
         "user": "demo-simon.lynch@hashicorp.com"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_auth_backend.vault_aws_auth",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "vault_aws_auth",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 1,
        "sensitive_values": {
         "tune": []
        },
        "type": "vault_auth_backend",
        "values": {
         "accessor": "auth_aws_b2a59c73",
         "description": "",
         "disable_remount": false,
         "id": "aws",
         "local": false,
         "namespace": null,
         "path": "aws",
         "tune": [],
         "type": "aws"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_aws_auth_backend_client.vault_aws_client",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.aws_iam_access_key.vault_mount_user",
         "module.hcp-vault-config.aws_iam_user.vault_mount_user",
         "module.hcp-vault-config.data.aws_caller_identity.current",
         "module.hcp-vault-config.data.aws_iam_policy.demo_user_permissions_boundary",
         "module.hcp-vault-config.vault_auth_backend.vault_aws_auth",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "vault_aws_client",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "secret_key": true
        },
        "type": "vault_aws_auth_backend_client",
        "values": {
         "access_key": "AKIA4OQ4C6ZS5G4DPCN4",
         "backend": "aws",
         "ec2_endpoint": "",
         "iam_endpoint": "",
         "iam_server_id_header_value": "",
         "id": "auth/aws/config/client",
         "namespace": null,
         "secret_key": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
         "sts_endpoint": "",
         "sts_region": ""
        }
       },
       {
        "address": "module.hcp-vault-config.vault_aws_auth_backend_role.vault_ec2_auth_role",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_auth_backend.vault_aws_auth",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
         "module.infra-aws.aws_iam_role.ssm_role",
         "module.infra-aws.aws_instance.bastion",
         "module.infra-aws.aws_key_pair.main",
         "module.infra-aws.data.aws_ami.ubuntu20",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "vault_ec2_auth_role",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "bound_account_ids": [],
         "bound_ami_ids": [
          false
         ],
         "bound_ec2_instance_ids": [],
         "bound_iam_instance_profile_arns": [],
         "bound_iam_principal_arns": [],
         "bound_iam_role_arns": [],
         "bound_regions": [],
         "bound_subnet_ids": [],
         "bound_vpc_ids": [],
         "token_bound_cidrs": [],
         "token_policies": [
          false
         ]
        },
        "type": "vault_aws_auth_backend_role",
        "values": {
         "allow_instance_migration": false,
         "auth_type": "ec2",
         "backend": "aws",
         "bound_account_ids": [],
         "bound_ami_ids": [
          "ami-05f998315cca9bfe3"
         ],
         "bound_ec2_instance_ids": [],
         "bound_iam_instance_profile_arns": [],
         "bound_iam_principal_arns": [],
         "bound_iam_role_arns": [],
         "bound_regions": [],
         "bound_subnet_ids": [],
         "bound_vpc_ids": [],
         "disallow_reauthentication": false,
         "id": "auth/aws/role/f5-device-role",
         "inferred_aws_region": "",
         "inferred_entity_type": "",
         "namespace": null,
         "resolve_aws_unique_ids": true,
         "role": "f5-device-role",
         "role_id": "71e4bc43-2ad0-4401-243e-7b4258cd89a9",
         "role_tag": "",
         "token_bound_cidrs": [],
         "token_explicit_max_ttl": 0,
         "token_max_ttl": 120,
         "token_no_default_policy": false,
         "token_num_uses": 0,
         "token_period": 0,
         "token_policies": [
          "cert-policy"
         ],
         "token_ttl": 60,
         "token_type": "default"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_kv_secret_v2.f5",
        "depends_on": [
         "module.bigip.random_string.dynamic_password",
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.kvv2",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "f5",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "custom_metadata": [
          {
           "data": {}
          }
         ],
         "data": {},
         "data_json": true,
         "metadata": {}
        },
        "type": "vault_kv_secret_v2",
        "values": {
         "cas": null,
         "custom_metadata": [
          {
           "cas_required": false,
           "data": {},
           "delete_version_after": 0,
           "max_versions": 0
          }
         ],
         "data": {
          "f5admin": "bigipuser",
          "f5password": "8PsJ8liwNC8iduER"
         },
         "data_json": "{\"f5admin\":\"bigipuser\",\"f5password\":\"8PsJ8liwNC8iduER\"}",
         "delete_all_versions": false,
         "disable_read": false,
         "id": "network/data/f5admin",
         "metadata": {
          "created_time": "2023-03-26T20:54:26.890357196Z",
          "custom_metadata": "null",
          "deletion_time": "",
          "destroyed": "false",
          "version": "1"
         },
         "mount": "network",
         "name": "f5admin",
         "namespace": null,
         "options": null,
         "path": "network/data/f5admin"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_mount.kvv2",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "kvv2",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "options": {}
        },
        "type": "vault_mount",
        "values": {
         "accessor": "kv_61e304d2",
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "default_lease_ttl_seconds": 0,
         "description": "KV Version 2 secret engine mount",
         "external_entropy_access": false,
         "id": "network",
         "local": false,
         "max_lease_ttl_seconds": 0,
         "namespace": null,
         "options": {
          "version": "2"
         },
         "path": "network",
         "seal_wrap": false,
         "type": "kv"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_mount.pki_intermediate",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "pki_intermediate",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "options": {}
        },
        "type": "vault_mount",
        "values": {
         "accessor": "pki_c56565d3",
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "default_lease_ttl_seconds": 2678400,
         "description": "",
         "external_entropy_access": false,
         "id": "pki_intermediate",
         "local": false,
         "max_lease_ttl_seconds": 160704000,
         "namespace": null,
         "options": {},
         "path": "pki_intermediate",
         "seal_wrap": false,
         "type": "pki"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_mount.pki_root",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "pki_root",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "options": {}
        },
        "type": "vault_mount",
        "values": {
         "accessor": "pki_79cdd510",
         "allowed_managed_keys": [],
         "audit_non_hmac_request_keys": [],
         "audit_non_hmac_response_keys": [],
         "default_lease_ttl_seconds": 34819200,
         "description": "",
         "external_entropy_access": false,
         "id": "pki_root",
         "local": false,
         "max_lease_ttl_seconds": 160704000,
         "namespace": null,
         "options": {},
         "path": "pki_root",
         "seal_wrap": false,
         "type": "pki"
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "config_urls",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "crl_distribution_points": [
          true
         ],
         "issuing_certificates": [
          true
         ],
         "ocsp_servers": []
        },
        "type": "vault_pki_secret_backend_config_urls",
        "values": {
         "backend": "pki_root",
         "crl_distribution_points": [
          "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/crl"
         ],
         "id": "pki_root/config/urls",
         "issuing_certificates": [
          "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/ca"
         ],
         "namespace": null,
         "ocsp_servers": []
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls_int",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "config_urls_int",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "crl_distribution_points": [
          true
         ],
         "issuing_certificates": [
          true
         ],
         "ocsp_servers": []
        },
        "type": "vault_pki_secret_backend_config_urls",
        "values": {
         "backend": "pki_intermediate",
         "crl_distribution_points": [
          "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/crl"
         ],
         "id": "pki_intermediate/config/urls",
         "issuing_certificates": [
          "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/ca"
         ],
         "namespace": null,
         "ocsp_servers": []
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_cert_request.intermediate",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "intermediate",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "vault_pki_secret_backend_intermediate_cert_request",
        "values": {
         "add_basic_constraints": false,
         "alt_names": null,
         "backend": "pki_intermediate",
         "common_name": "ca.acme.hashicorp.demo",
         "country": null,
         "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
         "exclude_cn_from_sans": null,
         "format": "pem",
         "id": "pki_intermediate/intermediate/generate/internal",
         "ip_sans": null,
         "key_bits": 2048,
         "key_type": "rsa",
         "locality": null,
         "managed_key_id": null,
         "managed_key_name": null,
         "namespace": null,
         "organization": null,
         "other_sans": null,
         "ou": null,
         "postal_code": null,
         "private_key": null,
         "private_key_format": "der",
         "private_key_type": null,
         "province": null,
         "street_address": null,
         "type": "internal",
         "uri_sans": null
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_set_signed.intermediate",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls_int",
         "module.hcp-vault-config.vault_pki_secret_backend_intermediate_cert_request.intermediate",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault-config.vault_pki_secret_backend_root_sign_intermediate.root",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "intermediate",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "vault_pki_secret_backend_intermediate_set_signed",
        "values": {
         "backend": "pki_intermediate",
         "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
         "id": "pki_intermediate/intermediate/set-signed",
         "namespace": null
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_role.role",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "role",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "allowed_domains": [
          false
         ],
         "allowed_other_sans": [],
         "allowed_serial_numbers": [],
         "allowed_uri_sans": [],
         "country": [],
         "ext_key_usage": [],
         "key_usage": [
          false,
          false,
          false
         ],
         "locality": [],
         "organization": [],
         "ou": [],
         "policy_identifier": [],
         "postal_code": [],
         "province": [],
         "street_address": []
        },
        "type": "vault_pki_secret_backend_role",
        "values": {
         "allow_any_name": false,
         "allow_bare_domains": false,
         "allow_glob_domains": false,
         "allow_ip_sans": true,
         "allow_localhost": true,
         "allow_subdomains": true,
         "allowed_domains": [
          "f5demo.com"
         ],
         "allowed_domains_template": false,
         "allowed_other_sans": [],
         "allowed_serial_numbers": [],
         "allowed_uri_sans": [],
         "backend": "pki_intermediate",
         "basic_constraints_valid_for_non_ca": false,
         "client_flag": true,
         "code_signing_flag": false,
         "country": [],
         "email_protection_flag": false,
         "enforce_hostnames": true,
         "ext_key_usage": [],
         "generate_lease": false,
         "id": "pki_intermediate/roles/f5demo",
         "key_bits": 4096,
         "key_type": "rsa",
         "key_usage": [
          "DigitalSignature",
          "KeyAgreement",
          "KeyEncipherment"
         ],
         "locality": [],
         "max_ttl": "0",
         "name": "f5demo",
         "namespace": null,
         "no_store": false,
         "not_before_duration": "0s",
         "organization": [],
         "ou": [],
         "policy_identifier": [],
         "policy_identifiers": null,
         "postal_code": [],
         "province": [],
         "require_cn": true,
         "server_flag": true,
         "street_address": [],
         "ttl": "600",
         "use_csr_common_name": true,
         "use_csr_sans": true
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_role.vault-self",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "vault-self",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {
         "allowed_domains": [],
         "allowed_other_sans": [],
         "allowed_serial_numbers": [],
         "allowed_uri_sans": [],
         "country": [],
         "ext_key_usage": [],
         "key_usage": [
          false,
          false,
          false
         ],
         "locality": [],
         "organization": [],
         "ou": [],
         "policy_identifier": [],
         "postal_code": [],
         "province": [],
         "street_address": []
        },
        "type": "vault_pki_secret_backend_role",
        "values": {
         "allow_any_name": true,
         "allow_bare_domains": false,
         "allow_glob_domains": false,
         "allow_ip_sans": true,
         "allow_localhost": true,
         "allow_subdomains": false,
         "allowed_domains": [],
         "allowed_domains_template": false,
         "allowed_other_sans": [],
         "allowed_serial_numbers": [],
         "allowed_uri_sans": [],
         "backend": "pki_intermediate",
         "basic_constraints_valid_for_non_ca": false,
         "client_flag": true,
         "code_signing_flag": false,
         "country": [],
         "email_protection_flag": false,
         "enforce_hostnames": true,
         "ext_key_usage": [],
         "generate_lease": false,
         "id": "pki_intermediate/roles/vault-self",
         "key_bits": 2048,
         "key_type": "rsa",
         "key_usage": [
          "DigitalSignature",
          "KeyAgreement",
          "KeyEncipherment"
         ],
         "locality": [],
         "max_ttl": "0",
         "name": "vault-self",
         "namespace": null,
         "no_store": false,
         "not_before_duration": "0s",
         "organization": [],
         "ou": [],
         "policy_identifier": [],
         "policy_identifiers": null,
         "postal_code": [],
         "province": [],
         "require_cn": true,
         "server_flag": true,
         "street_address": [],
         "ttl": "94608000",
         "use_csr_common_name": true,
         "use_csr_sans": true
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "self-signing-cert",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 1,
        "sensitive_values": {},
        "type": "vault_pki_secret_backend_root_cert",
        "values": {
         "alt_names": null,
         "backend": "pki_root",
         "certificate": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
         "common_name": "Root CA",
         "country": null,
         "exclude_cn_from_sans": true,
         "format": "pem",
         "id": "pki_root/root/generate/internal",
         "ip_sans": null,
         "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
         "key_bits": 4096,
         "key_type": "rsa",
         "locality": null,
         "managed_key_id": null,
         "managed_key_name": null,
         "max_path_length": -1,
         "namespace": null,
         "organization": "acme Demo Org",
         "other_sans": null,
         "ou": "acme Orgnisation Unit",
         "permitted_dns_domains": null,
         "postal_code": null,
         "private_key_format": "der",
         "province": null,
         "serial": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
         "serial_number": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
         "street_address": null,
         "ttl": "160704000",
         "type": "internal",
         "uri_sans": null
        }
       },
       {
        "address": "module.hcp-vault-config.vault_pki_secret_backend_root_sign_intermediate.root",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault-config.vault_mount.pki_intermediate",
         "module.hcp-vault-config.vault_mount.pki_root",
         "module.hcp-vault-config.vault_pki_secret_backend_intermediate_cert_request.intermediate",
         "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "root",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 2,
        "sensitive_values": {
         "ca_chain": [
          false,
          false
         ]
        },
        "type": "vault_pki_secret_backend_root_sign_intermediate",
        "values": {
         "alt_names": null,
         "backend": "pki_root",
         "ca_chain": [
          "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
          "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----"
         ],
         "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
         "certificate_bundle": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
         "common_name": "ca.acme.hashicorp.demo",
         "country": null,
         "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
         "exclude_cn_from_sans": true,
         "format": "pem",
         "id": "pki_root/ca.acme.hashicorp.demo",
         "ip_sans": null,
         "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
         "locality": null,
         "max_path_length": -1,
         "namespace": null,
         "organization": "acme Demo Org",
         "other_sans": null,
         "ou": "acme Orgnisation Unit",
         "permitted_dns_domains": null,
         "postal_code": null,
         "province": null,
         "revoke": false,
         "serial": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
         "serial_number": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
         "street_address": null,
         "ttl": "160704000",
         "uri_sans": null,
         "use_csr_values": false
        }
       },
       {
        "address": "module.hcp-vault-config.vault_policy.example",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.hcp-vault.hcp_vault_cluster.vault",
         "module.hcp-vault.hcp_vault_cluster_admin_token.token",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "example",
        "provider_name": "registry.terraform.io/hashicorp/vault",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "vault_policy",
        "values": {
         "id": "cert-policy",
         "name": "cert-policy",
         "namespace": null,
         "policy": "# Permits token creation\npath \"auth/token/create\" {\n  capabilities = [\"update\"]\n}\n\n# Permits token renew\npath \"auth/token/renew\" {\n  capabilities = [\"update\"]\n}\n\n# Read-only permission on secret/\npath \"secret/data/*\" {\n  capabilities = [\"read\"]\n}\n\n# Enable secrets engine\npath \"sys/mounts/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n# List enabled secrets engine\npath \"sys/mounts\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n# Work with pki secrets engine\npath \"pki*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\" ]\n}\n\n# read network secrets \npath \"network/data/*\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n"
        }
       }
      ]
     },
     {
      "address": "module.infra-aws",
      "child_modules": [
       {
        "address": "module.infra-aws.module.sg-mgmt",
        "resources": [
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]",
          "depends_on": [
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this_name_prefix",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "egress": [
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [
              false
             ],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [
              false
             ],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [
              false
             ],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [
              false
             ],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [
              false
             ],
             "prefix_list_ids": [],
             "security_groups": []
            }
           ],
           "ingress": [
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "security_groups": []
            },
            {
             "cidr_blocks": [
              false
             ],
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "security_groups": []
            }
           ],
           "tags": {},
           "tags_all": {},
           "timeouts": {}
          },
          "type": "aws_security_group",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-0d296ffafa864943d",
           "description": "Security Group managed by Terraform",
           "egress": [
            {
             "cidr_blocks": [
              "0.0.0.0/0"
             ],
             "description": "HTTP",
             "from_port": 80,
             "ipv6_cidr_blocks": [
              "::/0"
             ],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 80
            },
            {
             "cidr_blocks": [
              "0.0.0.0/0"
             ],
             "description": "HTTPS",
             "from_port": 443,
             "ipv6_cidr_blocks": [
              "::/0"
             ],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 443
            },
            {
             "cidr_blocks": [
              "0.0.0.0/0"
             ],
             "description": "HTTPS",
             "from_port": 8443,
             "ipv6_cidr_blocks": [
              "::/0"
             ],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 8443
            },
            {
             "cidr_blocks": [
              "0.0.0.0/0"
             ],
             "description": "SSH",
             "from_port": 22,
             "ipv6_cidr_blocks": [
              "::/0"
             ],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 22
            },
            {
             "cidr_blocks": [
              "0.0.0.0/0"
             ],
             "description": "Vault",
             "from_port": 8200,
             "ipv6_cidr_blocks": [
              "::/0"
             ],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 8200
            }
           ],
           "id": "sg-0d296ffafa864943d",
           "ingress": [
            {
             "cidr_blocks": [
              "202.137.173.136/32"
             ],
             "description": "HTTP",
             "from_port": 80,
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 80
            },
            {
             "cidr_blocks": [
              "202.137.173.136/32"
             ],
             "description": "HTTPS",
             "from_port": 443,
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 443
            },
            {
             "cidr_blocks": [
              "202.137.173.136/32"
             ],
             "description": "HTTPS",
             "from_port": 8443,
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 8443
            },
            {
             "cidr_blocks": [
              "202.137.173.136/32"
             ],
             "description": "Remote Desktop",
             "from_port": 3389,
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 3389
            },
            {
             "cidr_blocks": [
              "202.137.173.136/32"
             ],
             "description": "SSH",
             "from_port": 22,
             "ipv6_cidr_blocks": [],
             "prefix_list_ids": [],
             "protocol": "tcp",
             "security_groups": [],
             "self": false,
             "to_port": 22
            }
           ],
           "name": "hcp-vault-demo-irukqoel-all-20230326205416578300000005",
           "name_prefix": "hcp-vault-demo-irukqoel-all-",
           "owner_id": "855831148133",
           "revoke_rules_on_delete": false,
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-all"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-all"
           },
           "timeouts": {
            "create": "10m",
            "delete": "15m"
           },
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[0]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "egress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [
            false
           ],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Vault",
           "from_port": 8200,
           "id": "sgrule-1683148569",
           "ipv6_cidr_blocks": [
            "::/0"
           ],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 8200,
           "type": "egress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[1]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "egress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [
            false
           ],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "HTTP",
           "from_port": 80,
           "id": "sgrule-3812331524",
           "ipv6_cidr_blocks": [
            "::/0"
           ],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 80,
           "type": "egress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[2]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "egress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [
            false
           ],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "HTTPS",
           "from_port": 443,
           "id": "sgrule-2309250818",
           "ipv6_cidr_blocks": [
            "::/0"
           ],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 443,
           "type": "egress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[3]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 3,
          "mode": "managed",
          "name": "egress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [
            false
           ],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "SSH",
           "from_port": 22,
           "id": "sgrule-1318974775",
           "ipv6_cidr_blocks": [
            "::/0"
           ],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 22,
           "type": "egress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[4]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 4,
          "mode": "managed",
          "name": "egress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [
            false
           ],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "HTTPS",
           "from_port": 8443,
           "id": "sgrule-3177803617",
           "ipv6_cidr_blocks": [
            "::/0"
           ],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 8443,
           "type": "egress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[0]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "ingress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "202.137.173.136/32"
           ],
           "description": "Remote Desktop",
           "from_port": 3389,
           "id": "sgrule-2117798333",
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "sgr-09da38a52bdbb7990",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 3389,
           "type": "ingress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[1]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "ingress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "202.137.173.136/32"
           ],
           "description": "HTTP",
           "from_port": 80,
           "id": "sgrule-2047611276",
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "sgr-08af38cfb3413baba",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 80,
           "type": "ingress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[2]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "ingress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "202.137.173.136/32"
           ],
           "description": "HTTPS",
           "from_port": 443,
           "id": "sgrule-2990499484",
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "sgr-0a9510e232478b71a",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 443,
           "type": "ingress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[3]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 3,
          "mode": "managed",
          "name": "ingress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "202.137.173.136/32"
           ],
           "description": "SSH",
           "from_port": 22,
           "id": "sgrule-1445541789",
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "sgr-0d5cf1142b30dbc14",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 22,
           "type": "ingress"
          }
         },
         {
          "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[4]",
          "depends_on": [
           "module.infra-aws.module.sg-mgmt.aws_security_group.this",
           "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "random_string.suffix"
          ],
          "index": 4,
          "mode": "managed",
          "name": "ingress_rules",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "sensitive_values": {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": []
          },
          "type": "aws_security_group_rule",
          "values": {
           "cidr_blocks": [
            "202.137.173.136/32"
           ],
           "description": "HTTPS",
           "from_port": 8443,
           "id": "sgrule-3202049348",
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_group_id": "sg-0d296ffafa864943d",
           "security_group_rule_id": "sgr-0c07fcf1b1be7a925",
           "self": false,
           "source_security_group_id": null,
           "timeouts": null,
           "to_port": 8443,
           "type": "ingress"
          }
         }
        ]
       },
       {
        "address": "module.infra-aws.module.tgw",
        "resources": [
         {
          "address": "module.infra-aws.module.tgw.aws_ec2_tag.this[\"Name\"]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
           "random_string.suffix"
          ],
          "index": "Name",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_ec2_tag",
          "values": {
           "id": "tgw-rtb-054fc4149f428c395,Name",
           "key": "Name",
           "resource_id": "tgw-rtb-054fc4149f428c395",
           "value": "hcp-vault-demo-irukqoel"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {},
           "timeouts": {},
           "transit_gateway_cidr_blocks": []
          },
          "type": "aws_ec2_transit_gateway",
          "values": {
           "amazon_side_asn": 64512,
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
           "association_default_route_table_id": "tgw-rtb-054fc4149f428c395",
           "auto_accept_shared_attachments": "enable",
           "default_route_table_association": "enable",
           "default_route_table_propagation": "enable",
           "description": "hcp-vault-demo-irukqoel",
           "dns_support": "enable",
           "id": "tgw-01099067ffc4b2e61",
           "multicast_support": "disable",
           "owner_id": "855831148133",
           "propagation_default_route_table_id": "tgw-rtb-054fc4149f428c395",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "timeouts": {
            "create": null,
            "delete": null,
            "update": null
           },
           "transit_gateway_cidr_blocks": [],
           "vpn_ecmp_support": "enable"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_ec2_transit_gateway_route_table",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway-route-table/tgw-rtb-06061a18ae86807c4",
           "default_association_route_table": false,
           "default_propagation_route_table": false,
           "id": "tgw-rtb-06061a18ae86807c4",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "transit_gateway_id": "tgw-01099067ffc4b2e61"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_vpc_attachment.this[\"vpc1\"]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
           "module.infra-aws.module.vpc.aws_subnet.private",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": "vpc1",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "subnet_ids": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_ec2_transit_gateway_vpc_attachment",
          "values": {
           "appliance_mode_support": "disable",
           "dns_support": "enable",
           "id": "tgw-attach-06394757fd588d215",
           "ipv6_support": "disable",
           "subnet_ids": [
            "subnet-029c5ca58ff58d1d7",
            "subnet-0b0c433045e19828c",
            "subnet-0e235bd5870506158"
           ],
           "tags": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "transit_gateway_default_route_table_association": true,
           "transit_gateway_default_route_table_propagation": true,
           "transit_gateway_id": "tgw-01099067ffc4b2e61",
           "vpc_id": "vpc-04f3e1e59d4facd4f",
           "vpc_owner_id": "855831148133"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ram_principal_association.this[0]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "module.infra-aws.module.tgw.aws_ram_resource_share.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_ram_principal_association",
          "values": {
           "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,298208748192",
           "principal": "298208748192",
           "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ram_resource_association.this[0]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
           "module.infra-aws.module.tgw.aws_ram_resource_share.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_ram_resource_association",
          "values": {
           "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
           "resource_arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
           "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
          }
         },
         {
          "address": "module.infra-aws.module.tgw.aws_ram_resource_share.this[0]",
          "depends_on": [
           "module.hcp-hvn.hcp_hvn.hvn",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "permission_arns": [
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_ram_resource_share",
          "values": {
           "allow_external_principals": true,
           "arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
           "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
           "name": "hcp-vault-demo-irukqoel",
           "permission_arns": [
            "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionTransitGateway"
           ],
           "tags": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel"
           },
           "timeouts": null
          }
         }
        ]
       },
       {
        "address": "module.infra-aws.module.vpc",
        "resources": [
         {
          "address": "module.infra-aws.module.vpc.aws_eip.nat[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "nat",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_eip",
          "values": {
           "address": null,
           "allocation_id": "eipalloc-013bb1d2a21e8adae",
           "associate_with_private_ip": null,
           "association_id": "eipassoc-0b67156aff66dfe3c",
           "carrier_ip": "",
           "customer_owned_ip": "",
           "customer_owned_ipv4_pool": "",
           "domain": "vpc",
           "id": "eipalloc-013bb1d2a21e8adae",
           "instance": "",
           "network_border_group": "ap-southeast-2",
           "network_interface": "eni-082fdb5480d50c5eb",
           "private_dns": "ip-10-200-10-140.ap-southeast-2.compute.internal",
           "private_ip": "10.200.10.140",
           "public_dns": "ec2-52-64-109-96.ap-southeast-2.compute.amazonaws.com",
           "public_ip": "52.64.109.96",
           "public_ipv4_pool": "amazon",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "timeouts": null,
           "vpc": true
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_internet_gateway.this[0]",
          "depends_on": [
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_internet_gateway",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:internet-gateway/igw-0ddd5b76ae1975ac0",
           "id": "igw-0ddd5b76ae1975ac0",
           "owner_id": "855831148133",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_nat_gateway.this[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_eip.nat",
           "module.infra-aws.module.vpc.aws_internet_gateway.this",
           "module.infra-aws.module.vpc.aws_subnet.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_nat_gateway",
          "values": {
           "allocation_id": "eipalloc-013bb1d2a21e8adae",
           "connectivity_type": "public",
           "id": "nat-0c3cff73ae4448cf1",
           "network_interface_id": "eni-082fdb5480d50c5eb",
           "private_ip": "10.200.10.140",
           "public_ip": "52.64.109.96",
           "subnet_id": "subnet-03475e20ee7be9fe2",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           }
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route.private_nat_gateway[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_eip.nat",
           "module.infra-aws.module.vpc.aws_internet_gateway.this",
           "module.infra-aws.module.vpc.aws_nat_gateway.this",
           "module.infra-aws.module.vpc.aws_route_table.private",
           "module.infra-aws.module.vpc.aws_subnet.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "private_nat_gateway",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "timeouts": {}
          },
          "type": "aws_route",
          "values": {
           "carrier_gateway_id": "",
           "core_network_arn": "",
           "destination_cidr_block": "0.0.0.0/0",
           "destination_ipv6_cidr_block": "",
           "destination_prefix_list_id": "",
           "egress_only_gateway_id": "",
           "gateway_id": "",
           "id": "r-rtb-0678e0eba8978e44f1080289494",
           "instance_id": "",
           "instance_owner_id": "",
           "local_gateway_id": "",
           "nat_gateway_id": "nat-0c3cff73ae4448cf1",
           "network_interface_id": "",
           "origin": "CreateRoute",
           "route_table_id": "rtb-0678e0eba8978e44f",
           "state": "active",
           "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
           },
           "transit_gateway_id": "",
           "vpc_endpoint_id": "",
           "vpc_peering_connection_id": ""
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route.public_internet_gateway[0]",
          "depends_on": [
           "module.infra-aws.module.vpc.aws_internet_gateway.this",
           "module.infra-aws.module.vpc.aws_route_table.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "public_internet_gateway",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "timeouts": {}
          },
          "type": "aws_route",
          "values": {
           "carrier_gateway_id": "",
           "core_network_arn": "",
           "destination_cidr_block": "0.0.0.0/0",
           "destination_ipv6_cidr_block": "",
           "destination_prefix_list_id": "",
           "egress_only_gateway_id": "",
           "gateway_id": "igw-0ddd5b76ae1975ac0",
           "id": "r-rtb-0359582849d38acdd1080289494",
           "instance_id": "",
           "instance_owner_id": "",
           "local_gateway_id": "",
           "nat_gateway_id": "",
           "network_interface_id": "",
           "origin": "CreateRoute",
           "route_table_id": "rtb-0359582849d38acdd",
           "state": "active",
           "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
           },
           "transit_gateway_id": "",
           "vpc_endpoint_id": "",
           "vpc_peering_connection_id": ""
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table.private[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "propagating_vgws": [],
           "route": [
            {}
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_route_table",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0678e0eba8978e44f",
           "id": "rtb-0678e0eba8978e44f",
           "owner_id": "855831148133",
           "propagating_vgws": [],
           "route": [
            {
             "carrier_gateway_id": "",
             "cidr_block": "0.0.0.0/0",
             "core_network_arn": "",
             "destination_prefix_list_id": "",
             "egress_only_gateway_id": "",
             "gateway_id": "",
             "instance_id": "",
             "ipv6_cidr_block": "",
             "local_gateway_id": "",
             "nat_gateway_id": "nat-0c3cff73ae4448cf1",
             "network_interface_id": "",
             "transit_gateway_id": "",
             "vpc_endpoint_id": "",
             "vpc_peering_connection_id": ""
            }
           ],
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-private",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-private",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table.public[0]",
          "depends_on": [
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "propagating_vgws": [],
           "route": [
            {},
            {}
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_route_table",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0359582849d38acdd",
           "id": "rtb-0359582849d38acdd",
           "owner_id": "855831148133",
           "propagating_vgws": [],
           "route": [
            {
             "carrier_gateway_id": "",
             "cidr_block": "0.0.0.0/0",
             "core_network_arn": "",
             "destination_prefix_list_id": "",
             "egress_only_gateway_id": "",
             "gateway_id": "igw-0ddd5b76ae1975ac0",
             "instance_id": "",
             "ipv6_cidr_block": "",
             "local_gateway_id": "",
             "nat_gateway_id": "",
             "network_interface_id": "",
             "transit_gateway_id": "",
             "vpc_endpoint_id": "",
             "vpc_peering_connection_id": ""
            },
            {
             "carrier_gateway_id": "",
             "cidr_block": "172.25.16.0/20",
             "core_network_arn": "",
             "destination_prefix_list_id": "",
             "egress_only_gateway_id": "",
             "gateway_id": "",
             "instance_id": "",
             "ipv6_cidr_block": "",
             "local_gateway_id": "",
             "nat_gateway_id": "",
             "network_interface_id": "",
             "transit_gateway_id": "tgw-01099067ffc4b2e61",
             "vpc_endpoint_id": "",
             "vpc_peering_connection_id": ""
            }
           ],
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-public",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-public",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.private[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.private",
           "module.infra-aws.module.vpc.aws_subnet.private",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-05ddd2ba0b1fbe17e",
           "route_table_id": "rtb-0678e0eba8978e44f",
           "subnet_id": "subnet-0b0c433045e19828c"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.private[1]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.private",
           "module.infra-aws.module.vpc.aws_subnet.private",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-0b546365fc103c69e",
           "route_table_id": "rtb-0678e0eba8978e44f",
           "subnet_id": "subnet-029c5ca58ff58d1d7"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.private[2]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.private",
           "module.infra-aws.module.vpc.aws_subnet.private",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-0d3d11fd8108abf0b",
           "route_table_id": "rtb-0678e0eba8978e44f",
           "subnet_id": "subnet-0e235bd5870506158"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.public[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.public",
           "module.infra-aws.module.vpc.aws_subnet.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-0f7ecbed0647ce96d",
           "route_table_id": "rtb-0359582849d38acdd",
           "subnet_id": "subnet-03475e20ee7be9fe2"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.public[1]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.public",
           "module.infra-aws.module.vpc.aws_subnet.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-0664b390aa0eaa1a4",
           "route_table_id": "rtb-0359582849d38acdd",
           "subnet_id": "subnet-0594f0a7cb5d9addc"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_route_table_association.public[2]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_route_table.public",
           "module.infra-aws.module.vpc.aws_subnet.public",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_route_table_association",
          "values": {
           "gateway_id": "",
           "id": "rtbassoc-0618645d2b3686b2f",
           "route_table_id": "rtb-0359582849d38acdd",
           "subnet_id": "subnet-0b8c961533d7fae78"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.private[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b0c433045e19828c",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2a",
           "availability_zone_id": "apse2-az3",
           "cidr_block": "10.200.20.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-0b0c433045e19828c",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": false,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.private[1]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-029c5ca58ff58d1d7",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2b",
           "availability_zone_id": "apse2-az1",
           "cidr_block": "10.200.21.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-029c5ca58ff58d1d7",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": false,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.private[2]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "private",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0e235bd5870506158",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2c",
           "availability_zone_id": "apse2-az2",
           "cidr_block": "10.200.22.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-0e235bd5870506158",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": false,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/internal-elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.public[0]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-03475e20ee7be9fe2",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2a",
           "availability_zone_id": "apse2-az3",
           "cidr_block": "10.200.10.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-03475e20ee7be9fe2",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": true,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.public[1]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 1,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0594f0a7cb5d9addc",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2b",
           "availability_zone_id": "apse2-az1",
           "cidr_block": "10.200.11.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-0594f0a7cb5d9addc",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": true,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_subnet.public[2]",
          "depends_on": [
           "module.infra-aws.data.aws_availability_zones.available",
           "module.infra-aws.module.vpc.aws_vpc.this",
           "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
           "random_string.suffix"
          ],
          "index": 2,
          "mode": "managed",
          "name": "public",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_subnet",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b8c961533d7fae78",
           "assign_ipv6_address_on_creation": false,
           "availability_zone": "ap-southeast-2c",
           "availability_zone_id": "apse2-az2",
           "cidr_block": "10.200.12.0/24",
           "customer_owned_ipv4_pool": "",
           "enable_dns64": false,
           "enable_resource_name_dns_a_record_on_launch": false,
           "enable_resource_name_dns_aaaa_record_on_launch": false,
           "id": "subnet-0b8c961533d7fae78",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_association_id": "",
           "ipv6_native": false,
           "map_customer_owned_ip_on_launch": false,
           "map_public_ip_on_launch": true,
           "outpost_arn": "",
           "owner_id": "855831148133",
           "private_dns_hostname_type_on_launch": "ip-name",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
            "kubernetes.io/role/elb": "1"
           },
           "timeouts": null,
           "vpc_id": "vpc-04f3e1e59d4facd4f"
          }
         },
         {
          "address": "module.infra-aws.module.vpc.aws_vpc.this[0]",
          "depends_on": [
           "random_string.suffix"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_vpc",
          "values": {
           "arn": "arn:aws:ec2:ap-southeast-2:855831148133:vpc/vpc-04f3e1e59d4facd4f",
           "assign_generated_ipv6_cidr_block": false,
           "cidr_block": "10.200.0.0/16",
           "default_network_acl_id": "acl-0424ebd92f2677c7d",
           "default_route_table_id": "rtb-05a77d173a1f91bfc",
           "default_security_group_id": "sg-0440b8e6a4da5b7f8",
           "dhcp_options_id": "dopt-0d500dd5e867008f0",
           "enable_classiclink": false,
           "enable_classiclink_dns_support": false,
           "enable_dns_hostnames": true,
           "enable_dns_support": true,
           "enable_network_address_usage_metrics": false,
           "id": "vpc-04f3e1e59d4facd4f",
           "instance_tenancy": "default",
           "ipv4_ipam_pool_id": null,
           "ipv4_netmask_length": null,
           "ipv6_association_id": "",
           "ipv6_cidr_block": "",
           "ipv6_cidr_block_network_border_group": "",
           "ipv6_ipam_pool_id": "",
           "ipv6_netmask_length": 0,
           "main_route_table_id": "rtb-05a77d173a1f91bfc",
           "owner_id": "855831148133",
           "tags": {
            "Name": "hcp-vault-demo-irukqoel",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           },
           "tags_all": {
            "Name": "hcp-vault-demo-irukqoel",
            "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
           }
          }
         }
        ]
       }
      ],
      "resources": [
       {
        "address": "module.infra-aws.data.aws_ami.ubuntu20",
        "mode": "data",
        "name": "ubuntu20",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "block_device_mappings": [
          {
           "ebs": {}
          },
          {
           "ebs": {}
          },
          {
           "ebs": {}
          }
         ],
         "filter": [
          {
           "values": [
            false
           ]
          },
          {
           "values": [
            false
           ]
          },
          {
           "values": [
            false
           ]
          }
         ],
         "owners": [
          false
         ],
         "product_codes": [],
         "state_reason": {},
         "tags": {}
        },
        "type": "aws_ami",
        "values": {
         "architecture": "x86_64",
         "arn": "arn:aws:ec2:ap-southeast-2::image/ami-05f998315cca9bfe3",
         "block_device_mappings": [
          {
           "device_name": "/dev/sda1",
           "ebs": {
            "delete_on_termination": "true",
            "encrypted": "false",
            "iops": "0",
            "snapshot_id": "snap-0dddb5d3a5cf346fd",
            "throughput": "0",
            "volume_size": "8",
            "volume_type": "gp2"
           },
           "no_device": "",
           "virtual_name": ""
          },
          {
           "device_name": "/dev/sdb",
           "ebs": {},
           "no_device": "",
           "virtual_name": "ephemeral0"
          },
          {
           "device_name": "/dev/sdc",
           "ebs": {},
           "no_device": "",
           "virtual_name": "ephemeral1"
          }
         ],
         "boot_mode": "legacy-bios",
         "creation_date": "2023-03-25T06:25:24.997Z",
         "deprecation_time": "2025-03-25T06:25:24.997Z",
         "description": "Canonical, Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-03-25",
         "ena_support": true,
         "executable_users": null,
         "filter": [
          {
           "name": "name",
           "values": [
            "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04*"
           ]
          },
          {
           "name": "root-device-type",
           "values": [
            "ebs"
           ]
          },
          {
           "name": "virtualization-type",
           "values": [
            "hvm"
           ]
          }
         ],
         "hypervisor": "xen",
         "id": "ami-05f998315cca9bfe3",
         "image_id": "ami-05f998315cca9bfe3",
         "image_location": "amazon/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230325",
         "image_owner_alias": "amazon",
         "image_type": "machine",
         "imds_support": "",
         "include_deprecated": false,
         "kernel_id": "",
         "most_recent": true,
         "name": "ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230325",
         "name_regex": null,
         "owner_id": "099720109477",
         "owners": [
          "099720109477"
         ],
         "platform": "",
         "platform_details": "Linux/UNIX",
         "product_codes": [],
         "public": true,
         "ramdisk_id": "",
         "root_device_name": "/dev/sda1",
         "root_device_type": "ebs",
         "root_snapshot_id": "snap-0dddb5d3a5cf346fd",
         "sriov_net_support": "simple",
         "state": "available",
         "state_reason": {
          "code": "UNSET",
          "message": "UNSET"
         },
         "tags": {},
         "timeouts": null,
         "tpm_support": "",
         "usage_operation": "RunInstances",
         "virtualization_type": "hvm"
        }
       },
       {
        "address": "module.infra-aws.data.aws_availability_zones.available",
        "mode": "data",
        "name": "available",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "group_names": [
          false
         ],
         "names": [
          false,
          false,
          false
         ],
         "zone_ids": [
          false,
          false,
          false
         ]
        },
        "type": "aws_availability_zones",
        "values": {
         "all_availability_zones": null,
         "exclude_names": null,
         "exclude_zone_ids": null,
         "filter": null,
         "group_names": [
          "ap-southeast-2"
         ],
         "id": "ap-southeast-2",
         "names": [
          "ap-southeast-2a",
          "ap-southeast-2b",
          "ap-southeast-2c"
         ],
         "state": null,
         "timeouts": null,
         "zone_ids": [
          "apse2-az3",
          "apse2-az1",
          "apse2-az2"
         ]
        }
       },
       {
        "address": "module.infra-aws.aws_eip.main",
        "depends_on": [
         "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
         "module.infra-aws.aws_iam_role.ssm_role",
         "module.infra-aws.aws_instance.bastion",
         "module.infra-aws.aws_key_pair.main",
         "module.infra-aws.data.aws_ami.ubuntu20",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "main",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_eip",
        "values": {
         "address": null,
         "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
         "associate_with_private_ip": null,
         "association_id": "eipassoc-0ccbe95029aaa5f4a",
         "carrier_ip": "",
         "customer_owned_ip": "",
         "customer_owned_ipv4_pool": "",
         "domain": "vpc",
         "id": "eipalloc-0d4b7ba79f02aceb2",
         "instance": "i-0f7c3db42fc2275fb",
         "network_border_group": "ap-southeast-2",
         "network_interface": "eni-0dcc0fbd5b02c018b",
         "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
         "private_ip": "10.200.11.212",
         "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
         "public_ip": "13.211.245.115",
         "public_ipv4_pool": "amazon",
         "tags": {},
         "tags_all": {},
         "timeouts": null,
         "vpc": true
        }
       },
       {
        "address": "module.infra-aws.aws_eip_association.main",
        "depends_on": [
         "module.infra-aws.aws_eip.main",
         "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
         "module.infra-aws.aws_iam_role.ssm_role",
         "module.infra-aws.aws_instance.bastion",
         "module.infra-aws.aws_key_pair.main",
         "module.infra-aws.data.aws_ami.ubuntu20",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "main",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_eip_association",
        "values": {
         "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
         "allow_reassociation": null,
         "id": "eipassoc-0ccbe95029aaa5f4a",
         "instance_id": "i-0f7c3db42fc2275fb",
         "network_interface_id": "eni-0dcc0fbd5b02c018b",
         "private_ip_address": "10.200.11.212",
         "public_ip": "13.211.245.115"
        }
       },
       {
        "address": "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
        "depends_on": [
         "module.infra-aws.aws_iam_role.ssm_role"
        ],
        "mode": "managed",
        "name": "ssm_instance_profile",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_instance_profile",
        "values": {
         "arn": "arn:aws:iam::855831148133:instance-profile/ssm_instance_profile",
         "create_date": "2023-03-26T20:54:06Z",
         "id": "ssm_instance_profile",
         "name": "ssm_instance_profile",
         "name_prefix": null,
         "path": "/",
         "role": "ssm_role",
         "tags": {},
         "tags_all": {},
         "unique_id": "AIPA4OQ4C6ZSQKO4U3BIN"
        }
       },
       {
        "address": "module.infra-aws.aws_iam_role.ssm_role",
        "mode": "managed",
        "name": "ssm_role",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "inline_policy": [],
         "managed_policy_arns": [
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_role",
        "values": {
         "arn": "arn:aws:iam::855831148133:role/ssm_role",
         "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
         "create_date": "2023-03-26T20:54:05Z",
         "description": "",
         "force_detach_policies": false,
         "id": "ssm_role",
         "inline_policy": [],
         "managed_policy_arns": [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
         ],
         "max_session_duration": 3600,
         "name": "ssm_role",
         "name_prefix": "",
         "path": "/",
         "permissions_boundary": null,
         "tags": {},
         "tags_all": {},
         "unique_id": "AROA4OQ4C6ZSXQFIRZCCI"
        }
       },
       {
        "address": "module.infra-aws.aws_iam_role_policy_attachment.ssm_policy_attachment",
        "depends_on": [
         "module.infra-aws.aws_iam_role.ssm_role"
        ],
        "mode": "managed",
        "name": "ssm_policy_attachment",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "ssm_role-20230326205407080300000001",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
         "role": "ssm_role"
        }
       },
       {
        "address": "module.infra-aws.aws_instance.bastion",
        "depends_on": [
         "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
         "module.infra-aws.aws_iam_role.ssm_role",
         "module.infra-aws.aws_key_pair.main",
         "module.infra-aws.data.aws_ami.ubuntu20",
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this",
         "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
         "module.infra-aws.module.vpc.aws_subnet.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "bastion",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "capacity_reservation_specification": [
          {
           "capacity_reservation_target": []
          }
         ],
         "credit_specification": [
          {}
         ],
         "ebs_block_device": [],
         "enclave_options": [
          {}
         ],
         "ephemeral_block_device": [],
         "ipv6_addresses": [],
         "launch_template": [],
         "maintenance_options": [
          {}
         ],
         "metadata_options": [
          {}
         ],
         "network_interface": [],
         "private_dns_name_options": [
          {}
         ],
         "root_block_device": [
          {
           "tags": {}
          }
         ],
         "secondary_private_ips": [],
         "security_groups": [],
         "tags": {},
         "tags_all": {},
         "vpc_security_group_ids": [
          false
         ]
        },
        "type": "aws_instance",
        "values": {
         "ami": "ami-05f998315cca9bfe3",
         "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0f7c3db42fc2275fb",
         "associate_public_ip_address": true,
         "availability_zone": "ap-southeast-2b",
         "capacity_reservation_specification": [
          {
           "capacity_reservation_preference": "open",
           "capacity_reservation_target": []
          }
         ],
         "cpu_core_count": 1,
         "cpu_threads_per_core": 2,
         "credit_specification": [
          {
           "cpu_credits": "unlimited"
          }
         ],
         "disable_api_stop": false,
         "disable_api_termination": false,
         "ebs_block_device": [],
         "ebs_optimized": false,
         "enclave_options": [
          {
           "enabled": false
          }
         ],
         "ephemeral_block_device": [],
         "get_password_data": false,
         "hibernation": false,
         "host_id": "",
         "host_resource_group_arn": null,
         "iam_instance_profile": "ssm_instance_profile",
         "id": "i-0f7c3db42fc2275fb",
         "instance_initiated_shutdown_behavior": "stop",
         "instance_state": "running",
         "instance_type": "t3.small",
         "ipv6_address_count": 0,
         "ipv6_addresses": [],
         "key_name": "awsf5demo",
         "launch_template": [],
         "maintenance_options": [
          {
           "auto_recovery": "default"
          }
         ],
         "metadata_options": [
          {
           "http_endpoint": "enabled",
           "http_put_response_hop_limit": 1,
           "http_tokens": "optional",
           "instance_metadata_tags": "disabled"
          }
         ],
         "monitoring": false,
         "network_interface": [],
         "outpost_arn": "",
         "password_data": "",
         "placement_group": "",
         "placement_partition_number": 0,
         "primary_network_interface_id": "eni-0dcc0fbd5b02c018b",
         "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
         "private_dns_name_options": [
          {
           "enable_resource_name_dns_a_record": false,
           "enable_resource_name_dns_aaaa_record": false,
           "hostname_type": "ip-name"
          }
         ],
         "private_ip": "10.200.11.212",
         "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
         "public_ip": "13.211.245.115",
         "root_block_device": [
          {
           "delete_on_termination": true,
           "device_name": "/dev/sda1",
           "encrypted": false,
           "iops": 100,
           "kms_key_id": "",
           "tags": {},
           "throughput": 0,
           "volume_id": "vol-0616dc1d48b38a5b8",
           "volume_size": 8,
           "volume_type": "gp2"
          }
         ],
         "secondary_private_ips": [],
         "security_groups": [],
         "source_dest_check": true,
         "subnet_id": "subnet-0594f0a7cb5d9addc",
         "tags": {
          "Name": "VaultAgent",
          "TTL": "300",
          "owner": "srlynch"
         },
         "tags_all": {
          "Name": "VaultAgent",
          "TTL": "300",
          "owner": "srlynch"
         },
         "tenancy": "default",
         "timeouts": null,
         "user_data": null,
         "user_data_base64": null,
         "user_data_replace_on_change": false,
         "volume_tags": null,
         "vpc_security_group_ids": [
          "sg-0d296ffafa864943d"
         ]
        }
       },
       {
        "address": "module.infra-aws.aws_key_pair.main",
        "mode": "managed",
        "name": "main",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_key_pair",
        "values": {
         "arn": "arn:aws:ec2:ap-southeast-2:855831148133:key-pair/awsf5demo",
         "fingerprint": "suDzOamwyhfOVf6zKgOAYl/qDr+lg6kGNVZxItIs5TY=",
         "id": "awsf5demo",
         "key_name": "awsf5demo",
         "key_name_prefix": "",
         "key_pair_id": "key-034dafd692e0e5d28",
         "key_type": "ed25519",
         "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII8wNgHtY1Lao00trZ8XoweIxa4F9T/wekoP2e2VzZPq simon.lynch@hashicorp.com",
         "tags": {},
         "tags_all": {}
        }
       },
       {
        "address": "module.infra-aws.aws_route.hcp_hvn_route",
        "depends_on": [
         "module.hcp-hvn.hcp_hvn.hvn",
         "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this",
         "module.infra-aws.module.vpc.aws_route_table.public",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "hcp_hvn_route",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route",
        "values": {
         "carrier_gateway_id": "",
         "core_network_arn": "",
         "destination_cidr_block": "172.25.16.0/20",
         "destination_ipv6_cidr_block": "",
         "destination_prefix_list_id": "",
         "egress_only_gateway_id": "",
         "gateway_id": "",
         "id": "r-rtb-0359582849d38acdd4288272982",
         "instance_id": "",
         "instance_owner_id": "",
         "local_gateway_id": "",
         "nat_gateway_id": "",
         "network_interface_id": "",
         "origin": "CreateRoute",
         "route_table_id": "rtb-0359582849d38acdd",
         "state": "active",
         "timeouts": null,
         "transit_gateway_id": "tgw-01099067ffc4b2e61",
         "vpc_endpoint_id": "",
         "vpc_peering_connection_id": ""
        }
       }
      ]
     },
     {
      "address": "module.tfc-agent",
      "resources": [
       {
        "address": "module.tfc-agent.aws_cloudwatch_log_group.tfe_agents_ecs[0]",
        "index": 0,
        "mode": "managed",
        "name": "tfe_agents_ecs",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_cloudwatch_log_group",
        "values": {
         "arn": "arn:aws:logs:ap-southeast-2:855831148133:log-group:tfc_agent-tfe-agents-ecs",
         "id": "tfc_agent-tfe-agents-ecs",
         "kms_key_id": "",
         "name": "tfc_agent-tfe-agents-ecs",
         "name_prefix": "",
         "retention_in_days": 0,
         "skip_destroy": false,
         "tags": {
          "Name": "tfc_agent-tfe-agents-ecs-logs"
         },
         "tags_all": {
          "Name": "tfc_agent-tfe-agents-ecs-logs"
         }
        }
       },
       {
        "address": "module.tfc-agent.aws_ecs_cluster.agents",
        "mode": "managed",
        "name": "agents",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "capacity_providers": [],
         "configuration": [],
         "default_capacity_provider_strategy": [],
         "service_connect_defaults": [],
         "setting": [
          {}
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_ecs_cluster",
        "values": {
         "arn": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
         "capacity_providers": [],
         "configuration": [],
         "default_capacity_provider_strategy": [],
         "id": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
         "name": "tfc_agent-cloud-agents-cluster",
         "service_connect_defaults": [],
         "setting": [
          {
           "name": "containerInsights",
           "value": "disabled"
          }
         ],
         "tags": {
          "Name": "tfc_agent-cloud-agents-cluster"
         },
         "tags_all": {
          "Name": "tfc_agent-cloud-agents-cluster"
         }
        }
       },
       {
        "address": "module.tfc-agent.aws_ecs_service.agents",
        "depends_on": [
         "module.infra-aws.data.aws_availability_zones.available",
         "module.infra-aws.module.vpc.aws_subnet.private",
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
         "module.tfc-agent.aws_ecs_cluster.agents",
         "module.tfc-agent.aws_ecs_task_definition.agents",
         "module.tfc-agent.aws_iam_role.ecs_task_execution_role",
         "module.tfc-agent.aws_security_group.agents",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "agents",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "alarms": [],
         "capacity_provider_strategy": [],
         "deployment_circuit_breaker": [
          {}
         ],
         "deployment_controller": [
          {}
         ],
         "load_balancer": [],
         "network_configuration": [
          {
           "security_groups": [
            false
           ],
           "subnets": [
            false,
            false,
            false
           ]
          }
         ],
         "ordered_placement_strategy": [],
         "placement_constraints": [],
         "service_connect_configuration": [],
         "service_registries": [],
         "tags": {},
         "tags_all": {},
         "triggers": {}
        },
        "type": "aws_ecs_service",
        "values": {
         "alarms": [],
         "capacity_provider_strategy": [],
         "cluster": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
         "deployment_circuit_breaker": [
          {
           "enable": false,
           "rollback": false
          }
         ],
         "deployment_controller": [
          {
           "type": "ECS"
          }
         ],
         "deployment_maximum_percent": 200,
         "deployment_minimum_healthy_percent": 100,
         "desired_count": 1,
         "enable_ecs_managed_tags": false,
         "enable_execute_command": false,
         "force_new_deployment": null,
         "health_check_grace_period_seconds": 0,
         "iam_role": "aws-service-role",
         "id": "arn:aws:ecs:ap-southeast-2:855831148133:service/tfc_agent-cloud-agents-cluster/tfc_agent-cloud-agents-service",
         "launch_type": "FARGATE",
         "load_balancer": [],
         "name": "tfc_agent-cloud-agents-service",
         "network_configuration": [
          {
           "assign_public_ip": false,
           "security_groups": [
            "sg-00c74d72a200ff57b"
           ],
           "subnets": [
            "subnet-029c5ca58ff58d1d7",
            "subnet-0b0c433045e19828c",
            "subnet-0e235bd5870506158"
           ]
          }
         ],
         "ordered_placement_strategy": [],
         "placement_constraints": [],
         "platform_version": "LATEST",
         "propagate_tags": "SERVICE",
         "scheduling_strategy": "REPLICA",
         "service_connect_configuration": [],
         "service_registries": [],
         "tags": {
          "ECS_Launch_Type": "Fargate",
          "Name": "tfc_agent-cloud-agents-service"
         },
         "tags_all": {
          "ECS_Launch_Type": "Fargate",
          "Name": "tfc_agent-cloud-agents-service"
         },
         "task_definition": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
         "timeouts": null,
         "triggers": {},
         "wait_for_steady_state": false
        }
       },
       {
        "address": "module.tfc-agent.aws_ecs_task_definition.agents",
        "depends_on": [
         "module.tfc-agent.aws_iam_role.ecs_task_execution_role"
        ],
        "mode": "managed",
        "name": "agents",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "ephemeral_storage": [],
         "inference_accelerator": [],
         "placement_constraints": [],
         "proxy_configuration": [],
         "requires_compatibilities": [
          false
         ],
         "runtime_platform": [],
         "tags": {},
         "tags_all": {},
         "volume": []
        },
        "type": "aws_ecs_task_definition",
        "values": {
         "arn": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
         "container_definitions": "[{\"cpu\":1024,\"environment\":[{\"name\":\"AGENT_LOG_LEVEL\",\"value\":\"info\"},{\"name\":\"TFC_ADDRESS\",\"value\":\"https://app.terraform.io\"},{\"name\":\"TFC_AGENT_NAME\",\"value\":\"ecs-agent\"},{\"name\":\"TFC_AGENT_TOKEN\",\"value\":\"qbSzJpcdS4bLKw.atlasv1.x7WCLcH0EHcaDZZ57uVhUf6ko8voPJYH9VlKeWJhF6MIkgGeIG6VZ4frDAHJNxUKGSM\"}],\"essential\":true,\"image\":\"hashicorp/tfc-agent:latest\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"tfc_agent-tfe-agents-ecs\",\"awslogs-region\":\"ap-southeast-2\",\"awslogs-stream-prefix\":\"tfc_agent\"}},\"memory\":2048,\"mountPoints\":[],\"name\":\"tfc-agent\",\"portMappings\":[],\"volumesFrom\":[]}]",
         "cpu": "1024",
         "ephemeral_storage": [],
         "execution_role_arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
         "family": "tfc_agent-cloud-agents-task",
         "id": "tfc_agent-cloud-agents-task",
         "inference_accelerator": [],
         "ipc_mode": "",
         "memory": "2048",
         "network_mode": "awsvpc",
         "pid_mode": "",
         "placement_constraints": [],
         "proxy_configuration": [],
         "requires_compatibilities": [
          "FARGATE"
         ],
         "revision": 4,
         "runtime_platform": [],
         "skip_destroy": false,
         "tags": {},
         "tags_all": {},
         "task_role_arn": "",
         "volume": []
        }
       },
       {
        "address": "module.tfc-agent.aws_iam_role.ecs_task_execution_role",
        "mode": "managed",
        "name": "ecs_task_execution_role",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "inline_policy": [],
         "managed_policy_arns": [
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_role",
        "values": {
         "arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
         "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
         "create_date": "2023-03-26T20:54:05Z",
         "description": "",
         "force_detach_policies": false,
         "id": "ecsTaskExecutionRole",
         "inline_policy": [],
         "managed_policy_arns": [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
         ],
         "max_session_duration": 3600,
         "name": "ecsTaskExecutionRole",
         "name_prefix": "",
         "path": "/",
         "permissions_boundary": null,
         "tags": {},
         "tags_all": {},
         "unique_id": "AROA4OQ4C6ZSW244RC2RU"
        }
       },
       {
        "address": "module.tfc-agent.aws_iam_role_policy_attachment.ecs-task-execution-role-policy-attachment",
        "depends_on": [
         "module.tfc-agent.aws_iam_role.ecs_task_execution_role"
        ],
        "mode": "managed",
        "name": "ecs-task-execution-role-policy-attachment",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "ecsTaskExecutionRole-20230326205407106100000002",
         "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
         "role": "ecsTaskExecutionRole"
        }
       },
       {
        "address": "module.tfc-agent.aws_security_group.agents",
        "depends_on": [
         "module.infra-aws.module.vpc.aws_vpc.this",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "agents",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "ingress": [],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-00c74d72a200ff57b",
         "description": "Managed by Terraform",
         "egress": [
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Allow HTTPS traffic egress.",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": false,
           "to_port": 443
          }
         ],
         "id": "sg-00c74d72a200ff57b",
         "ingress": [],
         "name": "tfc_agent-tfc-cloud-agents-sg",
         "name_prefix": "",
         "owner_id": "855831148133",
         "revoke_rules_on_delete": false,
         "tags": {
          "Name": "tfc_agent-tfc-cloud-agents-sg"
         },
         "tags_all": {
          "Name": "tfc_agent-tfc-cloud-agents-sg"
         },
         "timeouts": null,
         "vpc_id": "vpc-04f3e1e59d4facd4f"
        }
       },
       {
        "address": "module.tfc-agent.aws_security_group_rule.egress_https",
        "depends_on": [
         "module.infra-aws.module.vpc.aws_vpc.this",
         "module.tfc-agent.aws_security_group.agents",
         "random_string.suffix"
        ],
        "mode": "managed",
        "name": "egress_https",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ]
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Allow HTTPS traffic egress.",
         "from_port": 443,
         "id": "sgrule-2234879437",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": null,
         "protocol": "tcp",
         "security_group_id": "sg-00c74d72a200ff57b",
         "security_group_rule_id": "sgr-07e257c37d8ef346c",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       }
      ]
     }
    ],
    "resources": [
     {
      "address": "aws_route53_record.private_record_dev",
      "depends_on": [
       "aws_route53_zone.private_zone",
       "module.infra-aws.module.vpc.aws_vpc.this",
       "random_string.suffix"
      ],
      "mode": "managed",
      "name": "private_record_dev",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "alias": [],
       "failover_routing_policy": [],
       "geolocation_routing_policy": [],
       "latency_routing_policy": [],
       "records": [
        false
       ],
       "weighted_routing_policy": []
      },
      "type": "aws_route53_record",
      "values": {
       "alias": [],
       "allow_overwrite": null,
       "failover_routing_policy": [],
       "fqdn": "dev.f5demo.com",
       "geolocation_routing_policy": [],
       "health_check_id": "",
       "id": "Z09308551HJD0H26SF41L_dev.f5demo.com_A",
       "latency_routing_policy": [],
       "multivalue_answer_routing_policy": false,
       "name": "dev.f5demo.com",
       "records": [
        "10.200.10.11"
       ],
       "set_identifier": "",
       "ttl": 300,
       "type": "A",
       "weighted_routing_policy": [],
       "zone_id": "Z09308551HJD0H26SF41L"
      }
     },
     {
      "address": "aws_route53_record.private_record_prod",
      "depends_on": [
       "aws_route53_zone.private_zone",
       "module.infra-aws.module.vpc.aws_vpc.this",
       "random_string.suffix"
      ],
      "mode": "managed",
      "name": "private_record_prod",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 2,
      "sensitive_values": {
       "alias": [],
       "failover_routing_policy": [],
       "geolocation_routing_policy": [],
       "latency_routing_policy": [],
       "records": [
        false
       ],
       "weighted_routing_policy": []
      },
      "type": "aws_route53_record",
      "values": {
       "alias": [],
       "allow_overwrite": null,
       "failover_routing_policy": [],
       "fqdn": "prod.f5demo.com",
       "geolocation_routing_policy": [],
       "health_check_id": "",
       "id": "Z09308551HJD0H26SF41L_prod.f5demo.com_A",
       "latency_routing_policy": [],
       "multivalue_answer_routing_policy": false,
       "name": "prod.f5demo.com",
       "records": [
        "10.200.10.10"
       ],
       "set_identifier": "",
       "ttl": 300,
       "type": "A",
       "weighted_routing_policy": [],
       "zone_id": "Z09308551HJD0H26SF41L"
      }
     },
     {
      "address": "aws_route53_zone.private_zone",
      "depends_on": [
       "module.infra-aws.module.vpc.aws_vpc.this",
       "random_string.suffix"
      ],
      "mode": "managed",
      "name": "private_zone",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "name_servers": [
        false,
        false,
        false,
        false
       ],
       "tags": {},
       "tags_all": {},
       "vpc": [
        {}
       ]
      },
      "type": "aws_route53_zone",
      "values": {
       "arn": "arn:aws:route53:::hostedzone/Z09308551HJD0H26SF41L",
       "comment": "Managed by Terraform",
       "delegation_set_id": "",
       "force_destroy": false,
       "id": "Z09308551HJD0H26SF41L",
       "name": "f5demo.com",
       "name_servers": [
        "ns-0.awsdns-00.com.",
        "ns-1024.awsdns-00.org.",
        "ns-1536.awsdns-00.co.uk.",
        "ns-512.awsdns-00.net."
       ],
       "primary_name_server": "ns-0.awsdns-00.com.",
       "tags": {},
       "tags_all": {},
       "vpc": [
        {
         "vpc_id": "vpc-04f3e1e59d4facd4f",
         "vpc_region": "ap-southeast-2"
        }
       ],
       "zone_id": "Z09308551HJD0H26SF41L"
      }
     },
     {
      "address": "aws_ssm_association.example",
      "depends_on": [
       "aws_ssm_document.run_script_document",
       "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
       "module.infra-aws.aws_iam_role.ssm_role",
       "module.infra-aws.aws_instance.bastion",
       "module.infra-aws.aws_key_pair.main",
       "module.infra-aws.data.aws_ami.ubuntu20",
       "module.infra-aws.data.aws_availability_zones.available",
       "module.infra-aws.module.sg-mgmt.aws_security_group.this",
       "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix",
       "module.infra-aws.module.vpc.aws_subnet.public",
       "module.infra-aws.module.vpc.aws_vpc.this",
       "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
       "random_string.suffix"
      ],
      "mode": "managed",
      "name": "example",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 1,
      "sensitive_values": {
       "output_location": [],
       "parameters": {},
       "targets": [
        {
         "values": [
          false
         ]
        }
       ]
      },
      "type": "aws_ssm_association",
      "values": {
       "apply_only_at_cron_interval": false,
       "arn": "arn:aws:ssm:ap-southeast-2:855831148133:association/1398c7c4-12ff-4e66-8d36-9009472b5832",
       "association_id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
       "association_name": "",
       "automation_target_parameter_name": "",
       "compliance_severity": "",
       "document_version": "$DEFAULT",
       "id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
       "instance_id": "",
       "max_concurrency": "",
       "max_errors": "",
       "name": "vault_script_document",
       "output_location": [],
       "parameters": {},
       "schedule_expression": "",
       "targets": [
        {
         "key": "InstanceIds",
         "values": [
          "i-0f7c3db42fc2275fb"
         ]
        }
       ],
       "wait_for_success_timeout_seconds": null
      }
     },
     {
      "address": "aws_ssm_document.run_script_document",
      "mode": "managed",
      "name": "run_script_document",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "attachments_source": [],
       "parameter": [],
       "permissions": {},
       "platform_types": [
        false,
        false
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_ssm_document",
      "values": {
       "arn": "arn:aws:ssm:ap-southeast-2:855831148133:document/vault_script_document",
       "attachments_source": [],
       "content": "---\nschemaVersion: \"2.2\"\ndescription: \"Install and configure Vault Agent\"\nmainSteps:\n  - action: \"aws:runShellScript\"\n    name: \"update\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - sudo DEBIAN_FRONTEND=noninteractive apt update\n      - sudo DEBIAN_FRONTEND=noninteractive apt install unzip\n      - sudo DEBIAN_FRONTEND=noninteractive apt install git\n      - cd /tmp\n      - sudo rm -rf vault_1.13.0_linux_amd64.zip\n      - sudo wget https://releases.hashicorp.com/vault/1.13.0/vault_1.13.0_linux_amd64.zip 2\u003e/dev/null\n      - sudo wget https://www.c-nergy.be/downloads/xRDP/xrdp-installer-1.4.6.zip\n  - action: \"aws:runShellScript\"\n    name: \"configure\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - cd /tmp\n      - sudo rm -rf /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo rm -rf usr/local/bin/vault\n      - sudo git clone https://github.com/hashicorp-demo-lab/vault-f5-pki-rotation-splunk 2\u003e/dev/null\n      - sudo unzip vault_1.13.0_linux_amd64.zip\n      - sudo mv vault /usr/local/bin/\n      - sudo mv /tmp/vault-f5-pki-rotation-splunk /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo echo \"# DO NOT DO THIS - DEMO ONLY\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo echo \"vault agent -config=/home/ubuntu/vault-f5-pki-rotation-splunk/vault_agent_config/\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo chmod u+x /tmp/startVaultAgent.sh\n      - echo \"done vault config update ec2\" \u003e\u003e /tmp/vault_config_log.txt\n  - action: \"aws:runShellScript\"\n    name: \"add_desktop\"\n    inputs:\n      timeoutSeconds: '900'\n      runCommand:\n      - echo \"starting desktop install\"\n      - sudo apt install ubuntu-gnome-desktop -y 2\u003e/dev/null\n\n\n",
       "created_date": "2023-03-26T20:54:04Z",
       "default_version": "1",
       "description": "Install and configure Vault Agent",
       "document_format": "YAML",
       "document_type": "Command",
       "document_version": "1",
       "hash": "b720bfc091f22b309e204d4c246e9ca30dcf32d6a21472173c22b6c293a1a74b",
       "hash_type": "Sha256",
       "id": "vault_script_document",
       "latest_version": "1",
       "name": "vault_script_document",
       "owner": "855831148133",
       "parameter": [],
       "permissions": {},
       "platform_types": [
        "Linux",
        "MacOS"
       ],
       "schema_version": "2.2",
       "status": "Active",
       "tags": {},
       "tags_all": {},
       "target_type": "",
       "version_name": ""
      }
     },
     {
      "address": "random_string.suffix",
      "mode": "managed",
      "name": "suffix",
      "provider_name": "registry.terraform.io/hashicorp/random",
      "schema_version": 2,
      "sensitive_values": {},
      "type": "random_string",
      "values": {
       "id": "iRUKQoeL",
       "keepers": null,
       "length": 8,
       "lower": true,
       "min_lower": 0,
       "min_numeric": 0,
       "min_special": 0,
       "min_upper": 0,
       "number": true,
       "numeric": true,
       "override_special": null,
       "result": "iRUKQoeL",
       "special": false,
       "upper": true
      }
     }
    ]
   }
  }
 },
 "relevant_attributes": [
  {
   "attribute": [],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_vpc_attachment.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.outpost"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.database"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.public_internet_gateway"
  },
  {
   "attribute": [
    "names"
   ],
   "resource": "module.infra-aws.data.aws_availability_zones.available"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.public1[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.intra"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.intra"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.redshift_public"
  },
  {
   "attribute": [
    "owner_id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]"
  },
  {
   "attribute": [
    "default_propagation_route_table"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_internet_gateway.this"
  },
  {
   "attribute": [
    "description"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "association_default_route_table_id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.mgmt1[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_vpn_gateway.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.private_nat_gateway"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.mgmt"
  },
  {
   "attribute": [
    "token"
   ],
   "resource": "module.hcp-vault.hcp_vault_cluster_admin_token.token"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.aws_instance.bastion"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_customer_gateway.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.private"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.redshift"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.public"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.database"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.public_internet_gateway_ipv6"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.database"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.vpc.aws_internet_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.elasticache"
  },
  {
   "attribute": [
    "result"
   ],
   "resource": "module.bigip.random_string.dynamic_password"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.public"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.redshift"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table_propagation.this"
  },
  {
   "attribute": [
    "vault_public_endpoint_url"
   ],
   "resource": "module.hcp-vault.hcp_vault_cluster.vault"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.infra-aws.module.vpc.aws_cloudwatch_log_group.flow_log[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.outpost"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.database_internet_gateway"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ram_resource_share.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.data.aws_ami.f5_ami"
  },
  {
   "attribute": [
    "description"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.mgmt[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_default_vpc.this"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.private"
  },
  {
   "attribute": [
    "secret_id"
   ],
   "resource": "module.bigip.data.aws_secretsmanager_secret_version.current[0]"
  },
  {
   "attribute": [],
   "resource": "module.bigip.data.aws_secretsmanager_secret.password"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]"
  },
  {
   "attribute": [
    "hex"
   ],
   "resource": "module.bigip.random_id.module_id"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_redshift_subnet_group.redshift"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.elasticache"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_nat_gateway.this"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.public1"
  },
  {
   "attribute": [
    "private_ip_list"
   ],
   "resource": "module.bigip.aws_network_interface.public[0]"
  },
  {
   "attribute": [
    "owner_id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [
    "vpc_id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.infra-aws.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]"
  },
  {
   "attribute": [
    "default_association_route_table"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_eip.nat"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "provider_account_id"
   ],
   "resource": "module.hcp-hvn.hcp_hvn.hvn"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.private"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.external_private1"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_instance.f5_bigip"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.public"
  },
  {
   "attribute": [
    "public_dns"
   ],
   "resource": "module.bigip.aws_eip.mgmt[0]"
  },
  {
   "attribute": [
    "result"
   ],
   "resource": "random_string.suffix"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.public[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_egress_only_internet_gateway.this"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_eip.vip"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.elasticache"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.database"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.database_ipv6_egress"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table_association.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.vpc.aws_egress_only_internet_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_elasticache_subnet_group.elasticache"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_db_subnet_group.database"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.public"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table_association.private"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ram_principal_association.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.private[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.redshift"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.elasticache"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.public"
  },
  {
   "attribute": [
    "ipv6_cidr_block"
   ],
   "resource": "module.infra-aws.module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.vpc.aws_route_table.public[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route_table.redshift"
  },
  {
   "attribute": [
    "owner_id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "public_dns"
   ],
   "resource": "module.infra-aws.aws_eip.main"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.module.vpc.aws_route_table.database[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_vpn_gateway_attachment.this"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.mgmt1"
  },
  {
   "attribute": [
    "propagation_default_route_table_id"
   ],
   "resource": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.bigip.aws_network_interface.private1[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_vpc.this"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_eip.mgmt"
  },
  {
   "attribute": [
    "private_ip_list"
   ],
   "resource": "module.bigip.aws_network_interface.public1[0]"
  },
  {
   "attribute": [
    "vpc_id"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_eip.ext-pub"
  },
  {
   "attribute": [
    "ami"
   ],
   "resource": "module.infra-aws.aws_instance.bastion"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_vpc_dhcp_options.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_flow_log.this"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.private"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_subnet.intra"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.external_private"
  },
  {
   "attribute": [
    "hvn_id"
   ],
   "resource": "module.hcp-hvn.hcp_hvn.hvn"
  },
  {
   "attribute": [],
   "resource": "module.bigip.aws_network_interface.private1"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.infra-aws.data.aws_ami.ubuntu20"
  },
  {
   "attribute": [
    "private_ip"
   ],
   "resource": "module.bigip.aws_network_interface.public[0]"
  },
  {
   "attribute": [
    "private_ip"
   ],
   "resource": "module.bigip.aws_network_interface.public1[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_network_acl.intra"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.private_ipv6_egress"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]"
  },
  {
   "attribute": [],
   "resource": "module.infra-aws.module.vpc.aws_route.database_nat_gateway"
  }
 ],
 "resource_changes": [
  {
   "address": "aws_route53_record.private_record_dev",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alias": [],
     "allow_overwrite": null,
     "failover_routing_policy": [],
     "fqdn": "dev.f5demo.com",
     "geolocation_routing_policy": [],
     "health_check_id": "",
     "id": "Z09308551HJD0H26SF41L_dev.f5demo.com_A",
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": false,
     "name": "dev.f5demo.com",
     "records": [
      "10.200.10.11"
     ],
     "set_identifier": "",
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": [],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "after_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [
      false
     ],
     "weighted_routing_policy": []
    },
    "after_unknown": {},
    "before": {
     "alias": [],
     "allow_overwrite": null,
     "failover_routing_policy": [],
     "fqdn": "dev.f5demo.com",
     "geolocation_routing_policy": [],
     "health_check_id": "",
     "id": "Z09308551HJD0H26SF41L_dev.f5demo.com_A",
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": false,
     "name": "dev.f5demo.com",
     "records": [
      "10.200.10.11"
     ],
     "set_identifier": "",
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": [],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "before_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [
      false
     ],
     "weighted_routing_policy": []
    }
   },
   "mode": "managed",
   "name": "private_record_dev",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_record"
  },
  {
   "address": "aws_route53_record.private_record_prod",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alias": [],
     "allow_overwrite": null,
     "failover_routing_policy": [],
     "fqdn": "prod.f5demo.com",
     "geolocation_routing_policy": [],
     "health_check_id": "",
     "id": "Z09308551HJD0H26SF41L_prod.f5demo.com_A",
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": false,
     "name": "prod.f5demo.com",
     "records": [
      "10.200.10.10"
     ],
     "set_identifier": "",
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": [],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "after_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [
      false
     ],
     "weighted_routing_policy": []
    },
    "after_unknown": {},
    "before": {
     "alias": [],
     "allow_overwrite": null,
     "failover_routing_policy": [],
     "fqdn": "prod.f5demo.com",
     "geolocation_routing_policy": [],
     "health_check_id": "",
     "id": "Z09308551HJD0H26SF41L_prod.f5demo.com_A",
     "latency_routing_policy": [],
     "multivalue_answer_routing_policy": false,
     "name": "prod.f5demo.com",
     "records": [
      "10.200.10.10"
     ],
     "set_identifier": "",
     "ttl": 300,
     "type": "A",
     "weighted_routing_policy": [],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "before_sensitive": {
     "alias": [],
     "failover_routing_policy": [],
     "geolocation_routing_policy": [],
     "latency_routing_policy": [],
     "records": [
      false
     ],
     "weighted_routing_policy": []
    }
   },
   "mode": "managed",
   "name": "private_record_prod",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_record"
  },
  {
   "address": "aws_route53_zone.private_zone",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:route53:::hostedzone/Z09308551HJD0H26SF41L",
     "comment": "Managed by Terraform",
     "delegation_set_id": "",
     "force_destroy": false,
     "id": "Z09308551HJD0H26SF41L",
     "name": "f5demo.com",
     "name_servers": [
      "ns-0.awsdns-00.com.",
      "ns-1024.awsdns-00.org.",
      "ns-1536.awsdns-00.co.uk.",
      "ns-512.awsdns-00.net."
     ],
     "primary_name_server": "ns-0.awsdns-00.com.",
     "tags": {},
     "tags_all": {},
     "vpc": [
      {
       "vpc_id": "vpc-04f3e1e59d4facd4f",
       "vpc_region": "ap-southeast-2"
      }
     ],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "after_sensitive": {
     "name_servers": [
      false,
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "vpc": [
      {}
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:route53:::hostedzone/Z09308551HJD0H26SF41L",
     "comment": "Managed by Terraform",
     "delegation_set_id": "",
     "force_destroy": false,
     "id": "Z09308551HJD0H26SF41L",
     "name": "f5demo.com",
     "name_servers": [
      "ns-0.awsdns-00.com.",
      "ns-1024.awsdns-00.org.",
      "ns-1536.awsdns-00.co.uk.",
      "ns-512.awsdns-00.net."
     ],
     "primary_name_server": "ns-0.awsdns-00.com.",
     "tags": {},
     "tags_all": {},
     "vpc": [
      {
       "vpc_id": "vpc-04f3e1e59d4facd4f",
       "vpc_region": "ap-southeast-2"
      }
     ],
     "zone_id": "Z09308551HJD0H26SF41L"
    },
    "before_sensitive": {
     "name_servers": [
      false,
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "vpc": [
      {}
     ]
    }
   },
   "mode": "managed",
   "name": "private_zone",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route53_zone"
  },
  {
   "address": "aws_ssm_association.example",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "apply_only_at_cron_interval": false,
     "arn": "arn:aws:ssm:ap-southeast-2:855831148133:association/1398c7c4-12ff-4e66-8d36-9009472b5832",
     "association_id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
     "association_name": "",
     "automation_target_parameter_name": "",
     "compliance_severity": "",
     "document_version": "$DEFAULT",
     "id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
     "instance_id": "",
     "max_concurrency": "",
     "max_errors": "",
     "name": "vault_script_document",
     "output_location": [],
     "parameters": {},
     "schedule_expression": "",
     "targets": [
      {
       "key": "InstanceIds",
       "values": [
        "i-0f7c3db42fc2275fb"
       ]
      }
     ],
     "wait_for_success_timeout_seconds": null
    },
    "after_sensitive": {
     "output_location": [],
     "parameters": {},
     "targets": [
      {
       "values": [
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "apply_only_at_cron_interval": false,
     "arn": "arn:aws:ssm:ap-southeast-2:855831148133:association/1398c7c4-12ff-4e66-8d36-9009472b5832",
     "association_id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
     "association_name": "",
     "automation_target_parameter_name": "",
     "compliance_severity": "",
     "document_version": "$DEFAULT",
     "id": "1398c7c4-12ff-4e66-8d36-9009472b5832",
     "instance_id": "",
     "max_concurrency": "",
     "max_errors": "",
     "name": "vault_script_document",
     "output_location": [],
     "parameters": {},
     "schedule_expression": "",
     "targets": [
      {
       "key": "InstanceIds",
       "values": [
        "i-0f7c3db42fc2275fb"
       ]
      }
     ],
     "wait_for_success_timeout_seconds": null
    },
    "before_sensitive": {
     "output_location": [],
     "parameters": {},
     "targets": [
      {
       "values": [
        false
       ]
      }
     ]
    }
   },
   "mode": "managed",
   "name": "example",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ssm_association"
  },
  {
   "address": "aws_ssm_document.run_script_document",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ssm:ap-southeast-2:855831148133:document/vault_script_document",
     "attachments_source": [],
     "content": "---\nschemaVersion: \"2.2\"\ndescription: \"Install and configure Vault Agent\"\nmainSteps:\n  - action: \"aws:runShellScript\"\n    name: \"update\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - sudo DEBIAN_FRONTEND=noninteractive apt update\n      - sudo DEBIAN_FRONTEND=noninteractive apt install unzip\n      - sudo DEBIAN_FRONTEND=noninteractive apt install git\n      - cd /tmp\n      - sudo rm -rf vault_1.13.0_linux_amd64.zip\n      - sudo wget https://releases.hashicorp.com/vault/1.13.0/vault_1.13.0_linux_amd64.zip 2\u003e/dev/null\n      - sudo wget https://www.c-nergy.be/downloads/xRDP/xrdp-installer-1.4.6.zip\n  - action: \"aws:runShellScript\"\n    name: \"configure\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - cd /tmp\n      - sudo rm -rf /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo rm -rf usr/local/bin/vault\n      - sudo git clone https://github.com/hashicorp-demo-lab/vault-f5-pki-rotation-splunk 2\u003e/dev/null\n      - sudo unzip vault_1.13.0_linux_amd64.zip\n      - sudo mv vault /usr/local/bin/\n      - sudo mv /tmp/vault-f5-pki-rotation-splunk /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo echo \"# DO NOT DO THIS - DEMO ONLY\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo echo \"vault agent -config=/home/ubuntu/vault-f5-pki-rotation-splunk/vault_agent_config/\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo chmod u+x /tmp/startVaultAgent.sh\n      - echo \"done vault config update ec2\" \u003e\u003e /tmp/vault_config_log.txt\n  - action: \"aws:runShellScript\"\n    name: \"add_desktop\"\n    inputs:\n      timeoutSeconds: '900'\n      runCommand:\n      - echo \"starting desktop install\"\n      - sudo apt install ubuntu-gnome-desktop -y 2\u003e/dev/null\n\n\n",
     "created_date": "2023-03-26T20:54:04Z",
     "default_version": "1",
     "description": "Install and configure Vault Agent",
     "document_format": "YAML",
     "document_type": "Command",
     "document_version": "1",
     "hash": "b720bfc091f22b309e204d4c246e9ca30dcf32d6a21472173c22b6c293a1a74b",
     "hash_type": "Sha256",
     "id": "vault_script_document",
     "latest_version": "1",
     "name": "vault_script_document",
     "owner": "855831148133",
     "parameter": [],
     "permissions": {},
     "platform_types": [
      "Linux",
      "MacOS"
     ],
     "schema_version": "2.2",
     "status": "Active",
     "tags": {},
     "tags_all": {},
     "target_type": "",
     "version_name": ""
    },
    "after_sensitive": {
     "attachments_source": [],
     "parameter": [],
     "permissions": {},
     "platform_types": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ssm:ap-southeast-2:855831148133:document/vault_script_document",
     "attachments_source": [],
     "content": "---\nschemaVersion: \"2.2\"\ndescription: \"Install and configure Vault Agent\"\nmainSteps:\n  - action: \"aws:runShellScript\"\n    name: \"update\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - sudo DEBIAN_FRONTEND=noninteractive apt update\n      - sudo DEBIAN_FRONTEND=noninteractive apt install unzip\n      - sudo DEBIAN_FRONTEND=noninteractive apt install git\n      - cd /tmp\n      - sudo rm -rf vault_1.13.0_linux_amd64.zip\n      - sudo wget https://releases.hashicorp.com/vault/1.13.0/vault_1.13.0_linux_amd64.zip 2\u003e/dev/null\n      - sudo wget https://www.c-nergy.be/downloads/xRDP/xrdp-installer-1.4.6.zip\n  - action: \"aws:runShellScript\"\n    name: \"configure\"\n    inputs:\n      timeoutSeconds: '700'\n      runCommand:\n      - cd /tmp\n      - sudo rm -rf /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo rm -rf usr/local/bin/vault\n      - sudo git clone https://github.com/hashicorp-demo-lab/vault-f5-pki-rotation-splunk 2\u003e/dev/null\n      - sudo unzip vault_1.13.0_linux_amd64.zip\n      - sudo mv vault /usr/local/bin/\n      - sudo mv /tmp/vault-f5-pki-rotation-splunk /home/ubuntu/vault-f5-pki-rotation-splunk\n      - sudo echo \"# DO NOT DO THIS - DEMO ONLY\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo echo \"vault agent -config=/home/ubuntu/vault-f5-pki-rotation-splunk/vault_agent_config/\" \u003e\u003e /tmp/startVaultAgent.sh\n      - sudo chmod u+x /tmp/startVaultAgent.sh\n      - echo \"done vault config update ec2\" \u003e\u003e /tmp/vault_config_log.txt\n  - action: \"aws:runShellScript\"\n    name: \"add_desktop\"\n    inputs:\n      timeoutSeconds: '900'\n      runCommand:\n      - echo \"starting desktop install\"\n      - sudo apt install ubuntu-gnome-desktop -y 2\u003e/dev/null\n\n\n",
     "created_date": "2023-03-26T20:54:04Z",
     "default_version": "1",
     "description": "Install and configure Vault Agent",
     "document_format": "YAML",
     "document_type": "Command",
     "document_version": "1",
     "hash": "b720bfc091f22b309e204d4c246e9ca30dcf32d6a21472173c22b6c293a1a74b",
     "hash_type": "Sha256",
     "id": "vault_script_document",
     "latest_version": "1",
     "name": "vault_script_document",
     "owner": "855831148133",
     "parameter": [],
     "permissions": {},
     "platform_types": [
      "Linux",
      "MacOS"
     ],
     "schema_version": "2.2",
     "status": "Active",
     "tags": {},
     "tags_all": {},
     "target_type": "",
     "version_name": ""
    },
    "before_sensitive": {
     "attachments_source": [],
     "parameter": [],
     "permissions": {},
     "platform_types": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "name": "run_script_document",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ssm_document"
  },
  {
   "address": "random_string.suffix",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "iRUKQoeL",
     "keepers": null,
     "length": 8,
     "lower": true,
     "min_lower": 0,
     "min_numeric": 0,
     "min_special": 0,
     "min_upper": 0,
     "number": true,
     "numeric": true,
     "override_special": null,
     "result": "iRUKQoeL",
     "special": false,
     "upper": true
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "iRUKQoeL",
     "keepers": null,
     "length": 8,
     "lower": true,
     "min_lower": 0,
     "min_numeric": 0,
     "min_special": 0,
     "min_upper": 0,
     "number": true,
     "numeric": true,
     "override_special": null,
     "result": "iRUKQoeL",
     "special": false,
     "upper": true
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "name": "suffix",
   "provider_name": "registry.terraform.io/hashicorp/random",
   "type": "random_string"
  },
  {
   "address": "module.bigip.aws_eip.mgmt[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-0ba1d06528025bc46",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-07d36e668b605d991",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0ba1d06528025bc46",
     "instance": "i-0406a65c863a0dc3b",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-076bb769250ceb723",
     "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.225",
     "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "54.66.229.110",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "BIGIP-Managemt-PublicIp-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Managemt-PublicIp-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-0ba1d06528025bc46",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-07d36e668b605d991",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0ba1d06528025bc46",
     "instance": "i-0406a65c863a0dc3b",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-076bb769250ceb723",
     "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.225",
     "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "54.66.229.110",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "BIGIP-Managemt-PublicIp-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Managemt-PublicIp-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "mgmt",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.bigip.aws_instance.f5_bigip",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "ami": "ami-0f2fdc8c110c4904f",
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0406a65c863a0dc3b",
     "associate_public_ip_address": true,
     "availability_zone": "ap-southeast-2a",
     "capacity_reservation_specification": [
      {
       "capacity_reservation_preference": "open",
       "capacity_reservation_target": []
      }
     ],
     "cpu_core_count": 1,
     "cpu_threads_per_core": 2,
     "credit_specification": [
      {
       "cpu_credits": "unlimited"
      }
     ],
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_block_device": [],
     "ebs_optimized": false,
     "enclave_options": [
      {
       "enabled": false
      }
     ],
     "ephemeral_block_device": [],
     "get_password_data": false,
     "hibernation": false,
     "host_id": "",
     "host_resource_group_arn": null,
     "iam_instance_profile": "",
     "id": "i-0406a65c863a0dc3b",
     "instance_initiated_shutdown_behavior": "stop",
     "instance_state": "running",
     "instance_type": "t3.medium",
     "ipv6_address_count": 0,
     "ipv6_addresses": [],
     "key_name": "awsf5demo",
     "launch_template": [],
     "maintenance_options": [
      {
       "auto_recovery": "default"
      }
     ],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_put_response_hop_limit": 1,
       "http_tokens": "optional",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": false,
     "network_interface": [
      {
       "delete_on_termination": false,
       "device_index": 0,
       "network_card_index": 0,
       "network_interface_id": "eni-076bb769250ceb723"
      }
     ],
     "outpost_arn": "",
     "password_data": "",
     "placement_group": "",
     "placement_partition_number": 0,
     "primary_network_interface_id": "eni-076bb769250ceb723",
     "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_dns_name_options": [
      {
       "enable_resource_name_dns_a_record": false,
       "enable_resource_name_dns_aaaa_record": false,
       "hostname_type": "ip-name"
      }
     ],
     "private_ip": "10.200.10.225",
     "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "54.66.229.110",
     "root_block_device": [
      {
       "delete_on_termination": true,
       "device_name": "/dev/xvda",
       "encrypted": false,
       "iops": 120,
       "kms_key_id": "",
       "tags": {},
       "throughput": 0,
       "volume_id": "vol-073660a913a7e727b",
       "volume_size": 40,
       "volume_type": "gp2"
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "source_dest_check": true,
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tenancy": "default",
     "timeouts": null,
     "user_data": "c46d56f3e5f3f3fbf7103eac71eed5bbf234d726",
     "user_data_base64": null,
     "user_data_replace_on_change": false,
     "volume_tags": null,
     "vpc_security_group_ids": [
      "sg-0d296ffafa864943d"
     ]
    },
    "after_sensitive": {
     "capacity_reservation_specification": [
      {
       "capacity_reservation_target": []
      }
     ],
     "credit_specification": [
      {}
     ],
     "ebs_block_device": [],
     "enclave_options": [
      {}
     ],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "maintenance_options": [
      {}
     ],
     "metadata_options": [
      {}
     ],
     "network_interface": [
      {}
     ],
     "private_dns_name_options": [
      {}
     ],
     "root_block_device": [
      {
       "tags": {}
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "ami": "ami-0f2fdc8c110c4904f",
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0406a65c863a0dc3b",
     "associate_public_ip_address": true,
     "availability_zone": "ap-southeast-2a",
     "capacity_reservation_specification": [
      {
       "capacity_reservation_preference": "open",
       "capacity_reservation_target": []
      }
     ],
     "cpu_core_count": 1,
     "cpu_threads_per_core": 2,
     "credit_specification": [
      {
       "cpu_credits": "unlimited"
      }
     ],
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_block_device": [],
     "ebs_optimized": false,
     "enclave_options": [
      {
       "enabled": false
      }
     ],
     "ephemeral_block_device": [],
     "get_password_data": false,
     "hibernation": false,
     "host_id": "",
     "host_resource_group_arn": null,
     "iam_instance_profile": "",
     "id": "i-0406a65c863a0dc3b",
     "instance_initiated_shutdown_behavior": "stop",
     "instance_state": "running",
     "instance_type": "t3.medium",
     "ipv6_address_count": 0,
     "ipv6_addresses": [],
     "key_name": "awsf5demo",
     "launch_template": [],
     "maintenance_options": [
      {
       "auto_recovery": "default"
      }
     ],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_put_response_hop_limit": 1,
       "http_tokens": "optional",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": false,
     "network_interface": [
      {
       "delete_on_termination": false,
       "device_index": 0,
       "network_card_index": 0,
       "network_interface_id": "eni-076bb769250ceb723"
      }
     ],
     "outpost_arn": "",
     "password_data": "",
     "placement_group": "",
     "placement_partition_number": 0,
     "primary_network_interface_id": "eni-076bb769250ceb723",
     "private_dns": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_dns_name_options": [
      {
       "enable_resource_name_dns_a_record": false,
       "enable_resource_name_dns_aaaa_record": false,
       "hostname_type": "ip-name"
      }
     ],
     "private_ip": "10.200.10.225",
     "public_dns": "ec2-54-66-229-110.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "54.66.229.110",
     "root_block_device": [
      {
       "delete_on_termination": true,
       "device_name": "/dev/xvda",
       "encrypted": false,
       "iops": 120,
       "kms_key_id": "",
       "tags": {},
       "throughput": 0,
       "volume_id": "vol-073660a913a7e727b",
       "volume_size": 40,
       "volume_type": "gp2"
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "source_dest_check": true,
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Instance-bigip-aws-1nicnew-1ab8",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tenancy": "default",
     "timeouts": null,
     "user_data": "c46d56f3e5f3f3fbf7103eac71eed5bbf234d726",
     "user_data_base64": null,
     "user_data_replace_on_change": false,
     "volume_tags": null,
     "vpc_security_group_ids": [
      "sg-0d296ffafa864943d"
     ]
    },
    "before_sensitive": {
     "capacity_reservation_specification": [
      {
       "capacity_reservation_target": []
      }
     ],
     "credit_specification": [
      {}
     ],
     "ebs_block_device": [],
     "enclave_options": [
      {}
     ],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "maintenance_options": [
      {}
     ],
     "metadata_options": [
      {}
     ],
     "network_interface": [
      {}
     ],
     "private_dns_name_options": [
      {}
     ],
     "root_block_device": [
      {
       "tags": {}
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    }
   },
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "f5_bigip",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_instance"
  },
  {
   "address": "module.bigip.aws_network_interface.mgmt1[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:network-interface/eni-076bb769250ceb723",
     "attachment": [
      {
       "attachment_id": "eni-attach-01973631deaed984e",
       "device_index": 0,
       "instance": "i-0406a65c863a0dc3b"
      }
     ],
     "description": "",
     "id": "eni-076bb769250ceb723",
     "interface_type": "interface",
     "ipv4_prefix_count": 0,
     "ipv4_prefixes": [],
     "ipv6_address_count": 0,
     "ipv6_address_list": [],
     "ipv6_address_list_enabled": false,
     "ipv6_addresses": [],
     "ipv6_prefix_count": 0,
     "ipv6_prefixes": [],
     "mac_address": "06:fb:13:8c:5f:12",
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_name": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.225",
     "private_ip_list": [
      "10.200.10.225"
     ],
     "private_ip_list_enabled": false,
     "private_ips": [
      "10.200.10.225"
     ],
     "private_ips_count": 0,
     "security_groups": [
      "sg-0d296ffafa864943d"
     ],
     "source_dest_check": true,
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "BIGIP-Managemt-Interface-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Managemt-Interface-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     }
    },
    "after_sensitive": {
     "attachment": [
      {}
     ],
     "ipv4_prefixes": [],
     "ipv6_address_list": [],
     "ipv6_addresses": [],
     "ipv6_prefixes": [],
     "private_ip_list": [
      false
     ],
     "private_ips": [
      false
     ],
     "security_groups": [
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:network-interface/eni-076bb769250ceb723",
     "attachment": [
      {
       "attachment_id": "eni-attach-01973631deaed984e",
       "device_index": 0,
       "instance": "i-0406a65c863a0dc3b"
      }
     ],
     "description": "",
     "id": "eni-076bb769250ceb723",
     "interface_type": "interface",
     "ipv4_prefix_count": 0,
     "ipv4_prefixes": [],
     "ipv6_address_count": 0,
     "ipv6_address_list": [],
     "ipv6_address_list_enabled": false,
     "ipv6_addresses": [],
     "ipv6_prefix_count": 0,
     "ipv6_prefixes": [],
     "mac_address": "06:fb:13:8c:5f:12",
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_name": "ip-10-200-10-225.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.225",
     "private_ip_list": [
      "10.200.10.225"
     ],
     "private_ip_list_enabled": false,
     "private_ips": [
      "10.200.10.225"
     ],
     "private_ips_count": 0,
     "security_groups": [
      "sg-0d296ffafa864943d"
     ],
     "source_dest_check": true,
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "BIGIP-Managemt-Interface-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     },
     "tags_all": {
      "Name": "BIGIP-Managemt-Interface-0",
      "Prefix": "bigip-aws-1nicnew-1ab8"
     }
    },
    "before_sensitive": {
     "attachment": [
      {}
     ],
     "ipv4_prefixes": [],
     "ipv6_address_list": [],
     "ipv6_addresses": [],
     "ipv6_prefixes": [],
     "private_ip_list": [
      false
     ],
     "private_ips": [
      false
     ],
     "security_groups": [
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "mgmt1",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_network_interface"
  },
  {
   "address": "module.bigip.random_id.module_id",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "b64_std": "Grg=",
     "b64_url": "Grg",
     "byte_length": 2,
     "dec": "6840",
     "hex": "1ab8",
     "id": "Grg",
     "keepers": null,
     "prefix": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "b64_std": "Grg=",
     "b64_url": "Grg",
     "byte_length": 2,
     "dec": "6840",
     "hex": "1ab8",
     "id": "Grg",
     "keepers": null,
     "prefix": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "module_id",
   "provider_name": "registry.terraform.io/hashicorp/random",
   "type": "random_id"
  },
  {
   "address": "module.bigip.random_string.dynamic_password",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "8PsJ8liwNC8iduER",
     "keepers": null,
     "length": 16,
     "lower": true,
     "min_lower": 1,
     "min_numeric": 1,
     "min_special": 0,
     "min_upper": 1,
     "number": true,
     "numeric": true,
     "override_special": null,
     "result": "8PsJ8liwNC8iduER",
     "special": false,
     "upper": true
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "8PsJ8liwNC8iduER",
     "keepers": null,
     "length": 16,
     "lower": true,
     "min_lower": 1,
     "min_numeric": 1,
     "min_special": 0,
     "min_upper": 1,
     "number": true,
     "numeric": true,
     "override_special": null,
     "result": "8PsJ8liwNC8iduER",
     "special": false,
     "upper": true
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "dynamic_password",
   "provider_name": "registry.terraform.io/hashicorp/random",
   "type": "random_string"
  },
  {
   "address": "module.bigip.time_sleep.wait_for_aws_instance_f5_bigip",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "create_duration": "600s",
     "destroy_duration": null,
     "id": "2023-03-26T21:04:41Z",
     "triggers": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "create_duration": "600s",
     "destroy_duration": null,
     "id": "2023-03-26T21:04:41Z",
     "triggers": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.bigip",
   "name": "wait_for_aws_instance_f5_bigip",
   "provider_name": "registry.terraform.io/hashicorp/time",
   "type": "time_sleep"
  },
  {
   "address": "module.hcp-hvn.hcp_aws_transit_gateway_attachment.tgw",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "created_at": "2023-03-26T20:55:13.000Z",
     "expires_at": "2023-04-02T20:55:13.000Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "provider_transit_gateway_attachment_id": "tgw-attach-02becce94ec4cc5b8",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "state": "ACTIVE",
     "timeouts": null,
     "transit_gateway_attachment_id": "hcp-vault-demo-irukqoel",
     "transit_gateway_id": "tgw-01099067ffc4b2e61"
    },
    "after_sensitive": {
     "resource_share_arn": true
    },
    "after_unknown": {},
    "before": {
     "created_at": "2023-03-26T20:55:13.000Z",
     "expires_at": "2023-04-02T20:55:13.000Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "provider_transit_gateway_attachment_id": "tgw-attach-02becce94ec4cc5b8",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "state": "ACTIVE",
     "timeouts": null,
     "transit_gateway_attachment_id": "hcp-vault-demo-irukqoel",
     "transit_gateway_id": "tgw-01099067ffc4b2e61"
    },
    "before_sensitive": {
     "resource_share_arn": true
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-hvn",
   "name": "tgw",
   "provider_name": "registry.terraform.io/hashicorp/hcp",
   "type": "hcp_aws_transit_gateway_attachment"
  },
  {
   "address": "module.hcp-hvn.hcp_hvn.hvn",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_block": "172.25.16.0/20",
     "cloud_provider": "aws",
     "created_at": "2023-03-26T20:46:34.000Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "provider_account_id": "298208748192",
     "region": "ap-southeast-2",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "state": "STABLE",
     "timeouts": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "cidr_block": "172.25.16.0/20",
     "cloud_provider": "aws",
     "created_at": "2023-03-26T20:46:34.000Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "provider_account_id": "298208748192",
     "region": "ap-southeast-2",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "state": "STABLE",
     "timeouts": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-hvn",
   "name": "hvn",
   "provider_name": "registry.terraform.io/hashicorp/hcp",
   "type": "hcp_hvn"
  },
  {
   "address": "module.hcp-hvn.hcp_hvn_route.route",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "created_at": "2023-03-26T20:55:22.000Z",
     "destination_cidr": "10.200.0.0/16",
     "hvn_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "hvn_route_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
     "state": "ACTIVE",
     "target_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "timeouts": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "created_at": "2023-03-26T20:55:22.000Z",
     "destination_cidr": "10.200.0.0/16",
     "hvn_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.hvn/hcp-vault-demo-irukqoel",
     "hvn_route_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.route/hcp-vault-demo-irukqoel",
     "state": "ACTIVE",
     "target_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.network.tgw-attachment/hcp-vault-demo-irukqoel",
     "timeouts": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-hvn",
   "name": "route",
   "provider_name": "registry.terraform.io/hashicorp/hcp",
   "type": "hcp_hvn_route"
  },
  {
   "address": "module.hcp-vault.hcp_vault_cluster.vault",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "audit_log_config": [],
     "cloud_provider": "aws",
     "cluster_id": "hcp-vault-demo",
     "created_at": "2023-03-26T20:47:43.478Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
     "major_version_upgrade_config": [
      {
       "maintenance_window_day": "",
       "maintenance_window_time": "",
       "upgrade_type": "AUTOMATIC"
      }
     ],
     "metrics_config": [],
     "min_vault_version": null,
     "namespace": "admin",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "paths_filter": null,
     "primary_link": null,
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "public_endpoint": true,
     "region": "ap-southeast-2",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
     "state": "RUNNING",
     "tier": "DEV",
     "timeouts": null,
     "vault_private_endpoint_url": "https://hcp-vault-demo-private-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
     "vault_public_endpoint_url": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
     "vault_version": "v1.12.3"
    },
    "after_sensitive": {
     "audit_log_config": [],
     "major_version_upgrade_config": [
      {}
     ],
     "metrics_config": []
    },
    "after_unknown": {},
    "before": {
     "audit_log_config": [],
     "cloud_provider": "aws",
     "cluster_id": "hcp-vault-demo",
     "created_at": "2023-03-26T20:47:43.478Z",
     "hvn_id": "hcp-vault-demo-irukqoel",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
     "major_version_upgrade_config": [
      {
       "maintenance_window_day": "",
       "maintenance_window_time": "",
       "upgrade_type": "AUTOMATIC"
      }
     ],
     "metrics_config": [],
     "min_vault_version": null,
     "namespace": "admin",
     "organization_id": "4dbb15d0-616a-4427-abd8-dcfb4b1fa836",
     "paths_filter": null,
     "primary_link": null,
     "project_id": "a4c5c8db-b2e8-4af0-a361-70533835df8f",
     "public_endpoint": true,
     "region": "ap-southeast-2",
     "self_link": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo",
     "state": "RUNNING",
     "tier": "DEV",
     "timeouts": null,
     "vault_private_endpoint_url": "https://hcp-vault-demo-private-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
     "vault_public_endpoint_url": "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200",
     "vault_version": "v1.12.3"
    },
    "before_sensitive": {
     "audit_log_config": [],
     "major_version_upgrade_config": [
      {}
     ],
     "metrics_config": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault",
   "name": "vault",
   "provider_name": "registry.terraform.io/hashicorp/hcp",
   "type": "hcp_vault_cluster"
  },
  {
   "address": "module.hcp-vault.hcp_vault_cluster_admin_token.token",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cluster_id": "hcp-vault-demo",
     "created_at": "2023-03-27T07:53:36+11:00",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo/token",
     "timeouts": null,
     "token": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
    },
    "after_sensitive": {
     "token": true
    },
    "after_unknown": {},
    "before": {
     "cluster_id": "hcp-vault-demo",
     "created_at": "2023-03-27T07:53:36+11:00",
     "id": "/project/a4c5c8db-b2e8-4af0-a361-70533835df8f/hashicorp.vault.cluster/hcp-vault-demo/token",
     "timeouts": null,
     "token": "hvs.CAESIJnT306h5wESFRFUTPUNckxUtB7ldSMVawPF_PiRsHCBGicKImh2cy5URUdBMUNKcFBneUVPMjNxRDl1RWh5UW8uZzRNOW8QhgE"
    },
    "before_sensitive": {
     "token": true
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault",
   "name": "token",
   "provider_name": "registry.terraform.io/hashicorp/hcp",
   "type": "hcp_vault_cluster_admin_token"
  },
  {
   "address": "module.hcp-vault-config.aws_iam_access_key.vault_mount_user",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "create_date": "2023-03-26T20:54:06Z",
     "encrypted_secret": null,
     "encrypted_ses_smtp_password_v4": null,
     "id": "AKIA4OQ4C6ZS5G4DPCN4",
     "key_fingerprint": null,
     "pgp_key": null,
     "secret": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
     "ses_smtp_password_v4": "BOisMmY8FGpDaEG4maVtvDhs2AzkFt/SAj5us5NAz6s/",
     "status": "Active",
     "user": "demo-simon.lynch@hashicorp.com"
    },
    "after_sensitive": {
     "secret": true,
     "ses_smtp_password_v4": true
    },
    "after_unknown": {},
    "before": {
     "create_date": "2023-03-26T20:54:06Z",
     "encrypted_secret": null,
     "encrypted_ses_smtp_password_v4": null,
     "id": "AKIA4OQ4C6ZS5G4DPCN4",
     "key_fingerprint": null,
     "pgp_key": null,
     "secret": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
     "ses_smtp_password_v4": "BOisMmY8FGpDaEG4maVtvDhs2AzkFt/SAj5us5NAz6s/",
     "status": "Active",
     "user": "demo-simon.lynch@hashicorp.com"
    },
    "before_sensitive": {
     "secret": true,
     "ses_smtp_password_v4": true
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_mount_user",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_access_key"
  },
  {
   "address": "module.hcp-vault-config.aws_iam_user.vault_mount_user",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::855831148133:user/demo-simon.lynch@hashicorp.com",
     "force_destroy": true,
     "id": "demo-simon.lynch@hashicorp.com",
     "name": "demo-simon.lynch@hashicorp.com",
     "path": "/",
     "permissions_boundary": "arn:aws:iam::855831148133:policy/DemoUser",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIDA4OQ4C6ZS32HZGE3SW"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::855831148133:user/demo-simon.lynch@hashicorp.com",
     "force_destroy": true,
     "id": "demo-simon.lynch@hashicorp.com",
     "name": "demo-simon.lynch@hashicorp.com",
     "path": "/",
     "permissions_boundary": "arn:aws:iam::855831148133:policy/DemoUser",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIDA4OQ4C6ZS32HZGE3SW"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_mount_user",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_user"
  },
  {
   "address": "module.hcp-vault-config.aws_iam_user_policy.vault_mount_user",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "demo-simon.lynch@hashicorp.com:DemoUserInlinePolicy",
     "name": "DemoUserInlinePolicy",
     "name_prefix": null,
     "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"ec2:DescribeInstances\",\"ec2:DescribeRegions\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:ListRoles\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"DemoUserPermissions\"},{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"DemoAssumedRoleCredentialType\"},{\"Action\":[\"sts:GetFederationToken\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sts::855831148133:federated-user/${aws:username}*\",\"Sid\":\"DemoUserFederationCredentialType\"},{\"Action\":[\"iam:CreateUser\"],\"Condition\":{\"StringEquals\":{\"iam:PermissionsBoundary\":\"arn:aws:iam::855831148133:policy/DemoUser\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"CreateChildUser\"},{\"Action\":[\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageAndDeleteChildren\"},{\"Action\":[\"iam:CreateAccessKey\",\"iam:DeleteAccessKey\",\"iam:GetAccessKeyLastUsed\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:UpdateAccessKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageSelfAndChildren\"},{\"Effect\":\"Deny\",\"NotAction\":[\"ec2:DescribeRegions\",\"ec2:DescribeInstances\",\"iam:CreateAccessKey\",\"iam:CreateUser\",\"iam:DeleteAccessKey\",\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:GetAccessKeyLastUsed\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\",\"iam:UpdateAccessKey\",\"sts:AssumeRole\",\"sts:GetFederationToken\"],\"Resource\":\"*\",\"Sid\":\"ExplicitDenyAll\"},{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Deny\",\"NotResource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"ExplicitDenyAssumeRole\"}]}",
     "user": "demo-simon.lynch@hashicorp.com"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "demo-simon.lynch@hashicorp.com:DemoUserInlinePolicy",
     "name": "DemoUserInlinePolicy",
     "name_prefix": null,
     "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"ec2:DescribeInstances\",\"ec2:DescribeRegions\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:ListRoles\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"DemoUserPermissions\"},{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"DemoAssumedRoleCredentialType\"},{\"Action\":[\"sts:GetFederationToken\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sts::855831148133:federated-user/${aws:username}*\",\"Sid\":\"DemoUserFederationCredentialType\"},{\"Action\":[\"iam:CreateUser\"],\"Condition\":{\"StringEquals\":{\"iam:PermissionsBoundary\":\"arn:aws:iam::855831148133:policy/DemoUser\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"CreateChildUser\"},{\"Action\":[\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageAndDeleteChildren\"},{\"Action\":[\"iam:CreateAccessKey\",\"iam:DeleteAccessKey\",\"iam:GetAccessKeyLastUsed\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:UpdateAccessKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::855831148133:user/${aws:username}*\",\"Sid\":\"ManageSelfAndChildren\"},{\"Effect\":\"Deny\",\"NotAction\":[\"ec2:DescribeRegions\",\"ec2:DescribeInstances\",\"iam:CreateAccessKey\",\"iam:CreateUser\",\"iam:DeleteAccessKey\",\"iam:DeleteUser\",\"iam:DeleteUserPolicy\",\"iam:GetAccessKeyLastUsed\",\"iam:GetInstanceProfile\",\"iam:GetRole\",\"iam:GetUser\",\"iam:GetUserPolicy\",\"iam:List*\",\"iam:PutUserPolicy\",\"iam:TagUser\",\"iam:UntagUser\",\"iam:UpdateAccessKey\",\"sts:AssumeRole\",\"sts:GetFederationToken\"],\"Resource\":\"*\",\"Sid\":\"ExplicitDenyAll\"},{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Deny\",\"NotResource\":\"arn:aws:iam::855831148133:role/vault-assumed-role-credentials-demo\",\"Sid\":\"ExplicitDenyAssumeRole\"}]}",
     "user": "demo-simon.lynch@hashicorp.com"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_mount_user",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_user_policy"
  },
  {
   "address": "module.hcp-vault-config.vault_auth_backend.vault_aws_auth",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "accessor": "auth_aws_b2a59c73",
     "description": "",
     "disable_remount": false,
     "id": "aws",
     "local": false,
     "namespace": null,
     "path": "aws",
     "tune": [],
     "type": "aws"
    },
    "after_sensitive": {
     "tune": []
    },
    "after_unknown": {},
    "before": {
     "accessor": "auth_aws_b2a59c73",
     "description": "",
     "disable_remount": false,
     "id": "aws",
     "local": false,
     "namespace": null,
     "path": "aws",
     "tune": [],
     "type": "aws"
    },
    "before_sensitive": {
     "tune": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_aws_auth",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_auth_backend"
  },
  {
   "address": "module.hcp-vault-config.vault_aws_auth_backend_client.vault_aws_client",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "access_key": "AKIA4OQ4C6ZS5G4DPCN4",
     "backend": "aws",
     "ec2_endpoint": "",
     "iam_endpoint": "",
     "iam_server_id_header_value": "",
     "id": "auth/aws/config/client",
     "namespace": null,
     "secret_key": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
     "sts_endpoint": "",
     "sts_region": ""
    },
    "after_sensitive": {
     "access_key": true,
     "secret_key": true
    },
    "after_unknown": {},
    "before": {
     "access_key": "AKIA4OQ4C6ZS5G4DPCN4",
     "backend": "aws",
     "ec2_endpoint": "",
     "iam_endpoint": "",
     "iam_server_id_header_value": "",
     "id": "auth/aws/config/client",
     "namespace": null,
     "secret_key": "G4OKYkh8e5EqeW/yJZFQUNVjGaUcNyFkd+Cs3dWu",
     "sts_endpoint": "",
     "sts_region": ""
    },
    "before_sensitive": {
     "access_key": true,
     "secret_key": true
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_aws_client",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_aws_auth_backend_client"
  },
  {
   "address": "module.hcp-vault-config.vault_aws_auth_backend_role.vault_ec2_auth_role",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allow_instance_migration": false,
     "auth_type": "ec2",
     "backend": "aws",
     "bound_account_ids": [],
     "bound_ami_ids": [
      "ami-05f998315cca9bfe3"
     ],
     "bound_ec2_instance_ids": [],
     "bound_iam_instance_profile_arns": [],
     "bound_iam_principal_arns": [],
     "bound_iam_role_arns": [],
     "bound_regions": [],
     "bound_subnet_ids": [],
     "bound_vpc_ids": [],
     "disallow_reauthentication": false,
     "id": "auth/aws/role/f5-device-role",
     "inferred_aws_region": "",
     "inferred_entity_type": "",
     "namespace": null,
     "resolve_aws_unique_ids": true,
     "role": "f5-device-role",
     "role_id": "71e4bc43-2ad0-4401-243e-7b4258cd89a9",
     "role_tag": "",
     "token_bound_cidrs": [],
     "token_explicit_max_ttl": 0,
     "token_max_ttl": 120,
     "token_no_default_policy": false,
     "token_num_uses": 0,
     "token_period": 0,
     "token_policies": [
      "cert-policy"
     ],
     "token_ttl": 60,
     "token_type": "default"
    },
    "after_sensitive": {
     "bound_account_ids": [],
     "bound_ami_ids": [
      false
     ],
     "bound_ec2_instance_ids": [],
     "bound_iam_instance_profile_arns": [],
     "bound_iam_principal_arns": [],
     "bound_iam_role_arns": [],
     "bound_regions": [],
     "bound_subnet_ids": [],
     "bound_vpc_ids": [],
     "token_bound_cidrs": [],
     "token_policies": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "allow_instance_migration": false,
     "auth_type": "ec2",
     "backend": "aws",
     "bound_account_ids": [],
     "bound_ami_ids": [
      "ami-05f998315cca9bfe3"
     ],
     "bound_ec2_instance_ids": [],
     "bound_iam_instance_profile_arns": [],
     "bound_iam_principal_arns": [],
     "bound_iam_role_arns": [],
     "bound_regions": [],
     "bound_subnet_ids": [],
     "bound_vpc_ids": [],
     "disallow_reauthentication": false,
     "id": "auth/aws/role/f5-device-role",
     "inferred_aws_region": "",
     "inferred_entity_type": "",
     "namespace": null,
     "resolve_aws_unique_ids": true,
     "role": "f5-device-role",
     "role_id": "71e4bc43-2ad0-4401-243e-7b4258cd89a9",
     "role_tag": "",
     "token_bound_cidrs": [],
     "token_explicit_max_ttl": 0,
     "token_max_ttl": 120,
     "token_no_default_policy": false,
     "token_num_uses": 0,
     "token_period": 0,
     "token_policies": [
      "cert-policy"
     ],
     "token_ttl": 60,
     "token_type": "default"
    },
    "before_sensitive": {
     "bound_account_ids": [],
     "bound_ami_ids": [
      false
     ],
     "bound_ec2_instance_ids": [],
     "bound_iam_instance_profile_arns": [],
     "bound_iam_principal_arns": [],
     "bound_iam_role_arns": [],
     "bound_regions": [],
     "bound_subnet_ids": [],
     "bound_vpc_ids": [],
     "token_bound_cidrs": [],
     "token_policies": [
      false
     ]
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault_ec2_auth_role",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_aws_auth_backend_role"
  },
  {
   "address": "module.hcp-vault-config.vault_kv_secret_v2.f5",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cas": null,
     "custom_metadata": [
      {
       "cas_required": false,
       "data": {},
       "delete_version_after": 0,
       "max_versions": 0
      }
     ],
     "data": {
      "f5admin": "bigipuser",
      "f5password": "8PsJ8liwNC8iduER"
     },
     "data_json": "{\"f5admin\":\"bigipuser\",\"f5password\":\"8PsJ8liwNC8iduER\"}",
     "delete_all_versions": false,
     "disable_read": false,
     "id": "network/data/f5admin",
     "metadata": {
      "created_time": "2023-03-26T20:54:26.890357196Z",
      "custom_metadata": "null",
      "deletion_time": "",
      "destroyed": "false",
      "version": "1"
     },
     "mount": "network",
     "name": "f5admin",
     "namespace": null,
     "options": null,
     "path": "network/data/f5admin"
    },
    "after_sensitive": {
     "custom_metadata": [
      {
       "data": {}
      }
     ],
     "data": true,
     "data_json": true,
     "metadata": {}
    },
    "after_unknown": {},
    "before": {
     "cas": null,
     "custom_metadata": [
      {
       "cas_required": false,
       "data": {},
       "delete_version_after": 0,
       "max_versions": 0
      }
     ],
     "data": {
      "f5admin": "bigipuser",
      "f5password": "8PsJ8liwNC8iduER"
     },
     "data_json": "{\"f5admin\":\"bigipuser\",\"f5password\":\"8PsJ8liwNC8iduER\"}",
     "delete_all_versions": false,
     "disable_read": false,
     "id": "network/data/f5admin",
     "metadata": {
      "created_time": "2023-03-26T20:54:26.890357196Z",
      "custom_metadata": "null",
      "deletion_time": "",
      "destroyed": "false",
      "version": "1"
     },
     "mount": "network",
     "name": "f5admin",
     "namespace": null,
     "options": null,
     "path": "network/data/f5admin"
    },
    "before_sensitive": {
     "custom_metadata": [
      {
       "data": {}
      }
     ],
     "data": true,
     "data_json": true,
     "metadata": {}
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "f5",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_kv_secret_v2"
  },
  {
   "address": "module.hcp-vault-config.vault_mount.kvv2",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "accessor": "kv_61e304d2",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 0,
     "description": "KV Version 2 secret engine mount",
     "external_entropy_access": false,
     "id": "network",
     "local": false,
     "max_lease_ttl_seconds": 0,
     "namespace": null,
     "options": {
      "version": "2"
     },
     "path": "network",
     "seal_wrap": false,
     "type": "kv"
    },
    "after_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    },
    "after_unknown": {},
    "before": {
     "accessor": "kv_61e304d2",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 0,
     "description": "KV Version 2 secret engine mount",
     "external_entropy_access": false,
     "id": "network",
     "local": false,
     "max_lease_ttl_seconds": 0,
     "namespace": null,
     "options": {
      "version": "2"
     },
     "path": "network",
     "seal_wrap": false,
     "type": "kv"
    },
    "before_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "kvv2",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_mount"
  },
  {
   "address": "module.hcp-vault-config.vault_mount.pki_intermediate",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "accessor": "pki_c56565d3",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 2678400,
     "description": "",
     "external_entropy_access": false,
     "id": "pki_intermediate",
     "local": false,
     "max_lease_ttl_seconds": 160704000,
     "namespace": null,
     "options": {},
     "path": "pki_intermediate",
     "seal_wrap": false,
     "type": "pki"
    },
    "after_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    },
    "after_unknown": {},
    "before": {
     "accessor": "pki_c56565d3",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 2678400,
     "description": "",
     "external_entropy_access": false,
     "id": "pki_intermediate",
     "local": false,
     "max_lease_ttl_seconds": 160704000,
     "namespace": null,
     "options": {},
     "path": "pki_intermediate",
     "seal_wrap": false,
     "type": "pki"
    },
    "before_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "pki_intermediate",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_mount"
  },
  {
   "address": "module.hcp-vault-config.vault_mount.pki_root",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "accessor": "pki_79cdd510",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 34819200,
     "description": "",
     "external_entropy_access": false,
     "id": "pki_root",
     "local": false,
     "max_lease_ttl_seconds": 160704000,
     "namespace": null,
     "options": {},
     "path": "pki_root",
     "seal_wrap": false,
     "type": "pki"
    },
    "after_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    },
    "after_unknown": {},
    "before": {
     "accessor": "pki_79cdd510",
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "default_lease_ttl_seconds": 34819200,
     "description": "",
     "external_entropy_access": false,
     "id": "pki_root",
     "local": false,
     "max_lease_ttl_seconds": 160704000,
     "namespace": null,
     "options": {},
     "path": "pki_root",
     "seal_wrap": false,
     "type": "pki"
    },
    "before_sensitive": {
     "allowed_managed_keys": [],
     "audit_non_hmac_request_keys": [],
     "audit_non_hmac_response_keys": [],
     "options": {}
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "pki_root",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_mount"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "backend": "pki_root",
     "crl_distribution_points": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/crl"
     ],
     "id": "pki_root/config/urls",
     "issuing_certificates": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/ca"
     ],
     "namespace": null,
     "ocsp_servers": []
    },
    "after_sensitive": {
     "crl_distribution_points": [
      true
     ],
     "issuing_certificates": [
      true
     ],
     "ocsp_servers": []
    },
    "after_unknown": {},
    "before": {
     "backend": "pki_root",
     "crl_distribution_points": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/crl"
     ],
     "id": "pki_root/config/urls",
     "issuing_certificates": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_root/ca"
     ],
     "namespace": null,
     "ocsp_servers": []
    },
    "before_sensitive": {
     "crl_distribution_points": [
      true
     ],
     "issuing_certificates": [
      true
     ],
     "ocsp_servers": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "config_urls",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_config_urls"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_config_urls.config_urls_int",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "backend": "pki_intermediate",
     "crl_distribution_points": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/crl"
     ],
     "id": "pki_intermediate/config/urls",
     "issuing_certificates": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/ca"
     ],
     "namespace": null,
     "ocsp_servers": []
    },
    "after_sensitive": {
     "crl_distribution_points": [
      true
     ],
     "issuing_certificates": [
      true
     ],
     "ocsp_servers": []
    },
    "after_unknown": {},
    "before": {
     "backend": "pki_intermediate",
     "crl_distribution_points": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/crl"
     ],
     "id": "pki_intermediate/config/urls",
     "issuing_certificates": [
      "https://hcp-vault-demo-public-vault-d2b2da89.c4a2de43.z1.hashicorp.cloud:8200/v1/pki_intermediate/ca"
     ],
     "namespace": null,
     "ocsp_servers": []
    },
    "before_sensitive": {
     "crl_distribution_points": [
      true
     ],
     "issuing_certificates": [
      true
     ],
     "ocsp_servers": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "config_urls_int",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_config_urls"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_cert_request.intermediate",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "add_basic_constraints": false,
     "alt_names": null,
     "backend": "pki_intermediate",
     "common_name": "ca.acme.hashicorp.demo",
     "country": null,
     "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
     "exclude_cn_from_sans": null,
     "format": "pem",
     "id": "pki_intermediate/intermediate/generate/internal",
     "ip_sans": null,
     "key_bits": 2048,
     "key_type": "rsa",
     "locality": null,
     "managed_key_id": null,
     "managed_key_name": null,
     "namespace": null,
     "organization": null,
     "other_sans": null,
     "ou": null,
     "postal_code": null,
     "private_key": null,
     "private_key_format": "der",
     "private_key_type": null,
     "province": null,
     "street_address": null,
     "type": "internal",
     "uri_sans": null
    },
    "after_sensitive": {
     "private_key": true
    },
    "after_unknown": {},
    "before": {
     "add_basic_constraints": false,
     "alt_names": null,
     "backend": "pki_intermediate",
     "common_name": "ca.acme.hashicorp.demo",
     "country": null,
     "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
     "exclude_cn_from_sans": null,
     "format": "pem",
     "id": "pki_intermediate/intermediate/generate/internal",
     "ip_sans": null,
     "key_bits": 2048,
     "key_type": "rsa",
     "locality": null,
     "managed_key_id": null,
     "managed_key_name": null,
     "namespace": null,
     "organization": null,
     "other_sans": null,
     "ou": null,
     "postal_code": null,
     "private_key": null,
     "private_key_format": "der",
     "private_key_type": null,
     "province": null,
     "street_address": null,
     "type": "internal",
     "uri_sans": null
    },
    "before_sensitive": {
     "private_key": true
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "intermediate",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_intermediate_cert_request"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_intermediate_set_signed.intermediate",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "backend": "pki_intermediate",
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
     "id": "pki_intermediate/intermediate/set-signed",
     "namespace": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "backend": "pki_intermediate",
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
     "id": "pki_intermediate/intermediate/set-signed",
     "namespace": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "intermediate",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_intermediate_set_signed"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_role.role",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allow_any_name": false,
     "allow_bare_domains": false,
     "allow_glob_domains": false,
     "allow_ip_sans": true,
     "allow_localhost": true,
     "allow_subdomains": true,
     "allowed_domains": [
      "f5demo.com"
     ],
     "allowed_domains_template": false,
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "backend": "pki_intermediate",
     "basic_constraints_valid_for_non_ca": false,
     "client_flag": true,
     "code_signing_flag": false,
     "country": [],
     "email_protection_flag": false,
     "enforce_hostnames": true,
     "ext_key_usage": [],
     "generate_lease": false,
     "id": "pki_intermediate/roles/f5demo",
     "key_bits": 4096,
     "key_type": "rsa",
     "key_usage": [
      "DigitalSignature",
      "KeyAgreement",
      "KeyEncipherment"
     ],
     "locality": [],
     "max_ttl": "0",
     "name": "f5demo",
     "namespace": null,
     "no_store": false,
     "not_before_duration": "0s",
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "policy_identifiers": null,
     "postal_code": [],
     "province": [],
     "require_cn": true,
     "server_flag": true,
     "street_address": [],
     "ttl": "600",
     "use_csr_common_name": true,
     "use_csr_sans": true
    },
    "after_sensitive": {
     "allowed_domains": [
      false
     ],
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "country": [],
     "ext_key_usage": [],
     "key_usage": [
      false,
      false,
      false
     ],
     "locality": [],
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "postal_code": [],
     "province": [],
     "street_address": []
    },
    "after_unknown": {},
    "before": {
     "allow_any_name": false,
     "allow_bare_domains": false,
     "allow_glob_domains": false,
     "allow_ip_sans": true,
     "allow_localhost": true,
     "allow_subdomains": true,
     "allowed_domains": [
      "f5demo.com"
     ],
     "allowed_domains_template": false,
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "backend": "pki_intermediate",
     "basic_constraints_valid_for_non_ca": false,
     "client_flag": true,
     "code_signing_flag": false,
     "country": [],
     "email_protection_flag": false,
     "enforce_hostnames": true,
     "ext_key_usage": [],
     "generate_lease": false,
     "id": "pki_intermediate/roles/f5demo",
     "key_bits": 4096,
     "key_type": "rsa",
     "key_usage": [
      "DigitalSignature",
      "KeyAgreement",
      "KeyEncipherment"
     ],
     "locality": [],
     "max_ttl": "0",
     "name": "f5demo",
     "namespace": null,
     "no_store": false,
     "not_before_duration": "0s",
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "policy_identifiers": null,
     "postal_code": [],
     "province": [],
     "require_cn": true,
     "server_flag": true,
     "street_address": [],
     "ttl": "600",
     "use_csr_common_name": true,
     "use_csr_sans": true
    },
    "before_sensitive": {
     "allowed_domains": [
      false
     ],
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "country": [],
     "ext_key_usage": [],
     "key_usage": [
      false,
      false,
      false
     ],
     "locality": [],
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "postal_code": [],
     "province": [],
     "street_address": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "role",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_role"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_role.vault-self",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allow_any_name": true,
     "allow_bare_domains": false,
     "allow_glob_domains": false,
     "allow_ip_sans": true,
     "allow_localhost": true,
     "allow_subdomains": false,
     "allowed_domains": [],
     "allowed_domains_template": false,
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "backend": "pki_intermediate",
     "basic_constraints_valid_for_non_ca": false,
     "client_flag": true,
     "code_signing_flag": false,
     "country": [],
     "email_protection_flag": false,
     "enforce_hostnames": true,
     "ext_key_usage": [],
     "generate_lease": false,
     "id": "pki_intermediate/roles/vault-self",
     "key_bits": 2048,
     "key_type": "rsa",
     "key_usage": [
      "DigitalSignature",
      "KeyAgreement",
      "KeyEncipherment"
     ],
     "locality": [],
     "max_ttl": "0",
     "name": "vault-self",
     "namespace": null,
     "no_store": false,
     "not_before_duration": "0s",
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "policy_identifiers": null,
     "postal_code": [],
     "province": [],
     "require_cn": true,
     "server_flag": true,
     "street_address": [],
     "ttl": "94608000",
     "use_csr_common_name": true,
     "use_csr_sans": true
    },
    "after_sensitive": {
     "allowed_domains": [],
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "country": [],
     "ext_key_usage": [],
     "key_usage": [
      false,
      false,
      false
     ],
     "locality": [],
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "postal_code": [],
     "province": [],
     "street_address": []
    },
    "after_unknown": {},
    "before": {
     "allow_any_name": true,
     "allow_bare_domains": false,
     "allow_glob_domains": false,
     "allow_ip_sans": true,
     "allow_localhost": true,
     "allow_subdomains": false,
     "allowed_domains": [],
     "allowed_domains_template": false,
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "backend": "pki_intermediate",
     "basic_constraints_valid_for_non_ca": false,
     "client_flag": true,
     "code_signing_flag": false,
     "country": [],
     "email_protection_flag": false,
     "enforce_hostnames": true,
     "ext_key_usage": [],
     "generate_lease": false,
     "id": "pki_intermediate/roles/vault-self",
     "key_bits": 2048,
     "key_type": "rsa",
     "key_usage": [
      "DigitalSignature",
      "KeyAgreement",
      "KeyEncipherment"
     ],
     "locality": [],
     "max_ttl": "0",
     "name": "vault-self",
     "namespace": null,
     "no_store": false,
     "not_before_duration": "0s",
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "policy_identifiers": null,
     "postal_code": [],
     "province": [],
     "require_cn": true,
     "server_flag": true,
     "street_address": [],
     "ttl": "94608000",
     "use_csr_common_name": true,
     "use_csr_sans": true
    },
    "before_sensitive": {
     "allowed_domains": [],
     "allowed_other_sans": [],
     "allowed_serial_numbers": [],
     "allowed_uri_sans": [],
     "country": [],
     "ext_key_usage": [],
     "key_usage": [
      false,
      false,
      false
     ],
     "locality": [],
     "organization": [],
     "ou": [],
     "policy_identifier": [],
     "postal_code": [],
     "province": [],
     "street_address": []
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "vault-self",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_role"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_root_cert.self-signing-cert",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alt_names": null,
     "backend": "pki_root",
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "common_name": "Root CA",
     "country": null,
     "exclude_cn_from_sans": true,
     "format": "pem",
     "id": "pki_root/root/generate/internal",
     "ip_sans": null,
     "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "key_bits": 4096,
     "key_type": "rsa",
     "locality": null,
     "managed_key_id": null,
     "managed_key_name": null,
     "max_path_length": -1,
     "namespace": null,
     "organization": "acme Demo Org",
     "other_sans": null,
     "ou": "acme Orgnisation Unit",
     "permitted_dns_domains": null,
     "postal_code": null,
     "private_key_format": "der",
     "province": null,
     "serial": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
     "serial_number": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
     "street_address": null,
     "ttl": "160704000",
     "type": "internal",
     "uri_sans": null
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "alt_names": null,
     "backend": "pki_root",
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "common_name": "Root CA",
     "country": null,
     "exclude_cn_from_sans": true,
     "format": "pem",
     "id": "pki_root/root/generate/internal",
     "ip_sans": null,
     "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "key_bits": 4096,
     "key_type": "rsa",
     "locality": null,
     "managed_key_id": null,
     "managed_key_name": null,
     "max_path_length": -1,
     "namespace": null,
     "organization": "acme Demo Org",
     "other_sans": null,
     "ou": "acme Orgnisation Unit",
     "permitted_dns_domains": null,
     "postal_code": null,
     "private_key_format": "der",
     "province": null,
     "serial": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
     "serial_number": "59:2a:45:1f:1b:4d:28:6c:c2:69:43:d6:72:15:02:48:40:08:7d:bf",
     "street_address": null,
     "ttl": "160704000",
     "type": "internal",
     "uri_sans": null
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "self-signing-cert",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_root_cert"
  },
  {
   "address": "module.hcp-vault-config.vault_pki_secret_backend_root_sign_intermediate.root",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alt_names": null,
     "backend": "pki_root",
     "ca_chain": [
      "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
      "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----"
     ],
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
     "certificate_bundle": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "common_name": "ca.acme.hashicorp.demo",
     "country": null,
     "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
     "exclude_cn_from_sans": true,
     "format": "pem",
     "id": "pki_root/ca.acme.hashicorp.demo",
     "ip_sans": null,
     "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "locality": null,
     "max_path_length": -1,
     "namespace": null,
     "organization": "acme Demo Org",
     "other_sans": null,
     "ou": "acme Orgnisation Unit",
     "permitted_dns_domains": null,
     "postal_code": null,
     "province": null,
     "revoke": false,
     "serial": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
     "serial_number": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
     "street_address": null,
     "ttl": "160704000",
     "uri_sans": null,
     "use_csr_values": false
    },
    "after_sensitive": {
     "ca_chain": [
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "alt_names": null,
     "backend": "pki_root",
     "ca_chain": [
      "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
      "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----"
     ],
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----",
     "certificate_bundle": "-----BEGIN CERTIFICATE-----\nMIIFgjCCA2qgAwIBAgIUaK/bSzfd6i3AQj26CmHrZa2yCxgwDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQxMlowWTEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MR8wHQYDVQQDExZjYS5hY21lLmhhc2hp\nY29ycC5kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvi9SlBB0\nNBE8zbGQrC7m17GtBeBYV8d7EVf1Pxhh17vxrGwQOqW1+x/OIC5GtufhsN/HvWvV\nnOKTsDV8quErhcqZg7A1Obk/FlL/Cy7gWXYy5GRemEEWRvL9ksO0iP0AgdmVunJw\nzUc29sN7AJFhVynecDgEwqTYx+/tMr0FzjiD7WbjB8i0GxGXJ32ERvhfGWjg+e2e\nh9/ZJ4TeIlo9pEfuh1zSUhUlsxspBHfvqBX+I4GI8iiW9jE/b3P1wkuAIZjcNbKf\n/heH6sSve92E9G8qo55rpWTTy9Jr0V5NhXLjDEafoCCVFQoioFs25Z/mix0UcA9A\niB7zY0vFjhch4QIDAQABo4IBTzCCAUswDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPIFALsgw6a8SonLCRt12EIhhDHLMB8GA1UdIwQY\nMBaAFPPp79FJ2kqRO10HZ2nqIZffNkijMHgGCCsGAQUFBwEBBGwwajBoBggrBgEF\nBQcwAoZcaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJsaWMtdmF1bHQtZDJiMmRh\nODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgyMDAvdjEvcGtpX3Jvb3Qv\nY2EwbgYDVR0fBGcwZTBjoGGgX4ZdaHR0cHM6Ly9oY3AtdmF1bHQtZGVtby1wdWJs\naWMtdmF1bHQtZDJiMmRhODkuYzRhMmRlNDMuejEuaGFzaGljb3JwLmNsb3VkOjgy\nMDAvdjEvcGtpX3Jvb3QvY3JsMA0GCSqGSIb3DQEBCwUAA4ICAQABCecwV61c2OSR\nI0U3+DGFaz/wp/1UrZo/sy45Y6W08D3wxg/abjh+X1R16k0opq4w8I/sShm83HUV\nsd5wFwyemQBzs/z+bUGN/4aFxifd152CexQcD3peBUwofbp2KHM2OEoehU+znjrG\nkHV6zPDp3EE2XUOnZ4XkB9SJ7UohyyDUTsxLBePP34+kZbIhN2CZ/1u6SqGB6Y/s\nq5iqwYHTlqSr9gN9rMwCxL+gqw1Cgs9Zc1yR9bwjYqtBGZVZaWs3BYFLr77NmPwL\n89E4gkJhVzvkG5HKCtWz7CWUVG6t6wKObzvQW5HQsWNpWsiC9kSFrRxvDkiL8CNi\nAfyECtN/TSewfPXQ0ifHJvu3L1EFwV3dH2c02ChmJ9kTNOg5Lt7Z/4E06qLBAHTH\neig5EWwsTlEEwYbvrZhx14lobnqUr6BIauX0wbLqLL5k65sCXfnBm7C1yNBCIebT\namRfuE0XGRKjngsCPbjwqQaVPPK6GHrJqZSMEONbMrIt2husmEREDXIm/hjgRX4o\n09jwpTbsGGL4xIode3IfTOIYdwudf6NzLYRpukYHzqaL9yUsRUi1AhO795CJS+at\nMGXRZUXVODkAqBozDgt8KKONvc7OFIKI0OjW8HdDpuPSPwQl9ORHqSVb0Sabd/Os\nNrl05F61nDQOL9AZX/P/Jz3HbPMLuw==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "common_name": "ca.acme.hashicorp.demo",
     "country": null,
     "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIICmjCCAYICAQAwITEfMB0GA1UEAxMWY2EuYWNtZS5oYXNoaWNvcnAuZGVtbzCC\nASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4vUpQQdDQRPM2xkKwu5tex\nrQXgWFfHexFX9T8YYde78axsEDqltfsfziAuRrbn4bDfx71r1Zzik7A1fKrhK4XK\nmYOwNTm5PxZS/wsu4Fl2MuRkXphBFkby/ZLDtIj9AIHZlbpycM1HNvbDewCRYVcp\n3nA4BMKk2Mfv7TK9Bc44g+1m4wfItBsRlyd9hEb4Xxlo4Pntnoff2SeE3iJaPaRH\n7odc0lIVJbMbKQR376gV/iOBiPIolvYxP29z9cJLgCGY3DWyn/4Xh+rEr3vdhPRv\nKqOea6Vk08vSa9FeTYVy4wxGn6AglRUKIqBbNuWf5osdFHAPQIge82NLxY4XIeEC\nAwEAAaA0MDIGCSqGSIb3DQEJDjElMCMwIQYDVR0RBBowGIIWY2EuYWNtZS5oYXNo\naWNvcnAuZGVtbzANBgkqhkiG9w0BAQsFAAOCAQEAjiC9iPxXMnpqpZgVWn/lla80\n8Mc2w4Py0LvnAhC8CyFyaFFhfQ1Z7P6CqgBVNpihGV86UuXTHPt+cIF6xsCWvzbv\nEVpLD1XqUbHw/56a0PbmgIevZJuWKuZDcAtJLEqIzBsF8X5KPIb3vML3VPBJECsI\n5Ozy0+DYWxX+f8bGUk6sqb7Y42LdN7JGith6ZYaG4D6gBrPQ3zQRt76w+VZQI/+n\nw0fKy/2RmhduO3opeYg0+XDsPPcpOywR8Twh+qH/DtLvVgKizk2c+t6pZlXOrYcW\netaxljf5I+SF198p1Z3orNIFO9sWgERRNsE+wQu0J7+Toexs4mYHWRDqKe4a1Q==\n-----END CERTIFICATE REQUEST-----",
     "exclude_cn_from_sans": true,
     "format": "pem",
     "id": "pki_root/ca.acme.hashicorp.demo",
     "ip_sans": null,
     "issuing_ca": "-----BEGIN CERTIFICATE-----\nMIIFhTCCA22gAwIBAgIUWSpFHxtNKGzCaUPWchUCSEAIfb8wDQYJKoZIhvcNAQEL\nBQAwSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UECxMVYWNtZSBPcmdu\naXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMB4XDTIzMDMyNjIwNTM0MloX\nDTI4MDQyODIwNTQwOFowSjEWMBQGA1UEChMNYWNtZSBEZW1vIE9yZzEeMBwGA1UE\nCxMVYWNtZSBPcmduaXNhdGlvbiBVbml0MRAwDgYDVQQDEwdSb290IENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApSK/v8sqZXqnEBBfdx0Y7q17FhnZ\nn4SKRfoBkoNlf1An1R6V/aWm0HM7u7jdig1NuuktRNAcu9X3ujGSP/jF0NGPVDo0\nqF7tYHwTiAaudAPfeGbi0Zb8JvIBW22dG7MtjyeGeVbIFNSS9aiIBfXiunGQCcNM\nvI0cH+hVN4EpzJTqdnGLHiyfvnQeh6BWslxazvHjneNcZ7JSa7CYYP1ds7Ta9jtK\njLIJFKpInjE8ncdkUBxP9Rf/bSm9zyjGAbmLv9lYpR3XX8vgIpl/jxkYhN95UMju\naMqMB23IVBHlL17/Qd3RXTuYKi+Y6cuNEgEMvlEllBRXAUORG+WO5BxOk7IUH+ZF\nbiS8vGOj02B7GO3W/kCoCrp+Tlt6XUGk6Xu+JYOqkKNTeBEL614/pGdPz3Ku0R3b\nC2lDs9TuFtrAwFe5vceWdbnkAGZwL6hpq2Js4p7HqXkbtnkMsOISCtktTsPf7aLQ\nV0IGIwv8R1PL9kfB2AriyStOzXfqLDPyEX21m2bB1rAtEOiIVI3qRnWhZi0FpkaO\n/gOboXlvYQ9GIKHcEgkBZL9cj+p7DJ2z41vP2LPcX3rT7g9/tvEDFw2zAUzWR+3T\nHahsEXwMazoz4opRUWCcAcqdAG0czaFT+pk+xfxC/uM39XwFox5g7j5sI6davRTK\n2MUYXSiuBfqp6VkCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wHQYDVR0OBBYEFPPp79FJ2kqRO10HZ2nqIZffNkijMB8GA1UdIwQYMBaA\nFPPp79FJ2kqRO10HZ2nqIZffNkijMA0GCSqGSIb3DQEBCwUAA4ICAQCUMQGNHteA\nRkrL3SMGXb0ufg0xk0BbO5Veaxer1X3gKuWCsOS1Zgv3KEMOCMoWJweyt4J3McRe\nK0O6S72PQPTNJ/xTLBQ2HklIhlD0kYbRKzqxfONNSnmEUnw6VTSkFIufbeKNggXG\n8cLW0/QCS8DOku31FvYWiICZDo/L8gdoOPh/tVc9Kb1N+38Xosd58C0E9oV8BNcZ\ndpLYByuTUSrrpNS6GurT5Sfx9D2A8YXCXq5MA82DmaJcj72YgpNXfhQyn4tHjAu6\nbTM4qoLe4tDKbLYalGqmlvH1cCk30fjsUs3ptig8rQhYYjlSk20G8lkW3oU1CMEJ\nGZJeChkn2P6LRrBSbGIjoqsyscM6Qm5ZMR4aQGa/tIS5FsttJFPXWkDNbR8DhuO/\nfu5+u4RB4dJJDtETbmjk6iEIwJrPJKq7ON6tTJh5ZoUOwBp5v1bCZFxkMuNRwogt\n7PN7CuUyw3AoovpJb98+eMKgTgKjY1cUizDOyIpUo8mxrGH5bbMfzV0mCa+FXd8L\nXYIem6Zs8OUCLqLsXeAJbd2CATXDH+q5IpMjXJXAqe+kAB+GDdr9yTsW7f//Qe7C\n7Ndp+GlVxyxqBF+74dDjPwbWrx68GnXajwCarYqxogQ82LzUsQkFH6K8fHD5I35s\npldCjUrif/Z6jgNCrkkWg/j1JwrThdmESw==\n-----END CERTIFICATE-----",
     "locality": null,
     "max_path_length": -1,
     "namespace": null,
     "organization": "acme Demo Org",
     "other_sans": null,
     "ou": "acme Orgnisation Unit",
     "permitted_dns_domains": null,
     "postal_code": null,
     "province": null,
     "revoke": false,
     "serial": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
     "serial_number": "68:af:db:4b:37:dd:ea:2d:c0:42:3d:ba:0a:61:eb:65:ad:b2:0b:18",
     "street_address": null,
     "ttl": "160704000",
     "uri_sans": null,
     "use_csr_values": false
    },
    "before_sensitive": {
     "ca_chain": [
      false,
      false
     ]
    }
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "root",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_pki_secret_backend_root_sign_intermediate"
  },
  {
   "address": "module.hcp-vault-config.vault_policy.example",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "cert-policy",
     "name": "cert-policy",
     "namespace": null,
     "policy": "# Permits token creation\npath \"auth/token/create\" {\n  capabilities = [\"update\"]\n}\n\n# Permits token renew\npath \"auth/token/renew\" {\n  capabilities = [\"update\"]\n}\n\n# Read-only permission on secret/\npath \"secret/data/*\" {\n  capabilities = [\"read\"]\n}\n\n# Enable secrets engine\npath \"sys/mounts/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n# List enabled secrets engine\npath \"sys/mounts\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n# Work with pki secrets engine\npath \"pki*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\" ]\n}\n\n# read network secrets \npath \"network/data/*\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "cert-policy",
     "name": "cert-policy",
     "namespace": null,
     "policy": "# Permits token creation\npath \"auth/token/create\" {\n  capabilities = [\"update\"]\n}\n\n# Permits token renew\npath \"auth/token/renew\" {\n  capabilities = [\"update\"]\n}\n\n# Read-only permission on secret/\npath \"secret/data/*\" {\n  capabilities = [\"read\"]\n}\n\n# Enable secrets engine\npath \"sys/mounts/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n# List enabled secrets engine\npath \"sys/mounts\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n# Work with pki secrets engine\npath \"pki*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\" ]\n}\n\n# read network secrets \npath \"network/data/*\" {\n  capabilities = [ \"read\", \"list\" ]\n}\n"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.hcp-vault-config",
   "name": "example",
   "provider_name": "registry.terraform.io/hashicorp/vault",
   "type": "vault_policy"
  },
  {
   "address": "module.infra-aws.aws_eip.main",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-0ccbe95029aaa5f4a",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0d4b7ba79f02aceb2",
     "instance": "i-0f7c3db42fc2275fb",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-0dcc0fbd5b02c018b",
     "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
     "private_ip": "10.200.11.212",
     "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "13.211.245.115",
     "public_ipv4_pool": "amazon",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-0ccbe95029aaa5f4a",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-0d4b7ba79f02aceb2",
     "instance": "i-0f7c3db42fc2275fb",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-0dcc0fbd5b02c018b",
     "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
     "private_ip": "10.200.11.212",
     "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "13.211.245.115",
     "public_ipv4_pool": "amazon",
     "tags": {},
     "tags_all": {},
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "main",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.infra-aws.aws_eip_association.main",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
     "allow_reassociation": null,
     "id": "eipassoc-0ccbe95029aaa5f4a",
     "instance_id": "i-0f7c3db42fc2275fb",
     "network_interface_id": "eni-0dcc0fbd5b02c018b",
     "private_ip_address": "10.200.11.212",
     "public_ip": "13.211.245.115"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-0d4b7ba79f02aceb2",
     "allow_reassociation": null,
     "id": "eipassoc-0ccbe95029aaa5f4a",
     "instance_id": "i-0f7c3db42fc2275fb",
     "network_interface_id": "eni-0dcc0fbd5b02c018b",
     "private_ip_address": "10.200.11.212",
     "public_ip": "13.211.245.115"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "main",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip_association"
  },
  {
   "address": "module.infra-aws.aws_iam_instance_profile.ssm_instance_profile",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::855831148133:instance-profile/ssm_instance_profile",
     "create_date": "2023-03-26T20:54:06Z",
     "id": "ssm_instance_profile",
     "name": "ssm_instance_profile",
     "name_prefix": null,
     "path": "/",
     "role": "ssm_role",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIPA4OQ4C6ZSQKO4U3BIN"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::855831148133:instance-profile/ssm_instance_profile",
     "create_date": "2023-03-26T20:54:06Z",
     "id": "ssm_instance_profile",
     "name": "ssm_instance_profile",
     "name_prefix": null,
     "path": "/",
     "role": "ssm_role",
     "tags": {},
     "tags_all": {},
     "unique_id": "AIPA4OQ4C6ZSQKO4U3BIN"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "ssm_instance_profile",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_instance_profile"
  },
  {
   "address": "module.infra-aws.aws_iam_role.ssm_role",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::855831148133:role/ssm_role",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-26T20:54:05Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ssm_role",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
     ],
     "max_session_duration": 3600,
     "name": "ssm_role",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROA4OQ4C6ZSXQFIRZCCI"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::855831148133:role/ssm_role",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-26T20:54:05Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ssm_role",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
     ],
     "max_session_duration": 3600,
     "name": "ssm_role",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROA4OQ4C6ZSXQFIRZCCI"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "ssm_role",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.infra-aws.aws_iam_role_policy_attachment.ssm_policy_attachment",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ssm_role-20230326205407080300000001",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
     "role": "ssm_role"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ssm_role-20230326205407080300000001",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
     "role": "ssm_role"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "ssm_policy_attachment",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.infra-aws.aws_instance.bastion",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "ami": "ami-05f998315cca9bfe3",
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0f7c3db42fc2275fb",
     "associate_public_ip_address": true,
     "availability_zone": "ap-southeast-2b",
     "capacity_reservation_specification": [
      {
       "capacity_reservation_preference": "open",
       "capacity_reservation_target": []
      }
     ],
     "cpu_core_count": 1,
     "cpu_threads_per_core": 2,
     "credit_specification": [
      {
       "cpu_credits": "unlimited"
      }
     ],
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_block_device": [],
     "ebs_optimized": false,
     "enclave_options": [
      {
       "enabled": false
      }
     ],
     "ephemeral_block_device": [],
     "get_password_data": false,
     "hibernation": false,
     "host_id": "",
     "host_resource_group_arn": null,
     "iam_instance_profile": "ssm_instance_profile",
     "id": "i-0f7c3db42fc2275fb",
     "instance_initiated_shutdown_behavior": "stop",
     "instance_state": "running",
     "instance_type": "t3.small",
     "ipv6_address_count": 0,
     "ipv6_addresses": [],
     "key_name": "awsf5demo",
     "launch_template": [],
     "maintenance_options": [
      {
       "auto_recovery": "default"
      }
     ],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_put_response_hop_limit": 1,
       "http_tokens": "optional",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": false,
     "network_interface": [],
     "outpost_arn": "",
     "password_data": "",
     "placement_group": "",
     "placement_partition_number": 0,
     "primary_network_interface_id": "eni-0dcc0fbd5b02c018b",
     "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
     "private_dns_name_options": [
      {
       "enable_resource_name_dns_a_record": false,
       "enable_resource_name_dns_aaaa_record": false,
       "hostname_type": "ip-name"
      }
     ],
     "private_ip": "10.200.11.212",
     "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "13.211.245.115",
     "root_block_device": [
      {
       "delete_on_termination": true,
       "device_name": "/dev/sda1",
       "encrypted": false,
       "iops": 100,
       "kms_key_id": "",
       "tags": {},
       "throughput": 0,
       "volume_id": "vol-0616dc1d48b38a5b8",
       "volume_size": 8,
       "volume_type": "gp2"
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "source_dest_check": true,
     "subnet_id": "subnet-0594f0a7cb5d9addc",
     "tags": {
      "Name": "VaultAgent",
      "TTL": "300",
      "owner": "srlynch"
     },
     "tags_all": {
      "Name": "VaultAgent",
      "TTL": "300",
      "owner": "srlynch"
     },
     "tenancy": "default",
     "timeouts": null,
     "user_data": null,
     "user_data_base64": null,
     "user_data_replace_on_change": false,
     "volume_tags": null,
     "vpc_security_group_ids": [
      "sg-0d296ffafa864943d"
     ]
    },
    "after_sensitive": {
     "capacity_reservation_specification": [
      {
       "capacity_reservation_target": []
      }
     ],
     "credit_specification": [
      {}
     ],
     "ebs_block_device": [],
     "enclave_options": [
      {}
     ],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "maintenance_options": [
      {}
     ],
     "metadata_options": [
      {}
     ],
     "network_interface": [],
     "private_dns_name_options": [
      {}
     ],
     "root_block_device": [
      {
       "tags": {}
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "ami": "ami-05f998315cca9bfe3",
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:instance/i-0f7c3db42fc2275fb",
     "associate_public_ip_address": true,
     "availability_zone": "ap-southeast-2b",
     "capacity_reservation_specification": [
      {
       "capacity_reservation_preference": "open",
       "capacity_reservation_target": []
      }
     ],
     "cpu_core_count": 1,
     "cpu_threads_per_core": 2,
     "credit_specification": [
      {
       "cpu_credits": "unlimited"
      }
     ],
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_block_device": [],
     "ebs_optimized": false,
     "enclave_options": [
      {
       "enabled": false
      }
     ],
     "ephemeral_block_device": [],
     "get_password_data": false,
     "hibernation": false,
     "host_id": "",
     "host_resource_group_arn": null,
     "iam_instance_profile": "ssm_instance_profile",
     "id": "i-0f7c3db42fc2275fb",
     "instance_initiated_shutdown_behavior": "stop",
     "instance_state": "running",
     "instance_type": "t3.small",
     "ipv6_address_count": 0,
     "ipv6_addresses": [],
     "key_name": "awsf5demo",
     "launch_template": [],
     "maintenance_options": [
      {
       "auto_recovery": "default"
      }
     ],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_put_response_hop_limit": 1,
       "http_tokens": "optional",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": false,
     "network_interface": [],
     "outpost_arn": "",
     "password_data": "",
     "placement_group": "",
     "placement_partition_number": 0,
     "primary_network_interface_id": "eni-0dcc0fbd5b02c018b",
     "private_dns": "ip-10-200-11-212.ap-southeast-2.compute.internal",
     "private_dns_name_options": [
      {
       "enable_resource_name_dns_a_record": false,
       "enable_resource_name_dns_aaaa_record": false,
       "hostname_type": "ip-name"
      }
     ],
     "private_ip": "10.200.11.212",
     "public_dns": "ec2-13-211-245-115.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "13.211.245.115",
     "root_block_device": [
      {
       "delete_on_termination": true,
       "device_name": "/dev/sda1",
       "encrypted": false,
       "iops": 100,
       "kms_key_id": "",
       "tags": {},
       "throughput": 0,
       "volume_id": "vol-0616dc1d48b38a5b8",
       "volume_size": 8,
       "volume_type": "gp2"
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "source_dest_check": true,
     "subnet_id": "subnet-0594f0a7cb5d9addc",
     "tags": {
      "Name": "VaultAgent",
      "TTL": "300",
      "owner": "srlynch"
     },
     "tags_all": {
      "Name": "VaultAgent",
      "TTL": "300",
      "owner": "srlynch"
     },
     "tenancy": "default",
     "timeouts": null,
     "user_data": null,
     "user_data_base64": null,
     "user_data_replace_on_change": false,
     "volume_tags": null,
     "vpc_security_group_ids": [
      "sg-0d296ffafa864943d"
     ]
    },
    "before_sensitive": {
     "capacity_reservation_specification": [
      {
       "capacity_reservation_target": []
      }
     ],
     "credit_specification": [
      {}
     ],
     "ebs_block_device": [],
     "enclave_options": [
      {}
     ],
     "ephemeral_block_device": [],
     "ipv6_addresses": [],
     "launch_template": [],
     "maintenance_options": [
      {}
     ],
     "metadata_options": [
      {}
     ],
     "network_interface": [],
     "private_dns_name_options": [
      {}
     ],
     "root_block_device": [
      {
       "tags": {}
      }
     ],
     "secondary_private_ips": [],
     "security_groups": [],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false
     ]
    }
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "bastion",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_instance"
  },
  {
   "address": "module.infra-aws.aws_key_pair.main",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:key-pair/awsf5demo",
     "fingerprint": "suDzOamwyhfOVf6zKgOAYl/qDr+lg6kGNVZxItIs5TY=",
     "id": "awsf5demo",
     "key_name": "awsf5demo",
     "key_name_prefix": "",
     "key_pair_id": "key-034dafd692e0e5d28",
     "key_type": "ed25519",
     "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII8wNgHtY1Lao00trZ8XoweIxa4F9T/wekoP2e2VzZPq simon.lynch@hashicorp.com",
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:key-pair/awsf5demo",
     "fingerprint": "suDzOamwyhfOVf6zKgOAYl/qDr+lg6kGNVZxItIs5TY=",
     "id": "awsf5demo",
     "key_name": "awsf5demo",
     "key_name_prefix": "",
     "key_pair_id": "key-034dafd692e0e5d28",
     "key_type": "ed25519",
     "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII8wNgHtY1Lao00trZ8XoweIxa4F9T/wekoP2e2VzZPq simon.lynch@hashicorp.com",
     "tags": {},
     "tags_all": {}
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "main",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_key_pair"
  },
  {
   "address": "module.infra-aws.aws_route.hcp_hvn_route",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "172.25.16.0/20",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "",
     "id": "r-rtb-0359582849d38acdd4288272982",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0359582849d38acdd",
     "state": "active",
     "timeouts": null,
     "transit_gateway_id": "tgw-01099067ffc4b2e61",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "172.25.16.0/20",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "",
     "id": "r-rtb-0359582849d38acdd4288272982",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0359582849d38acdd",
     "state": "active",
     "timeouts": null,
     "transit_gateway_id": "tgw-01099067ffc4b2e61",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.infra-aws",
   "name": "hcp_hvn_route",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.tfc-agent.aws_cloudwatch_log_group.tfe_agents_ecs[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:logs:ap-southeast-2:855831148133:log-group:tfc_agent-tfe-agents-ecs",
     "id": "tfc_agent-tfe-agents-ecs",
     "kms_key_id": "",
     "name": "tfc_agent-tfe-agents-ecs",
     "name_prefix": "",
     "retention_in_days": 0,
     "skip_destroy": false,
     "tags": {
      "Name": "tfc_agent-tfe-agents-ecs-logs"
     },
     "tags_all": {
      "Name": "tfc_agent-tfe-agents-ecs-logs"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:logs:ap-southeast-2:855831148133:log-group:tfc_agent-tfe-agents-ecs",
     "id": "tfc_agent-tfe-agents-ecs",
     "kms_key_id": "",
     "name": "tfc_agent-tfe-agents-ecs",
     "name_prefix": "",
     "retention_in_days": 0,
     "skip_destroy": false,
     "tags": {
      "Name": "tfc_agent-tfe-agents-ecs-logs"
     },
     "tags_all": {
      "Name": "tfc_agent-tfe-agents-ecs-logs"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "tfe_agents_ecs",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.tfc-agent.aws_ecs_cluster.agents",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "capacity_providers": [],
     "configuration": [],
     "default_capacity_provider_strategy": [],
     "id": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "name": "tfc_agent-cloud-agents-cluster",
     "service_connect_defaults": [],
     "setting": [
      {
       "name": "containerInsights",
       "value": "disabled"
      }
     ],
     "tags": {
      "Name": "tfc_agent-cloud-agents-cluster"
     },
     "tags_all": {
      "Name": "tfc_agent-cloud-agents-cluster"
     }
    },
    "after_sensitive": {
     "capacity_providers": [],
     "configuration": [],
     "default_capacity_provider_strategy": [],
     "service_connect_defaults": [],
     "setting": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "capacity_providers": [],
     "configuration": [],
     "default_capacity_provider_strategy": [],
     "id": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "name": "tfc_agent-cloud-agents-cluster",
     "service_connect_defaults": [],
     "setting": [
      {
       "name": "containerInsights",
       "value": "disabled"
      }
     ],
     "tags": {
      "Name": "tfc_agent-cloud-agents-cluster"
     },
     "tags_all": {
      "Name": "tfc_agent-cloud-agents-cluster"
     }
    },
    "before_sensitive": {
     "capacity_providers": [],
     "configuration": [],
     "default_capacity_provider_strategy": [],
     "service_connect_defaults": [],
     "setting": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "agents",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecs_cluster"
  },
  {
   "address": "module.tfc-agent.aws_ecs_service.agents",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "alarms": [],
     "capacity_provider_strategy": [],
     "cluster": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "deployment_circuit_breaker": [
      {
       "enable": false,
       "rollback": false
      }
     ],
     "deployment_controller": [
      {
       "type": "ECS"
      }
     ],
     "deployment_maximum_percent": 200,
     "deployment_minimum_healthy_percent": 100,
     "desired_count": 1,
     "enable_ecs_managed_tags": false,
     "enable_execute_command": false,
     "force_new_deployment": null,
     "health_check_grace_period_seconds": 0,
     "iam_role": "aws-service-role",
     "id": "arn:aws:ecs:ap-southeast-2:855831148133:service/tfc_agent-cloud-agents-cluster/tfc_agent-cloud-agents-service",
     "launch_type": "FARGATE",
     "load_balancer": [],
     "name": "tfc_agent-cloud-agents-service",
     "network_configuration": [
      {
       "assign_public_ip": false,
       "security_groups": [
        "sg-00c74d72a200ff57b"
       ],
       "subnets": [
        "subnet-029c5ca58ff58d1d7",
        "subnet-0b0c433045e19828c",
        "subnet-0e235bd5870506158"
       ]
      }
     ],
     "ordered_placement_strategy": [],
     "placement_constraints": [],
     "platform_version": "LATEST",
     "propagate_tags": "SERVICE",
     "scheduling_strategy": "REPLICA",
     "service_connect_configuration": [],
     "service_registries": [],
     "tags": {
      "ECS_Launch_Type": "Fargate",
      "Name": "tfc_agent-cloud-agents-service"
     },
     "tags_all": {
      "ECS_Launch_Type": "Fargate",
      "Name": "tfc_agent-cloud-agents-service"
     },
     "task_definition": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
     "timeouts": null,
     "triggers": {},
     "wait_for_steady_state": false
    },
    "after_sensitive": {
     "alarms": [],
     "capacity_provider_strategy": [],
     "deployment_circuit_breaker": [
      {}
     ],
     "deployment_controller": [
      {}
     ],
     "load_balancer": [],
     "network_configuration": [
      {
       "security_groups": [
        false
       ],
       "subnets": [
        false,
        false,
        false
       ]
      }
     ],
     "ordered_placement_strategy": [],
     "placement_constraints": [],
     "service_connect_configuration": [],
     "service_registries": [],
     "tags": {},
     "tags_all": {},
     "triggers": {}
    },
    "after_unknown": {},
    "before": {
     "alarms": [],
     "capacity_provider_strategy": [],
     "cluster": "arn:aws:ecs:ap-southeast-2:855831148133:cluster/tfc_agent-cloud-agents-cluster",
     "deployment_circuit_breaker": [
      {
       "enable": false,
       "rollback": false
      }
     ],
     "deployment_controller": [
      {
       "type": "ECS"
      }
     ],
     "deployment_maximum_percent": 200,
     "deployment_minimum_healthy_percent": 100,
     "desired_count": 1,
     "enable_ecs_managed_tags": false,
     "enable_execute_command": false,
     "force_new_deployment": null,
     "health_check_grace_period_seconds": 0,
     "iam_role": "aws-service-role",
     "id": "arn:aws:ecs:ap-southeast-2:855831148133:service/tfc_agent-cloud-agents-cluster/tfc_agent-cloud-agents-service",
     "launch_type": "FARGATE",
     "load_balancer": [],
     "name": "tfc_agent-cloud-agents-service",
     "network_configuration": [
      {
       "assign_public_ip": false,
       "security_groups": [
        "sg-00c74d72a200ff57b"
       ],
       "subnets": [
        "subnet-029c5ca58ff58d1d7",
        "subnet-0b0c433045e19828c",
        "subnet-0e235bd5870506158"
       ]
      }
     ],
     "ordered_placement_strategy": [],
     "placement_constraints": [],
     "platform_version": "LATEST",
     "propagate_tags": "SERVICE",
     "scheduling_strategy": "REPLICA",
     "service_connect_configuration": [],
     "service_registries": [],
     "tags": {
      "ECS_Launch_Type": "Fargate",
      "Name": "tfc_agent-cloud-agents-service"
     },
     "tags_all": {
      "ECS_Launch_Type": "Fargate",
      "Name": "tfc_agent-cloud-agents-service"
     },
     "task_definition": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
     "timeouts": null,
     "triggers": {},
     "wait_for_steady_state": false
    },
    "before_sensitive": {
     "alarms": [],
     "capacity_provider_strategy": [],
     "deployment_circuit_breaker": [
      {}
     ],
     "deployment_controller": [
      {}
     ],
     "load_balancer": [],
     "network_configuration": [
      {
       "security_groups": [
        false
       ],
       "subnets": [
        false,
        false,
        false
       ]
      }
     ],
     "ordered_placement_strategy": [],
     "placement_constraints": [],
     "service_connect_configuration": [],
     "service_registries": [],
     "tags": {},
     "tags_all": {},
     "triggers": {}
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "agents",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecs_service"
  },
  {
   "address": "module.tfc-agent.aws_ecs_task_definition.agents",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
     "container_definitions": "[{\"cpu\":1024,\"environment\":[{\"name\":\"AGENT_LOG_LEVEL\",\"value\":\"info\"},{\"name\":\"TFC_ADDRESS\",\"value\":\"https://app.terraform.io\"},{\"name\":\"TFC_AGENT_NAME\",\"value\":\"ecs-agent\"},{\"name\":\"TFC_AGENT_TOKEN\",\"value\":\"qbSzJpcdS4bLKw.atlasv1.x7WCLcH0EHcaDZZ57uVhUf6ko8voPJYH9VlKeWJhF6MIkgGeIG6VZ4frDAHJNxUKGSM\"}],\"essential\":true,\"image\":\"hashicorp/tfc-agent:latest\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"tfc_agent-tfe-agents-ecs\",\"awslogs-region\":\"ap-southeast-2\",\"awslogs-stream-prefix\":\"tfc_agent\"}},\"memory\":2048,\"mountPoints\":[],\"name\":\"tfc-agent\",\"portMappings\":[],\"volumesFrom\":[]}]",
     "cpu": "1024",
     "ephemeral_storage": [],
     "execution_role_arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
     "family": "tfc_agent-cloud-agents-task",
     "id": "tfc_agent-cloud-agents-task",
     "inference_accelerator": [],
     "ipc_mode": "",
     "memory": "2048",
     "network_mode": "awsvpc",
     "pid_mode": "",
     "placement_constraints": [],
     "proxy_configuration": [],
     "requires_compatibilities": [
      "FARGATE"
     ],
     "revision": 4,
     "runtime_platform": [],
     "skip_destroy": false,
     "tags": {},
     "tags_all": {},
     "task_role_arn": "",
     "volume": []
    },
    "after_sensitive": {
     "ephemeral_storage": [],
     "inference_accelerator": [],
     "placement_constraints": [],
     "proxy_configuration": [],
     "requires_compatibilities": [
      false
     ],
     "runtime_platform": [],
     "tags": {},
     "tags_all": {},
     "volume": []
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ecs:ap-southeast-2:855831148133:task-definition/tfc_agent-cloud-agents-task:4",
     "container_definitions": "[{\"cpu\":1024,\"environment\":[{\"name\":\"AGENT_LOG_LEVEL\",\"value\":\"info\"},{\"name\":\"TFC_ADDRESS\",\"value\":\"https://app.terraform.io\"},{\"name\":\"TFC_AGENT_NAME\",\"value\":\"ecs-agent\"},{\"name\":\"TFC_AGENT_TOKEN\",\"value\":\"qbSzJpcdS4bLKw.atlasv1.x7WCLcH0EHcaDZZ57uVhUf6ko8voPJYH9VlKeWJhF6MIkgGeIG6VZ4frDAHJNxUKGSM\"}],\"essential\":true,\"image\":\"hashicorp/tfc-agent:latest\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"tfc_agent-tfe-agents-ecs\",\"awslogs-region\":\"ap-southeast-2\",\"awslogs-stream-prefix\":\"tfc_agent\"}},\"memory\":2048,\"mountPoints\":[],\"name\":\"tfc-agent\",\"portMappings\":[],\"volumesFrom\":[]}]",
     "cpu": "1024",
     "ephemeral_storage": [],
     "execution_role_arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
     "family": "tfc_agent-cloud-agents-task",
     "id": "tfc_agent-cloud-agents-task",
     "inference_accelerator": [],
     "ipc_mode": "",
     "memory": "2048",
     "network_mode": "awsvpc",
     "pid_mode": "",
     "placement_constraints": [],
     "proxy_configuration": [],
     "requires_compatibilities": [
      "FARGATE"
     ],
     "revision": 4,
     "runtime_platform": [],
     "skip_destroy": false,
     "tags": {},
     "tags_all": {},
     "task_role_arn": "",
     "volume": []
    },
    "before_sensitive": {
     "ephemeral_storage": [],
     "inference_accelerator": [],
     "placement_constraints": [],
     "proxy_configuration": [],
     "requires_compatibilities": [
      false
     ],
     "runtime_platform": [],
     "tags": {},
     "tags_all": {},
     "volume": []
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "agents",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecs_task_definition"
  },
  {
   "address": "module.tfc-agent.aws_iam_role.ecs_task_execution_role",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-26T20:54:05Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ecsTaskExecutionRole",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
     ],
     "max_session_duration": 3600,
     "name": "ecsTaskExecutionRole",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROA4OQ4C6ZSW244RC2RU"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::855831148133:role/ecsTaskExecutionRole",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-26T20:54:05Z",
     "description": "",
     "force_detach_policies": false,
     "id": "ecsTaskExecutionRole",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
     ],
     "max_session_duration": 3600,
     "name": "ecsTaskExecutionRole",
     "name_prefix": "",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROA4OQ4C6ZSW244RC2RU"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "ecs_task_execution_role",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.tfc-agent.aws_iam_role_policy_attachment.ecs-task-execution-role-policy-attachment",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "ecsTaskExecutionRole-20230326205407106100000002",
     "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
     "role": "ecsTaskExecutionRole"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "ecsTaskExecutionRole-20230326205407106100000002",
     "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
     "role": "ecsTaskExecutionRole"
    },
    "before_sensitive": {}
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "ecs-task-execution-role-policy-attachment",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.tfc-agent.aws_security_group.agents",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-00c74d72a200ff57b",
     "description": "Managed by Terraform",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Allow HTTPS traffic egress.",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      }
     ],
     "id": "sg-00c74d72a200ff57b",
     "ingress": [],
     "name": "tfc_agent-tfc-cloud-agents-sg",
     "name_prefix": "",
     "owner_id": "855831148133",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "tfc_agent-tfc-cloud-agents-sg"
     },
     "tags_all": {
      "Name": "tfc_agent-tfc-cloud-agents-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-00c74d72a200ff57b",
     "description": "Managed by Terraform",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Allow HTTPS traffic egress.",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      }
     ],
     "id": "sg-00c74d72a200ff57b",
     "ingress": [],
     "name": "tfc_agent-tfc-cloud-agents-sg",
     "name_prefix": "",
     "owner_id": "855831148133",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "tfc_agent-tfc-cloud-agents-sg"
     },
     "tags_all": {
      "Name": "tfc_agent-tfc-cloud-agents-sg"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "agents",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.tfc-agent.aws_security_group_rule.egress_https",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Allow HTTPS traffic egress.",
     "from_port": 443,
     "id": "sgrule-2234879437",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-00c74d72a200ff57b",
     "security_group_rule_id": "sgr-07e257c37d8ef346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Allow HTTPS traffic egress.",
     "from_port": 443,
     "id": "sgrule-2234879437",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": null,
     "protocol": "tcp",
     "security_group_id": "sg-00c74d72a200ff57b",
     "security_group_rule_id": "sgr-07e257c37d8ef346c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ]
    }
   },
   "mode": "managed",
   "module_address": "module.tfc-agent",
   "name": "egress_https",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group.this_name_prefix[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-0d296ffafa864943d",
     "description": "Security Group managed by Terraform",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTP",
       "from_port": 80,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 80
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTPS",
       "from_port": 443,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTPS",
       "from_port": 8443,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "SSH",
       "from_port": 22,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Vault",
       "from_port": 8200,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8200
      }
     ],
     "id": "sg-0d296ffafa864943d",
     "ingress": [
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTP",
       "from_port": 80,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 80
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTPS",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTPS",
       "from_port": 8443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "Remote Desktop",
       "from_port": 3389,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 3389
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "SSH",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      }
     ],
     "name": "hcp-vault-demo-irukqoel-all-20230326205416578300000005",
     "name_prefix": "hcp-vault-demo-irukqoel-all-",
     "owner_id": "855831148133",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-all"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-all"
     },
     "timeouts": {
      "create": "10m",
      "delete": "15m"
     },
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {},
     "timeouts": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:security-group/sg-0d296ffafa864943d",
     "description": "Security Group managed by Terraform",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTP",
       "from_port": 80,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 80
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTPS",
       "from_port": 443,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "HTTPS",
       "from_port": 8443,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "SSH",
       "from_port": 22,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Vault",
       "from_port": 8200,
       "ipv6_cidr_blocks": [
        "::/0"
       ],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8200
      }
     ],
     "id": "sg-0d296ffafa864943d",
     "ingress": [
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTP",
       "from_port": 80,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 80
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTPS",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "HTTPS",
       "from_port": 8443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 8443
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "Remote Desktop",
       "from_port": 3389,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 3389
      },
      {
       "cidr_blocks": [
        "202.137.173.136/32"
       ],
       "description": "SSH",
       "from_port": 22,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 22
      }
     ],
     "name": "hcp-vault-demo-irukqoel-all-20230326205416578300000005",
     "name_prefix": "hcp-vault-demo-irukqoel-all-",
     "owner_id": "855831148133",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-all"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-all"
     },
     "timeouts": {
      "create": "10m",
      "delete": "15m"
     },
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [
        false
       ],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {},
     "timeouts": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "this_name_prefix",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Vault",
     "from_port": 8200,
     "id": "sgrule-1683148569",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8200,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Vault",
     "from_port": 8200,
     "id": "sgrule-1683148569",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8200,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "egress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTP",
     "from_port": 80,
     "id": "sgrule-3812331524",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 80,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTP",
     "from_port": 80,
     "id": "sgrule-3812331524",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 80,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "egress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTPS",
     "from_port": 443,
     "id": "sgrule-2309250818",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTPS",
     "from_port": 443,
     "id": "sgrule-2309250818",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "egress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[3]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "SSH",
     "from_port": 22,
     "id": "sgrule-1318974775",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "SSH",
     "from_port": 22,
     "id": "sgrule-1318974775",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": 3,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "egress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.egress_rules[4]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTPS",
     "from_port": 8443,
     "id": "sgrule-3177803617",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8443,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "HTTPS",
     "from_port": 8443,
     "id": "sgrule-3177803617",
     "ipv6_cidr_blocks": [
      "::/0"
     ],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8443,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": 4,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "egress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "Remote Desktop",
     "from_port": 3389,
     "id": "sgrule-2117798333",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-09da38a52bdbb7990",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 3389,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "Remote Desktop",
     "from_port": 3389,
     "id": "sgrule-2117798333",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-09da38a52bdbb7990",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 3389,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "ingress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTP",
     "from_port": 80,
     "id": "sgrule-2047611276",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-08af38cfb3413baba",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 80,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTP",
     "from_port": 80,
     "id": "sgrule-2047611276",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-08af38cfb3413baba",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 80,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "ingress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTPS",
     "from_port": 443,
     "id": "sgrule-2990499484",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0a9510e232478b71a",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTPS",
     "from_port": 443,
     "id": "sgrule-2990499484",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0a9510e232478b71a",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "ingress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[3]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "SSH",
     "from_port": 22,
     "id": "sgrule-1445541789",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0d5cf1142b30dbc14",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "SSH",
     "from_port": 22,
     "id": "sgrule-1445541789",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0d5cf1142b30dbc14",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 22,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    }
   },
   "index": 3,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "ingress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.sg-mgmt.aws_security_group_rule.ingress_rules[4]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTPS",
     "from_port": 8443,
     "id": "sgrule-3202049348",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0c07fcf1b1be7a925",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8443,
     "type": "ingress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "202.137.173.136/32"
     ],
     "description": "HTTPS",
     "from_port": 8443,
     "id": "sgrule-3202049348",
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d296ffafa864943d",
     "security_group_rule_id": "sgr-0c07fcf1b1be7a925",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 8443,
     "type": "ingress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "ipv6_cidr_blocks": [],
     "prefix_list_ids": []
    }
   },
   "index": 4,
   "mode": "managed",
   "module_address": "module.infra-aws.module.sg-mgmt",
   "name": "ingress_rules",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ec2_tag.this[\"Name\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "tgw-rtb-054fc4149f428c395,Name",
     "key": "Name",
     "resource_id": "tgw-rtb-054fc4149f428c395",
     "value": "hcp-vault-demo-irukqoel"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "tgw-rtb-054fc4149f428c395,Name",
     "key": "Name",
     "resource_id": "tgw-rtb-054fc4149f428c395",
     "value": "hcp-vault-demo-irukqoel"
    },
    "before_sensitive": {}
   },
   "index": "Name",
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ec2_tag"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "amazon_side_asn": 64512,
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "association_default_route_table_id": "tgw-rtb-054fc4149f428c395",
     "auto_accept_shared_attachments": "enable",
     "default_route_table_association": "enable",
     "default_route_table_propagation": "enable",
     "description": "hcp-vault-demo-irukqoel",
     "dns_support": "enable",
     "id": "tgw-01099067ffc4b2e61",
     "multicast_support": "disable",
     "owner_id": "855831148133",
     "propagation_default_route_table_id": "tgw-rtb-054fc4149f428c395",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "transit_gateway_cidr_blocks": [],
     "vpn_ecmp_support": "enable"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "transit_gateway_cidr_blocks": []
    },
    "after_unknown": {},
    "before": {
     "amazon_side_asn": 64512,
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "association_default_route_table_id": "tgw-rtb-054fc4149f428c395",
     "auto_accept_shared_attachments": "enable",
     "default_route_table_association": "enable",
     "default_route_table_propagation": "enable",
     "description": "hcp-vault-demo-irukqoel",
     "dns_support": "enable",
     "id": "tgw-01099067ffc4b2e61",
     "multicast_support": "disable",
     "owner_id": "855831148133",
     "propagation_default_route_table_id": "tgw-rtb-054fc4149f428c395",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "transit_gateway_cidr_blocks": [],
     "vpn_ecmp_support": "enable"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "transit_gateway_cidr_blocks": []
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ec2_transit_gateway"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_route_table.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway-route-table/tgw-rtb-06061a18ae86807c4",
     "default_association_route_table": false,
     "default_propagation_route_table": false,
     "id": "tgw-rtb-06061a18ae86807c4",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "transit_gateway_id": "tgw-01099067ffc4b2e61"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway-route-table/tgw-rtb-06061a18ae86807c4",
     "default_association_route_table": false,
     "default_propagation_route_table": false,
     "id": "tgw-rtb-06061a18ae86807c4",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "transit_gateway_id": "tgw-01099067ffc4b2e61"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ec2_transit_gateway_route_table"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ec2_transit_gateway_vpc_attachment.this[\"vpc1\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "appliance_mode_support": "disable",
     "dns_support": "enable",
     "id": "tgw-attach-06394757fd588d215",
     "ipv6_support": "disable",
     "subnet_ids": [
      "subnet-029c5ca58ff58d1d7",
      "subnet-0b0c433045e19828c",
      "subnet-0e235bd5870506158"
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "transit_gateway_default_route_table_association": true,
     "transit_gateway_default_route_table_propagation": true,
     "transit_gateway_id": "tgw-01099067ffc4b2e61",
     "vpc_id": "vpc-04f3e1e59d4facd4f",
     "vpc_owner_id": "855831148133"
    },
    "after_sensitive": {
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "appliance_mode_support": "disable",
     "dns_support": "enable",
     "id": "tgw-attach-06394757fd588d215",
     "ipv6_support": "disable",
     "subnet_ids": [
      "subnet-029c5ca58ff58d1d7",
      "subnet-0b0c433045e19828c",
      "subnet-0e235bd5870506158"
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "transit_gateway_default_route_table_association": true,
     "transit_gateway_default_route_table_propagation": true,
     "transit_gateway_id": "tgw-01099067ffc4b2e61",
     "vpc_id": "vpc-04f3e1e59d4facd4f",
     "vpc_owner_id": "855831148133"
    },
    "before_sensitive": {
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "vpc1",
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ec2_transit_gateway_vpc_attachment"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ram_principal_association.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,298208748192",
     "principal": "298208748192",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,298208748192",
     "principal": "298208748192",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ram_principal_association"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ram_resource_association.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "resource_arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec,arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "resource_arn": "arn:aws:ec2:ap-southeast-2:855831148133:transit-gateway/tgw-01099067ffc4b2e61",
     "resource_share_arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ram_resource_association"
  },
  {
   "address": "module.infra-aws.module.tgw.aws_ram_resource_share.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allow_external_principals": true,
     "arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "name": "hcp-vault-demo-irukqoel",
     "permission_arns": [
      "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionTransitGateway"
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "permission_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "allow_external_principals": true,
     "arn": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "id": "arn:aws:ram:ap-southeast-2:855831148133:resource-share/36f8481c-3122-43bb-bf62-9e06104498ec",
     "name": "hcp-vault-demo-irukqoel",
     "permission_arns": [
      "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionTransitGateway"
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "permission_arns": [
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.tgw",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ram_resource_share"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_eip.nat[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-013bb1d2a21e8adae",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-0b67156aff66dfe3c",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-013bb1d2a21e8adae",
     "instance": "",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-082fdb5480d50c5eb",
     "private_dns": "ip-10-200-10-140.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.140",
     "public_dns": "ec2-52-64-109-96.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "52.64.109.96",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-013bb1d2a21e8adae",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-0b67156aff66dfe3c",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-013bb1d2a21e8adae",
     "instance": "",
     "network_border_group": "ap-southeast-2",
     "network_interface": "eni-082fdb5480d50c5eb",
     "private_dns": "ip-10-200-10-140.ap-southeast-2.compute.internal",
     "private_ip": "10.200.10.140",
     "public_dns": "ec2-52-64-109-96.ap-southeast-2.compute.amazonaws.com",
     "public_ip": "52.64.109.96",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_internet_gateway.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:internet-gateway/igw-0ddd5b76ae1975ac0",
     "id": "igw-0ddd5b76ae1975ac0",
     "owner_id": "855831148133",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:internet-gateway/igw-0ddd5b76ae1975ac0",
     "id": "igw-0ddd5b76ae1975ac0",
     "owner_id": "855831148133",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_internet_gateway"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_nat_gateway.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "allocation_id": "eipalloc-013bb1d2a21e8adae",
     "connectivity_type": "public",
     "id": "nat-0c3cff73ae4448cf1",
     "network_interface_id": "eni-082fdb5480d50c5eb",
     "private_ip": "10.200.10.140",
     "public_ip": "52.64.109.96",
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-013bb1d2a21e8adae",
     "connectivity_type": "public",
     "id": "nat-0c3cff73ae4448cf1",
     "network_interface_id": "eni-082fdb5480d50c5eb",
     "private_ip": "10.200.10.140",
     "public_ip": "52.64.109.96",
     "subnet_id": "subnet-03475e20ee7be9fe2",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route.private_nat_gateway[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "",
     "id": "r-rtb-0678e0eba8978e44f1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "nat-0c3cff73ae4448cf1",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {},
    "before": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "",
     "id": "r-rtb-0678e0eba8978e44f1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "nat-0c3cff73ae4448cf1",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "before_sensitive": {
     "timeouts": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route.public_internet_gateway[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "igw-0ddd5b76ae1975ac0",
     "id": "r-rtb-0359582849d38acdd1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0359582849d38acdd",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {},
    "before": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "igw-0ddd5b76ae1975ac0",
     "id": "r-rtb-0359582849d38acdd1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-0359582849d38acdd",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "before_sensitive": {
     "timeouts": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public_internet_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0678e0eba8978e44f",
     "id": "rtb-0678e0eba8978e44f",
     "owner_id": "855831148133",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "nat-0c3cff73ae4448cf1",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0678e0eba8978e44f",
     "id": "rtb-0678e0eba8978e44f",
     "owner_id": "855831148133",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "nat-0c3cff73ae4448cf1",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0359582849d38acdd",
     "id": "rtb-0359582849d38acdd",
     "owner_id": "855831148133",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "igw-0ddd5b76ae1975ac0",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      },
      {
       "carrier_gateway_id": "",
       "cidr_block": "172.25.16.0/20",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "tgw-01099067ffc4b2e61",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [
      {},
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:route-table/rtb-0359582849d38acdd",
     "id": "rtb-0359582849d38acdd",
     "owner_id": "855831148133",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "igw-0ddd5b76ae1975ac0",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      },
      {
       "carrier_gateway_id": "",
       "cidr_block": "172.25.16.0/20",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "tgw-01099067ffc4b2e61",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [
      {},
      {}
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-05ddd2ba0b1fbe17e",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-0b0c433045e19828c"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-05ddd2ba0b1fbe17e",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-0b0c433045e19828c"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.private[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0b546365fc103c69e",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-029c5ca58ff58d1d7"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0b546365fc103c69e",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-029c5ca58ff58d1d7"
    },
    "before_sensitive": {}
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.private[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0d3d11fd8108abf0b",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-0e235bd5870506158"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0d3d11fd8108abf0b",
     "route_table_id": "rtb-0678e0eba8978e44f",
     "subnet_id": "subnet-0e235bd5870506158"
    },
    "before_sensitive": {}
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0f7ecbed0647ce96d",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-03475e20ee7be9fe2"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0f7ecbed0647ce96d",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-03475e20ee7be9fe2"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.public[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0664b390aa0eaa1a4",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-0594f0a7cb5d9addc"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0664b390aa0eaa1a4",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-0594f0a7cb5d9addc"
    },
    "before_sensitive": {}
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_route_table_association.public[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0618645d2b3686b2f",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-0b8c961533d7fae78"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0618645d2b3686b2f",
     "route_table_id": "rtb-0359582849d38acdd",
     "subnet_id": "subnet-0b8c961533d7fae78"
    },
    "before_sensitive": {}
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b0c433045e19828c",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2a",
     "availability_zone_id": "apse2-az3",
     "cidr_block": "10.200.20.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0b0c433045e19828c",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b0c433045e19828c",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2a",
     "availability_zone_id": "apse2-az3",
     "cidr_block": "10.200.20.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0b0c433045e19828c",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.private[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-029c5ca58ff58d1d7",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2b",
     "availability_zone_id": "apse2-az1",
     "cidr_block": "10.200.21.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-029c5ca58ff58d1d7",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-029c5ca58ff58d1d7",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2b",
     "availability_zone_id": "apse2-az1",
     "cidr_block": "10.200.21.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-029c5ca58ff58d1d7",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.private[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0e235bd5870506158",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2c",
     "availability_zone_id": "apse2-az2",
     "cidr_block": "10.200.22.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e235bd5870506158",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0e235bd5870506158",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2c",
     "availability_zone_id": "apse2-az2",
     "cidr_block": "10.200.22.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e235bd5870506158",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-private-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-03475e20ee7be9fe2",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2a",
     "availability_zone_id": "apse2-az3",
     "cidr_block": "10.200.10.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-03475e20ee7be9fe2",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-03475e20ee7be9fe2",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2a",
     "availability_zone_id": "apse2-az3",
     "cidr_block": "10.200.10.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-03475e20ee7be9fe2",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2a",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.public[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0594f0a7cb5d9addc",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2b",
     "availability_zone_id": "apse2-az1",
     "cidr_block": "10.200.11.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0594f0a7cb5d9addc",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0594f0a7cb5d9addc",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2b",
     "availability_zone_id": "apse2-az1",
     "cidr_block": "10.200.11.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0594f0a7cb5d9addc",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2b",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_subnet.public[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b8c961533d7fae78",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2c",
     "availability_zone_id": "apse2-az2",
     "cidr_block": "10.200.12.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0b8c961533d7fae78",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:subnet/subnet-0b8c961533d7fae78",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "ap-southeast-2c",
     "availability_zone_id": "apse2-az2",
     "cidr_block": "10.200.12.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0b8c961533d7fae78",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "855831148133",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel-public-ap-southeast-2c",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-04f3e1e59d4facd4f"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.infra-aws.module.vpc.aws_vpc.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:vpc/vpc-04f3e1e59d4facd4f",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.200.0.0/16",
     "default_network_acl_id": "acl-0424ebd92f2677c7d",
     "default_route_table_id": "rtb-05a77d173a1f91bfc",
     "default_security_group_id": "sg-0440b8e6a4da5b7f8",
     "dhcp_options_id": "dopt-0d500dd5e867008f0",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-04f3e1e59d4facd4f",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-05a77d173a1f91bfc",
     "owner_id": "855831148133",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:ap-southeast-2:855831148133:vpc/vpc-04f3e1e59d4facd4f",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.200.0.0/16",
     "default_network_acl_id": "acl-0424ebd92f2677c7d",
     "default_route_table_id": "rtb-05a77d173a1f91bfc",
     "default_security_group_id": "sg-0440b8e6a4da5b7f8",
     "dhcp_options_id": "dopt-0d500dd5e867008f0",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-04f3e1e59d4facd4f",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-05a77d173a1f91bfc",
     "owner_id": "855831148133",
     "tags": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     },
     "tags_all": {
      "Name": "hcp-vault-demo-irukqoel",
      "kubernetes.io/cluster/hcp-vault-demo-irukqoel": "shared"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.infra-aws.module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_vpc"
  }
 ],
 "terraform_version": "1.4.0",
 "variables": {
  "agent_image": {
   "value": "hashicorp/tfc-agent:latest"
  },
  "agent_log_level": {
   "value": "info"
  },
  "assign_public_ip": {
   "value": false
  },
  "aws_ami_hashicups_product_api_db": {
   "value": "ami-082c7add2ac0c19f6"
  },
  "aws_eks_cluster_service_cidr": {
   "value": "172.20.0.0/18"
  },
  "aws_eks_cluster_version": {
   "value": "1.22"
  },
  "aws_eks_worker_desired_capacity": {
   "value": 2
  },
  "aws_eks_worker_instance_type": {
   "value": "m5.large"
  },
  "aws_key_pair_key_name": {
   "value": "awsf5demo"
  },
  "aws_private_subnets": {
   "value": [
    "10.200.20.0/24",
    "10.200.21.0/24",
    "10.200.22.0/24"
   ]
  },
  "aws_public_subnets": {
   "value": [
    "10.200.10.0/24",
    "10.200.11.0/24",
    "10.200.12.0/24"
   ]
  },
  "aws_region": {
   "value": "ap-southeast-2"
  },
  "aws_vpc_cidr": {
   "value": "10.200.0.0/16"
  },
  "common_tags": {
   "value": {}
  },
  "cpu": {
   "value": 1024
  },
  "customer_domain": {
   "value": "f5demo.com"
  },
  "customername": {
   "value": "acme"
  },
  "deployment_name": {
   "value": "hcp-vault-demo"
  },
  "enable_logs": {
   "value": true
  },
  "gcp_gke_cluster_service_cidr": {
   "value": "172.20.0.0/18"
  },
  "gcp_gke_pod_subnet": {
   "value": "10.211.20.0/23"
  },
  "gcp_private_subnets": {
   "value": [
    "10.210.20.0/24",
    "10.210.21.0/24",
    "10.210.22.0/24"
   ]
  },
  "gcp_project_id": {
   "value": ""
  },
  "gcp_region": {
   "value": ""
  },
  "hcp_client_id": {
   "value": ""
  },
  "hcp_client_secret": {
   "value": ""
  },
  "hcp_hvn_cidr": {
   "value": "172.25.16.0/20"
  },
  "hcp_region": {
   "value": "ap-southeast-2"
  },
  "hcp_vault_tier": {
   "value": "dev"
  },
  "ingress_cidr_blocks": {
   "value": [
    "202.137.173.136/32"
   ]
  },
  "memory": {
   "value": 2048
  },
  "number_of_agents": {
   "value": 1
  },
  "organization": {
   "value": "hashi-demos-apj"
  },
  "owner": {
   "value": "srlynch"
  },
  "prefix": {
   "value": "bigip-aws-1nic"
  },
  "region": {
   "value": "us-east-1"
  },
  "ssh_pubkey": {
   "value": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII8wNgHtY1Lao00trZ8XoweIxa4F9T/wekoP2e2VzZPq simon.lynch@hashicorp.com"
  },
  "tfc_address": {
   "value": "https://app.terraform.io"
  },
  "tfc_agent_name": {
   "value": "ecs-agent"
  },
  "tfc_agent_prefix": {
   "value": "tfc_agent"
  },
  "tfc_agent_token": {
   "value": "qbSzJpcdS4bLKw.atlasv1.x7WCLcH0EHcaDZZ57uVhUf6ko8voPJYH9VlKeWJhF6MIkgGeIG6VZ4frDAHJNxUKGSM"
  },
  "tfc_agent_version": {
   "value": "1.4.0"
  },
  "ttl": {
   "value": "300"
  }
 }
}]